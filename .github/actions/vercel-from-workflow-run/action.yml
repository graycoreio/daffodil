name: vercel-from-workflow-run

inputs:
  artifact: 
    description: 'The name of the artifact to deploy to Vercel'
    required: true
  artifact-zip-name:
    required: false
    description: 'The name of the zip file in the artifact (omit if you do not store a zip INSIDE your artifact).'
    type: string
  vercel-token:
    reqired: true
    description: "A secret representing the used Vercel Token"
    type: string
  vercel-org:
    reqired: true
    description: "A secret representing the used Vercel Organization"
    type: string
  vercel-project-id:
    reqired: true
    description: "A secret representing the used Vercel Project ID"
    type: string

outputs:
  url:
    description: "The Vercel URL for the deployment"
    value: ${{ steps.vercel-deploy.outputs.url }}
    
runs:
  using: 'composite'
  steps:
  - run: rm -rf ${{ github.workspace }}/ && mkdir -p ${{ github.workspace }}/
    shell: bash
  - name: 'Download ${{ inputs.artifact }}'
    uses: actions/github-script@v3.1.0
    with:
      script: |
        var artifacts = await github.actions.listWorkflowRunArtifacts({
          owner: context.repo.owner,
          repo: context.repo.repo,
          run_id: ${{ github.event.workflow_run.id }},
        });
        var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
          return artifact.name == "${{ inputs.artifact }}"
        })[0];
        var download = await github.actions.downloadArtifact({
          owner: context.repo.owner,
          repo: context.repo.repo,
          artifact_id: matchArtifact.id,
          archive_format: 'zip',
        });
        var fs = require('fs');
        fs.writeFileSync('${{github.workspace}}/${{ inputs.artifact }}.zip', Buffer.from(download.data))
  
  - run: ls -Al .
    name: Review Folder
    shell: bash
        
  - run: unzip -q ${{ inputs.artifact }}.zip -d . && rm ${{ inputs.artifact }}.zip
    name: Unzip {{ inputs.artifact }}.zip
    shell: bash

  - run: ls -Al .
    name: Review Folder
    shell: bash

  - run: unzip -q ${{ inputs.artifact-zip-name }} -d . && rm ${{ inputs.artifact-zip-name }}
    name: Unzip ${{ inputs.artifact-zip-name }}
    shell: bash
  
  - run: ls -Al .
    name: Review Folder
    shell: bash

  - uses: graycoreio/github-actions/angular-universal-vercel@main
    id: vercel-deploy
    with:
      vercel_token: ${{ inputs.vercel-token }}
      vercel_org: ${{ inputs.vercel-org }}
      vercel_project_id: ${{ inputs.vercel-project-id }}
