{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@daffodil/category/actions/category.actions.ts","ng://@daffodil/category/models/category-filter-base.ts","ng://@daffodil/category/reducers/category/toggle-filter/util.ts","ng://@daffodil/category/reducers/category/toggle-filter/equal.ts","ng://@daffodil/category/reducers/category/toggle-filter/range.ts","ng://@daffodil/category/reducers/category/toggle-filter/core.ts","ng://@daffodil/category/reducers/category/toggle-filter/match.ts","ng://@daffodil/category/reducers/category/category.reducer.ts","ng://@daffodil/category/reducers/category-entities/category-entities-adapter.ts","ng://@daffodil/category/reducers/category-entities/category-entities.reducer.ts","ng://@daffodil/category/reducers/category-reducers.ts","ng://@daffodil/category/drivers/injection-tokens/category-driver.token.ts","ng://@daffodil/category/models/requests/filter-request.ts","ng://@daffodil/category/helpers/validate-filters.ts","ng://@daffodil/category/effects/category.effects.ts","ng://@daffodil/category/resolvers/category-page/default-category-page-size.token.ts","ng://@daffodil/category/resolvers/category-page/category-page.resolver.ts","ng://@daffodil/category/selectors/category-feature.selector.ts","ng://@daffodil/category/selectors/applied-filter/applied-filter-methods.ts","ng://@daffodil/category/selectors/category-page/category-page.selector.ts","ng://@daffodil/category/selectors/category-entities/category-entities.selector.ts","ng://@daffodil/category/selectors/category.selector.ts","ng://@daffodil/category/effects/category-page.effects.ts","ng://@daffodil/category/category-state.module.ts","ng://@daffodil/category/category.module.ts","ng://@daffodil/category/facades/category.facade.ts","ng://@daffodil/category/drivers/magento/queries/get-category.ts","ng://@daffodil/category/drivers/magento/queries/get-products.ts","ng://@daffodil/category/drivers/magento/models/requests/filters.ts","ng://@daffodil/category/drivers/magento/transformers/applied-filter-transformer.service.ts","ng://@daffodil/category/drivers/magento/models/requests/sort.ts","ng://@daffodil/category/models/requests/category-request.ts","ng://@daffodil/category/drivers/magento/transformers/applied-sort-option-transformer.service.ts","ng://@daffodil/category/drivers/magento/transformers/category-page-config-transformer.service.ts","ng://@daffodil/category/drivers/magento/transformers/pure/sort-default-option-first.ts","ng://@daffodil/category/drivers/magento/transformers/category-transformer.service.ts","ng://@daffodil/category/drivers/magento/transformers/category-response-transform.service.ts","ng://@daffodil/category/drivers/magento/queries/get-category-aggregations.ts","ng://@daffodil/category/drivers/magento/queries/custom-attribute-metadata.ts","ng://@daffodil/category/drivers/magento/transformers/custom-metadata-attributes-methods.ts","ng://@daffodil/category/drivers/magento/category.service.ts","ng://@daffodil/category/drivers/magento/category-driver.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__read","o","m","Symbol","iterator","e","ar","next","done","push","value","error","__spread","concat","__makeTemplateObject","cooked","raw","CategoryLoadAction","CategoryLoadSuccessAction","CategoryLoadFailureAction","CategoryPageLoadAction","CategoryPageLoadSuccessAction","CategoryPageLoadFailureAction","ChangeCategoryPageSizeAction","ChangeCategoryCurrentPageAction","ChangeCategorySortingOptionAction","ChangeCategoryFiltersAction","ToggleCategoryFilterAction","request","type","DaffCategoryActionTypes","response","errorMessage","pageSize","currentPage","sort","filters","filter","Match","Equal","Range","getAppliedFilterByName","name","appliedFilters","shift","toggledFilterNameExists","toggledFilter","find","addToExistingFilter","map","addEqualFilter","DaffCategoryFilterType","addNewEqualFilter","addRangeFilter","addNewRangeFilter","toggleCategoryFilter","filterMatchingName","filterValue","isRangeFilterApplied","isMatchFilterApplied","isFilterApplied","appliedFilter","removeRangeFilter","filterName","removeMatchFilter","removeFilter","addMatchFilter","addFilter","initialState","categoryPageConfigurationState","id","filter_requests","applied_sort_option","applied_sort_direction","current_page","page_size","total_pages","sort_options","total_products","product_ids","categoryLoading","productsLoading","errors","daffCategoryReducer","state","action","option","direction","daffCategoryEntitiesAdapter","createEntityAdapter","daffCategoryEntitiesReducer","getInitialState","upsertOne","category","daffCategoryReducers","categoryEntities","DaffCategoryDriver","InjectionToken","DaffCategoryFromToFilterSeparator","daffCategoryValidateFilters","forEach","split","Error","j","DaffCategoryEffects","actions$","driver","_this","loadCategory$","pipe","ofType","switchMap","get","resp","of","DaffProductGridLoadSuccess","products","DaffCategoryLoadSuccess","catchError","DaffCategoryLoadFailure","Injectable","Actions","Inject","args","tslib_1.__decorate","Effect","Observable","DaffDefaultCategoryPageSize","DaffCategoryPageResolver","platformId","defaultCategoryPageSize","store","dispatcher","resolve","route","dispatch","DaffCategoryPageLoad","paramMap","isPlatformBrowser","mapTo","take","providedIn","PLATFORM_ID","Store","ActionsSubject","cache","getDaffCategoryFeatureSelector","selectCategoryFeatureState","createFeatureSelector","buildAppliedFilterOptions","filterOptions","filterRequest","indexOf","label","buildAppliedFilterOptionsFromRangeRequest","buildAppliedFilterOptionsFromMatchRequest","createCategoryPageSelectors","selectCategoryState","createSelector","selectCategoryPageConfigurationState","selectCategoryCurrentPage","selectCategoryTotalPages","selectCategoryPageSize","selectCategoryFilters","selectCategorySortOptions","selectCategoryPageProductIds","selectIsCategoryPageEmpty","selectCategoryPageTotalProducts","selectCategoryPageFilterRequests","selectCategoryPageAppliedFilters","filterRequests","availableFilters","availableFilter","options","buildAppliedFilter","selectCategoryPageAppliedSortOption","selectCategoryPageAppliedSortDirection","selectSelectedCategoryId","selectCategoryLoading","selectCategoryProductsLoading","selectCategoryErrors","getDaffCategoryPageSelectors","createCategoryFeatureSelectors","entitiesSelectors","getSelectors","categoryFeatureState","selectCategoryEntitiesState","selectCategoryIds","selectIds","selectCategoryEntities","selectEntities","selectAllCategories","selectAll","selectCategoryTotal","selectTotal","getDaffCategoryEntitiesSelectors","createCategorySelectors","_a","product","getDaffProductSelectors","selectProductEntities","selectAllProducts","_b","selectSelectedCategory","entities","selectedCategoryId","selectCategoryPageProducts","ids","selectCategory","props","selectProductsByCategory","selectTotalProductsByCategory","projector","getDaffCategorySelectors","DaffCategoryPageEffects","categorySelectors","loadCategoryPage$","processCategoryGetRequest","changeCategoryPageSize$","withLatestFrom","select","categoryRequest","changeCategoryCurrentPage$","changeCategoryFilters$","toggleCategoryFilter$","changeCategorySort$","payload","DaffCategoryPageLoadSuccess","DaffCategoryPageLoadFailure","DaffCategoryStateModule","NgModule","imports","StoreModule","forFeature","EffectsModule","providers","provide","useValue","DaffCategoryModule","CommonModule","DaffProductModule","DaffCategoryFacade","category$","products$","totalProducts$","pageConfigurationState$","currentPage$","totalPages$","pageSize$","filters$","sortOptions$","appliedFilters$","appliedSortOption$","appliedSortDirection$","categoryLoading$","productsLoading$","errors$","isCategoryEmpty$","getCategoryById","getProductsByCategory","categoryId","getTotalProductsByCategory","MagentoGetCategoryQuery","gql","templateObject_1","MagentoGetProductsQuery","templateObject_1$1","magentoProductFragment","DaffMagentoAppliedFiltersTransformService","transform","daffFilters","magentoFilters","category_id","MagentoCategoryFilterActionEnum","fromToValues","getRangeFromValue","getRangeToValue","getFilterAction","getFilterValue","fromValue","toValue","Ascending","Decending","DaffMagentoAppliedSortOptionTransformService","appliedOption","appliedDirection","transformDirection","DaffSortDirectionEnum","MagentoSortDirectionEnum","DaffMagentoCategoryPageConfigTransformerService","categoryResponse","page_info","total_count","aggregates","transformAggregate","bind","sort_fields","index","findIndex","default","slice","sku","filterType","transformAggregateType","attribute_code","transformRangeValue","count","replace","DaffMagentoCategoryTransformerService","description","children_count","breadcrumbs","breadcrumb","transformBreadcrumb","a","b","categoryLevel","items","categoryName","category_name","category_level","categoryUrlKey","category_url_key","DaffMagentoCategoryResponseTransformService","magentoCategoryTransformerService","magentoCategoryPageConfigurationTransformerService","completeCategory","magentoCompleteCategoryResponse","transformManyMagentoProducts","MagentoGetCategoryAggregations","templateObject_1$2","MagentoGetCustomAttributeMetadata","templateObject_1$3","getMatchedAttributeType","aggregate","attributes","customAttributeMetadata","item","input_type","DaffMagentoCategoryService","apollo","magentoCategoryResponseTransformer","magentoAppliedFiltersTransformer","magentoAppliedSortTransformer","combineLatest","query","variables","eq","aggregationResult","data","aggregations","entity_type","attributeResponse","aggregationResponse","getProductsQueryVariables","result","buildCompleteCategoryResponse","finalResult","queryVariables","aggregationsAndSortsResponse","productsResponse","categoryList","Apollo","DaffCategoryMagentoDriverModule","forRoot","ngModule","useExisting"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Action } from '@ngrx/store';\n\nimport { DaffProduct } from '@daffodil/product';\n\nimport { DaffGetCategoryResponse } from '../models/get-category-response';\nimport { DaffCategoryRequest } from '../models/requests/category-request';\nimport { DaffCategoryFilterRequest, DaffToggleCategoryFilterRequest } from '../models/requests/filter-request';\nimport { DaffCategoryPageConfigurationState } from '../models/category-page-configuration-state';\nimport { DaffGenericCategory } from '../models/generic-category';\nimport { DaffCategory } from '../models/category';\n\nexport enum DaffCategoryActionTypes {\n  CategoryLoadAction = '[Daff-Category] Category Load Action',\n  CategoryLoadSuccessAction = '[Daff-Category] Category Load Success Action',\n  CategoryLoadFailureAction = '[Daff-Category] Category Load Failure Action',\n  CategoryPageLoadAction = '[Daff-Category] Category Page Load Action',\n  CategoryPageLoadSuccessAction = '[Daff-Category] Category Page Load Success Action',\n  CategoryPageLoadFailureAction = '[Daff-Category] Category Page Load Failure Action',\n  ChangeCategoryPageSizeAction = '[Daff-Category] Change Category Page Size Action',\n  ChangeCategoryCurrentPageAction = '[Daff-Category] Change Category Current Page Action',\n  ChangeCategorySortingOptionAction = '[Daff-Category] Change Category Sorting Option Action',\n\tChangeCategoryFiltersAction = '[Daff-Category] Change Category Filters Action',\n\tToggleCategoryFilterAction = '[Daff-Category] Toggle Category Filter Action'\n}\n\n/**\n * An action triggered to initialize a category load request.\n *\n * @param request - DaffCategoryRequest object\n */\nexport class DaffCategoryLoad<T extends DaffCategoryRequest = DaffCategoryRequest> implements Action {\n  readonly type = DaffCategoryActionTypes.CategoryLoadAction;\n\n  constructor(public request: T) { }\n}\n\n/**\n * An action triggered upon a successful category request.\n *\n * @param response - DaffGetCategoryResponse object\n */\nexport class DaffCategoryLoadSuccess<\n\tT extends DaffCategoryRequest = DaffCategoryRequest,\n\tV extends DaffGenericCategory<V> = DaffCategory,\n\tU extends DaffCategoryPageConfigurationState<T> = DaffCategoryPageConfigurationState<T>,\n\tW extends DaffProduct = DaffProduct\n> implements Action {\n  readonly type = DaffCategoryActionTypes.CategoryLoadSuccessAction;\n\n  constructor(public response: DaffGetCategoryResponse<T, V, U, W>) { }\n}\n\n/**\n * An action triggered upon a failed category request.\n *\n * @param errorMessage - an error message\n */\nexport class DaffCategoryLoadFailure implements Action {\n  readonly type = DaffCategoryActionTypes.CategoryLoadFailureAction;\n\n  constructor(public errorMessage: string) { }\n}\n\n/**\n * An action triggered to initialize a category page load request.\n * This is intended to be used for loading full category pages.\n *\n * @param request - DaffCategoryRequest object\n */\nexport class DaffCategoryPageLoad<T extends DaffCategoryRequest = DaffCategoryRequest> implements Action {\n  readonly type = DaffCategoryActionTypes.CategoryPageLoadAction;\n\n  constructor(public request: T) { }\n}\n\n/**\n * An action triggered upon a successful category page request.\n *\n * @param response - DaffGetCategoryResponse object\n */\nexport class DaffCategoryPageLoadSuccess<\n\tT extends DaffCategoryRequest = DaffCategoryRequest,\n\tV extends DaffGenericCategory<V> = DaffCategory,\n\tU extends DaffCategoryPageConfigurationState<T> = DaffCategoryPageConfigurationState<T>,\n\tW extends DaffProduct = DaffProduct\n> implements Action {\n  readonly type = DaffCategoryActionTypes.CategoryPageLoadSuccessAction;\n\n  constructor(public response: DaffGetCategoryResponse<T, V, U, W>) { }\n}\n\n/**\n * An action triggered upon a failed category page request.\n *\n * @param errorMessage - an error message\n */\nexport class DaffCategoryPageLoadFailure implements Action {\n  readonly type = DaffCategoryActionTypes.CategoryPageLoadFailureAction;\n\n  constructor(public errorMessage: string) { }\n}\n\n/**\n * An action for changing the number of products shown on each page for the selected category.\n *\n * @param pageSize - The number of products per page.\n */\nexport class DaffChangeCategoryPageSize implements Action {\n  readonly type = DaffCategoryActionTypes.ChangeCategoryPageSizeAction;\n\n  constructor(public pageSize: number) { }\n}\n\n/**\n * An action for changing the current page of products for the selected category.\n *\n * @param currentPage - The current page of products for the selected category.\n */\nexport class DaffChangeCategoryCurrentPage implements Action {\n  readonly type = DaffCategoryActionTypes.ChangeCategoryCurrentPageAction;\n\n  constructor(public currentPage: number) { }\n}\n\n/**\n * An action for changing the sorting option for the selected category.\n *\n * @param sort - The sort option to be applied.\n */\nexport class DaffChangeCategorySortingOption implements Action {\n  readonly type = DaffCategoryActionTypes.ChangeCategorySortingOptionAction;\n\n  constructor(\n\t\tpublic sort: {\n\t\t\toption: DaffCategoryRequest['applied_sort_option'],\n\t\t\tdirection: DaffCategoryRequest['applied_sort_direction']\n\t\t}\n\t) { }\n}\n\n/**\n * An action for changing the filters for the selected category.\n *\n * @param filters - Filters to be applied to the selected category.\n */\nexport class DaffChangeCategoryFilters implements Action {\n  readonly type = DaffCategoryActionTypes.ChangeCategoryFiltersAction;\n\n  constructor(public filters: DaffCategoryFilterRequest[]) { }\n}\n\n/**\n * An action for toggling a filters for the selected category.\n *\n * @param filter - Filter to be toggle on the selected category.\n */\nexport class DaffToggleCategoryFilter implements Action {\n  readonly type = DaffCategoryActionTypes.ToggleCategoryFilterAction;\n\n  constructor(public filter: DaffToggleCategoryFilterRequest) { }\n}\n\nexport type DaffCategoryActions<\n\tT extends DaffCategoryRequest = DaffCategoryRequest,\n\tU extends DaffGenericCategory<U> = DaffCategory,\n\tV extends DaffCategoryPageConfigurationState<T> = DaffCategoryPageConfigurationState<T>,\n\tW extends DaffProduct = DaffProduct\n> =\n  | DaffCategoryLoad<T>\n  | DaffCategoryLoadSuccess<T, U, V, W>\n  | DaffCategoryLoadFailure\n  | DaffCategoryPageLoad<T>\n  | DaffCategoryPageLoadSuccess<T, U, V, W>\n  | DaffCategoryPageLoadFailure\n\t| DaffChangeCategoryPageSize\n\t| DaffChangeCategoryCurrentPage\n  | DaffChangeCategorySortingOption\n  | DaffChangeCategoryFilters\n  | DaffToggleCategoryFilter;\n","export enum DaffCategoryFilterType {\n\tMatch = 'match',\n\tEqual = 'equal',\n\tRange = 'range'\n}\n\nexport interface DaffCategoryFilterBase {\n\tlabel: string;\n\tname: string;\n\ttype: DaffCategoryFilterType;\n}\n","import { DaffToggleCategoryFilterRequest, DaffCategoryFilterRequest, DaffCategoryFilterEqualRequest } from '../../../models/requests/filter-request';\n\nexport function getAppliedFilterByName(name: string, appliedFilters: DaffCategoryFilterRequest[]): DaffCategoryFilterRequest {\n\treturn appliedFilters.filter(filter => filter.name === name).shift();\n}\n\nexport function toggledFilterNameExists(toggledFilter: DaffToggleCategoryFilterRequest, appliedFilters: DaffCategoryFilterRequest[]): boolean {\n\treturn appliedFilters && !!appliedFilters.find(filter => filter.name === toggledFilter.name)\n}\n\nexport function addToExistingFilter(toggledFilter: DaffToggleCategoryFilterRequest, appliedFilters: DaffCategoryFilterRequest[])\n: DaffCategoryFilterRequest[] {\n\treturn appliedFilters.map(filter => {\n\t\tif(filter.name === toggledFilter.name) {\n\t\t\t(<DaffCategoryFilterEqualRequest>filter).value.push(toggledFilter.value)\n\t\t}\n\n\t\treturn filter;\n\t});\n}\n","import { DaffToggleCategoryFilterEqualRequest, DaffCategoryFilterRequest, DaffCategoryFilterEqualRequest } from '../../../models/requests/filter-request';\nimport { getAppliedFilterByName, toggledFilterNameExists, addToExistingFilter } from './util';\nimport { DaffCategoryFilterType } from '../../../models/category-filter-base';\n\nexport function isEqualFilterApplied(toggledFilter: DaffToggleCategoryFilterEqualRequest, appliedFilters: DaffCategoryFilterRequest[]): boolean {\n\tconst filterMatchingName = <DaffCategoryFilterEqualRequest>getAppliedFilterByName(toggledFilter.name, appliedFilters);\n\tif(filterMatchingName) {\n\t\treturn !!filterMatchingName.value.filter(filterValue => filterValue === toggledFilter.value).length;\n\t} else return false;\n}\n\nexport function removeEqualFilter(toggledFilter: DaffToggleCategoryFilterEqualRequest, appliedFilters: DaffCategoryFilterRequest[]): DaffCategoryFilterRequest[] {\n\treturn appliedFilters.map(appliedFilter => {\n\t\tif(appliedFilter.name === toggledFilter.name) {\n\t\t\tappliedFilter.value = (<DaffCategoryFilterEqualRequest>appliedFilter).value.filter(value => value !== toggledFilter.value);\n\t\t}\n\t\treturn appliedFilter;\n\t}).filter(filter => filter.type === DaffCategoryFilterType.Match || filter.value.length !== 0)\n}\n\nexport function addEqualFilter(toggledFilter: DaffToggleCategoryFilterEqualRequest, appliedFilters: DaffCategoryFilterRequest[])\n: DaffCategoryFilterRequest[] {\n\treturn toggledFilterNameExists(toggledFilter, appliedFilters) ?\n\t\taddToExistingFilter(toggledFilter, appliedFilters) :\n\t\taddNewEqualFilter(toggledFilter, appliedFilters);\n}\n\nexport function addNewEqualFilter(toggledFilter: DaffToggleCategoryFilterEqualRequest, appliedFilters: DaffCategoryFilterRequest[])\n: DaffCategoryFilterRequest[] {\n\treturn appliedFilters.concat([{\n\t\tname: toggledFilter.name,\n\t\tvalue: [toggledFilter.value],\n\t\ttype: DaffCategoryFilterType.Equal\n\t}]);\n}\n","import { DaffToggleCategoryFilterRangeRequest, DaffCategoryFilterRequest, DaffCategoryFilterRangeRequest } from '../../../models/requests/filter-request';\nimport { getAppliedFilterByName, toggledFilterNameExists, addToExistingFilter } from './util';\nimport { DaffCategoryFilterType } from '../../../models/category-filter-base';\n\nexport function isRangeFilterApplied(toggledFilter: DaffToggleCategoryFilterRangeRequest, appliedFilters: DaffCategoryFilterRequest[]): boolean {\n\tconst filterMatchingName = <DaffCategoryFilterRangeRequest>getAppliedFilterByName(toggledFilter.name, appliedFilters);\n\tif(filterMatchingName) {\n\t\treturn !!filterMatchingName.value.filter(filterValue => filterValue === toggledFilter.value).length;\n\t} else return false;\n}\n\nexport function removeRangeFilter(toggledFilter: DaffToggleCategoryFilterRangeRequest, appliedFilters: DaffCategoryFilterRequest[]): DaffCategoryFilterRequest[] {\n\treturn appliedFilters.map(appliedFilter => {\n\t\tif(appliedFilter.name === toggledFilter.name) {\n\t\t\tappliedFilter.value = (<DaffCategoryFilterRangeRequest>appliedFilter).value.filter(value => value !== toggledFilter.value);\n\t\t}\n\t\treturn appliedFilter;\n\t}).filter(filter => filter.type === DaffCategoryFilterType.Match || filter.value.length !== 0)\n}\n\nexport function addRangeFilter(toggledFilter: DaffToggleCategoryFilterRangeRequest, appliedFilters: DaffCategoryFilterRequest[])\n: DaffCategoryFilterRequest[] {\n\treturn toggledFilterNameExists(toggledFilter, appliedFilters) ?\n\t\taddToExistingFilter(toggledFilter, appliedFilters) :\n\t\taddNewRangeFilter(toggledFilter, appliedFilters);\n}\n\nexport function addNewRangeFilter(toggledFilter: DaffToggleCategoryFilterRangeRequest, appliedFilters: DaffCategoryFilterRequest[])\n: DaffCategoryFilterRequest[] {\n\treturn appliedFilters.concat([{\n\t\tname: toggledFilter.name,\n\t\tvalue: [toggledFilter.value],\n\t\ttype: DaffCategoryFilterType.Range\n\t}]);\n}\n","import { DaffToggleCategoryFilterRequest, DaffCategoryFilterRequest } from '../../../models/requests/filter-request';\nimport { DaffCategoryFilterType } from '../../../models/category-filter-base';\nimport { isEqualFilterApplied, removeEqualFilter, addEqualFilter } from './equal';\nimport { isRangeFilterApplied, removeRangeFilter, addRangeFilter } from './range';\nimport { isMatchFilterApplied, removeMatchFilter, addMatchFilter } from './match';\n\nexport function toggleCategoryFilter(\n\ttoggledFilter: DaffToggleCategoryFilterRequest, \n\tappliedFilters: DaffCategoryFilterRequest[]\n): DaffCategoryFilterRequest[] {\n\treturn isFilterApplied(toggledFilter, appliedFilters)\n\t\t? removeFilter(toggledFilter, appliedFilters)\n\t\t: addFilter(toggledFilter, appliedFilters)\n}\n\nexport function isFilterApplied(toggledFilter: DaffToggleCategoryFilterRequest, appliedFilters: DaffCategoryFilterRequest[]): boolean {\n\tswitch(toggledFilter.type) {\n\t\tcase(DaffCategoryFilterType.Equal) :\n\t\t\treturn isEqualFilterApplied(toggledFilter, appliedFilters);\n\t\tcase(DaffCategoryFilterType.Range) :\n\t\t\treturn isRangeFilterApplied(toggledFilter, appliedFilters);\n\t\tdefault :\n\t\t\treturn isMatchFilterApplied(toggledFilter, appliedFilters);\n\t}\n}\n\nexport function removeFilter(toggledFilter: DaffToggleCategoryFilterRequest, appliedFilters: DaffCategoryFilterRequest[])\n\t: DaffCategoryFilterRequest[] {\n\tswitch(toggledFilter.type) {\n\t\tcase(DaffCategoryFilterType.Equal) :\n\t\t\treturn removeEqualFilter(toggledFilter, appliedFilters);\n\t\tcase(DaffCategoryFilterType.Range) :\n\t\t\treturn removeRangeFilter(toggledFilter, appliedFilters);\n\t\tdefault :\n\t\t\treturn removeMatchFilter(toggledFilter, appliedFilters);\n\t}\n}\n\nexport function addFilter(toggledFilter: DaffToggleCategoryFilterRequest, appliedFilters: DaffCategoryFilterRequest[])\n\t: DaffCategoryFilterRequest[] {\n\tswitch(toggledFilter.type) {\n\t\tcase(DaffCategoryFilterType.Equal) :\n\t\t\treturn addEqualFilter(toggledFilter, appliedFilters);\n\t\tcase(DaffCategoryFilterType.Range) :\n\t\t\treturn addRangeFilter(toggledFilter, appliedFilters);\n\t\tdefault :\n\t\t\treturn addMatchFilter(toggledFilter, appliedFilters);\n\t}\n}\n","import { DaffToggleCategoryFilterMatchRequest, DaffCategoryFilterRequest } from '../../../models/requests/filter-request';\nimport { DaffCategoryFilterType } from '../../../models/category-filter-base';\nimport { getAppliedFilterByName } from './util';\n\nexport function isMatchFilterApplied(toggledFilter: DaffToggleCategoryFilterMatchRequest, appliedFilters: DaffCategoryFilterRequest[]): boolean {\n\treturn !!getAppliedFilterByName(toggledFilter.name, appliedFilters);\n}\n\nexport function removeMatchFilter(filterName: DaffToggleCategoryFilterMatchRequest, appliedFilters: DaffCategoryFilterRequest[]): DaffCategoryFilterRequest[] {\n\treturn appliedFilters.filter(filter => filter.name !== filterName.name)\n}\n\nexport function addMatchFilter(toggledFilter: DaffToggleCategoryFilterMatchRequest, appliedFilters: DaffCategoryFilterRequest[])\n: DaffCategoryFilterRequest[] {\n\treturn appliedFilters.concat([{\n\t\tname: toggledFilter.name,\n\t\tvalue: toggledFilter.value,\n\t\ttype: DaffCategoryFilterType.Match\n\t}]);\n}\n","import { DaffProduct } from '@daffodil/product';\n\nimport { DaffCategoryActionTypes, DaffCategoryActions } from '../../actions/category.actions';\nimport { DaffCategoryReducerState } from './category-reducer-state.interface';\nimport { toggleCategoryFilter } from './toggle-filter/core';\nimport { DaffCategoryRequest } from '../../models/requests/category-request';\nimport { DaffCategoryPageConfigurationState } from '../../models/category-page-configuration-state';\nimport { DaffGenericCategory } from '../../models/generic-category';\n\nconst initialState: DaffCategoryReducerState<any, any> = {\n\tcategoryPageConfigurationState: {\n    id: null,\n\t\tfilter_requests: [],\n    applied_sort_option: null,\n    applied_sort_direction: null,\n    current_page: null,\n    page_size: null,\n    total_pages: null,\n    filters: [],\n\t\tsort_options: [],\n\t\ttotal_products: null,\n\t\tproduct_ids: []\n\t},\n\tcategoryLoading: false,\n\tproductsLoading: false,\n  errors: []\n};\n\nexport function daffCategoryReducer<T extends DaffCategoryRequest, U extends DaffGenericCategory<U>, V extends DaffCategoryPageConfigurationState<T>, W extends DaffProduct>\n\t(state = initialState, action: DaffCategoryActions<T, U, V, W>): DaffCategoryReducerState<T, V> {\n  switch (action.type) {\n    case DaffCategoryActionTypes.CategoryLoadAction:\n      return {\n        ...state,\n\t\t\t\tcategoryLoading: true,\n\t\t\t\tproductsLoading: true,\n      };\n\n    // This reducer must assume the call will be successful, and immediately set the applied filters to state, because the\n    // GetCategory magento call doesn't return currently applied filters. If there is a bug where the wrong filters are somehow\n    // applied by Magento, then this will result in a bug. Until Magento returns applied filters with a category call, this is\n    // unavoidable.\n    case DaffCategoryActionTypes.CategoryPageLoadAction:\n      return {\n        ...state,\n\t\t\t\tcategoryLoading: true,\n\t\t\t\tproductsLoading: true,\n        categoryPageConfigurationState: {\n          ...state.categoryPageConfigurationState,\n          ...action.request\n\t\t\t\t}\n\t\t\t};\n\t\tcase DaffCategoryActionTypes.ChangeCategoryPageSizeAction:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tproductsLoading: true,\n\t\t\t\tcategoryPageConfigurationState: {\n\t\t\t\t\t...state.categoryPageConfigurationState,\n\t\t\t\t\tpage_size: action.pageSize\n\t\t\t\t}\n\t\t\t};\n\t\tcase DaffCategoryActionTypes.ChangeCategoryCurrentPageAction:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tproductsLoading: true,\n\t\t\t\tcategoryPageConfigurationState: {\n\t\t\t\t\t...state.categoryPageConfigurationState,\n\t\t\t\t\tcurrent_page: action.currentPage\n\t\t\t\t}\n\t\t\t};\n\t\tcase DaffCategoryActionTypes.ChangeCategorySortingOptionAction:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tproductsLoading: true,\n\t\t\t\tcategoryPageConfigurationState: {\n\t\t\t\t\t...state.categoryPageConfigurationState,\n\t\t\t\t\tapplied_sort_option: action.sort.option,\n\t\t\t\t\tapplied_sort_direction: action.sort.direction\n\t\t\t\t}\n\t\t\t};\n\t\tcase DaffCategoryActionTypes.ChangeCategoryFiltersAction:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tproductsLoading: true,\n\t\t\t\tcategoryPageConfigurationState: {\n\t\t\t\t\t...state.categoryPageConfigurationState,\n\t\t\t\t\tfilter_requests: action.filters\n\t\t\t\t}\n\t\t\t};\n\t\tcase DaffCategoryActionTypes.ToggleCategoryFilterAction:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tproductsLoading: true,\n\t\t\t\tcategoryPageConfigurationState: {\n\t\t\t\t\t...state.categoryPageConfigurationState,\n\t\t\t\t\tfilter_requests: toggleCategoryFilter(action.filter, state.categoryPageConfigurationState.filter_requests)\n\t\t\t\t}\n\t\t\t}\n    // This reducer cannot spread over state, because this would wipe out the applied filters on state. Applied filters are not\n    // set here for reasons stated above.\n\t\tcase DaffCategoryActionTypes.CategoryLoadSuccessAction:\n\t\tcase DaffCategoryActionTypes.CategoryPageLoadSuccessAction:\n      return {\n        ...state,\n\t\t\t\tcategoryLoading: false,\n\t\t\t\tproductsLoading: false,\n        categoryPageConfigurationState: {\n          ...state.categoryPageConfigurationState,\n          id: action.response.categoryPageConfigurationState.id,\n          current_page: action.response.categoryPageConfigurationState.current_page,\n          page_size: action.response.categoryPageConfigurationState.page_size,\n          filters: action.response.categoryPageConfigurationState.filters,\n          sort_options: action.response.categoryPageConfigurationState.sort_options,\n\t\t\t\t\ttotal_pages: action.response.categoryPageConfigurationState.total_pages,\n\t\t\t\t\ttotal_products: action.response.categoryPageConfigurationState.total_products,\n\t\t\t\t\tproduct_ids: action.response.categoryPageConfigurationState.product_ids\n        }\n      };\n    case DaffCategoryActionTypes.CategoryLoadFailureAction:\n    case DaffCategoryActionTypes.CategoryPageLoadFailureAction:\n      return {\n        ...state,\n\t\t\t\tcategoryLoading: false,\n\t\t\t\tproductsLoading: false,\n        errors: [action.errorMessage]\n      };\n    default:\n      return state;\n  }\n}\n","import { EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { DaffGenericCategory } from '../../models/generic-category';\nimport { DaffCategory } from '../../models/category';\n\nexport function daffCategoryEntitiesAdapter<T extends DaffGenericCategory<T> = DaffCategory>(): EntityAdapter<T> {\n\treturn createEntityAdapter<T>();\n} ","import { EntityState } from '@ngrx/entity';\n\nimport { DaffProduct } from '@daffodil/product';\n\nimport { daffCategoryEntitiesAdapter } from './category-entities-adapter';\nimport { DaffCategoryActionTypes, DaffCategoryActions } from '../../actions/category.actions';\nimport { DaffCategoryRequest } from '../../models/requests/category-request';\nimport { DaffCategoryPageConfigurationState } from '../../models/category-page-configuration-state';\nimport { DaffGenericCategory } from '../../models/generic-category';\nimport { DaffCategory } from '../../models/category';\n\nexport function daffCategoryEntitiesReducer<\n\tT extends DaffCategoryRequest = DaffCategoryRequest,\n\tV extends DaffGenericCategory<V> = DaffCategory,\n\tU extends DaffCategoryPageConfigurationState<T> = DaffCategoryPageConfigurationState<T>,\n\tW extends DaffProduct = DaffProduct\n>(\n  state = daffCategoryEntitiesAdapter<V>().getInitialState(),\n\taction: DaffCategoryActions<T, V, U, W>\n): EntityState<V> {\n  switch (action.type) {\n    case DaffCategoryActionTypes.CategoryLoadSuccessAction:\n    case DaffCategoryActionTypes.CategoryPageLoadSuccessAction:\n      return daffCategoryEntitiesAdapter<V>().upsertOne(\n        {\n          id: action.response.category.id,\n          ...action.response.category\n        },\n        state\n      );\n    default:\n      return state;\n  }\n}\n","import { daffCategoryReducer } from './category/category.reducer';\nimport { daffCategoryEntitiesReducer } from './category-entities/category-entities.reducer';\n\nexport const daffCategoryReducers = {\n\tcategory: daffCategoryReducer,\n\tcategoryEntities: daffCategoryEntitiesReducer\n};\n","import { InjectionToken } from '@angular/core';\n\nexport const DaffCategoryDriver = new InjectionToken('DaffCategoryDriver');\n","import { DaffCategoryFilterType } from '../category-filter-base';\n\n/**\n * The separator between a range type filter's values\n * e.g. \"price\": \"30-40\"\n */\nexport const DaffCategoryFromToFilterSeparator = '-';\n\nexport interface DaffToggleCategoryFilterMatchRequest {\n\ttype: DaffCategoryFilterType.Match;\n\tname: string;\n\tvalue: string;\n}\n\nexport interface DaffToggleCategoryFilterEqualRequest {\n\ttype: DaffCategoryFilterType.Equal;\n\tname: string;\n\tvalue: string;\n}\n\nexport interface DaffToggleCategoryFilterRangeRequest {\n\ttype: DaffCategoryFilterType.Range;\n\tname: string;\n\tvalue: string;\n}\n\nexport interface DaffCategoryFilterEqualRequest {\n\ttype: DaffCategoryFilterType.Equal;\n\tname: string;\n\tvalue: string[];\n}\n\nexport interface DaffCategoryFilterMatchRequest {\n\ttype: DaffCategoryFilterType.Match;\n\tname: string;\n\tvalue: string;\n}\n\nexport interface DaffCategoryFilterRangeRequest {\n\ttype: DaffCategoryFilterType.Range;\n\tname: string;\n\tvalue: string[];\n}\n\nexport type DaffToggleCategoryFilterRequest =\n\tDaffToggleCategoryFilterMatchRequest |\n\tDaffToggleCategoryFilterEqualRequest |\n\tDaffToggleCategoryFilterRangeRequest;\n\nexport type DaffCategoryFilterRequest =\n\tDaffCategoryFilterMatchRequest |\n\tDaffCategoryFilterEqualRequest |\n\tDaffCategoryFilterRangeRequest;\n","import { DaffCategoryFilterType } from '../models/category-filter-base';\nimport { DaffCategoryFilterRequest, DaffCategoryFromToFilterSeparator } from '../models/requests/filter-request';\n\nexport function daffCategoryValidateFilters(filters: DaffCategoryFilterRequest[]): void {\n  if(!filters) return;\n  filters.forEach((filter, i) => {\n    if(filter.type === DaffCategoryFilterType.Range &&\n      filter.value[0].split(DaffCategoryFromToFilterSeparator).length !== 2) {\n      throw new Error('Category range filter is in an invalid format. Should be **-**');\n    }\n\n    for(let j=i+1; j < filters.length; j++) {\n      if(filters[i].name === filters[j].name) {\n        throw new Error('More than one category filter of the same name exists. These should' +\n          ' be combined into a single filter action with multiple values.')\n      }\n    }\n  })\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { switchMap, catchError } from 'rxjs/operators';\nimport { of, Observable } from 'rxjs';\n\nimport { DaffProductGridLoadSuccess, DaffProduct } from '@daffodil/product';\n\nimport {\n  DaffCategoryActionTypes,\n  DaffCategoryLoad,\n  DaffCategoryLoadSuccess,\n  DaffCategoryLoadFailure,\n} from '../actions/category.actions';\nimport { DaffCategoryDriver } from '../drivers/injection-tokens/category-driver.token';\nimport { DaffCategoryServiceInterface } from '../drivers/interfaces/category-service.interface';\nimport { DaffGetCategoryResponse } from '../models/get-category-response';\nimport { DaffCategoryRequest } from '../models/requests/category-request';\nimport { DaffCategoryPageConfigurationState } from '../models/category-page-configuration-state';\nimport { DaffGenericCategory } from '../models/generic-category';\nimport { daffCategoryValidateFilters } from '../helpers/public_api';\n\n@Injectable()\nexport class DaffCategoryEffects<\n\tT extends DaffCategoryRequest,\n\tV extends DaffGenericCategory<V>,\n\tU extends DaffCategoryPageConfigurationState<T>,\n\tW extends DaffProduct\n> {\n\n  constructor(\n    private actions$: Actions,\n    @Inject(DaffCategoryDriver) private driver: DaffCategoryServiceInterface<T, V, U, W>,\n\t) {}\n\n  @Effect()\n  loadCategory$ : Observable<any> = this.actions$.pipe(\n    ofType(DaffCategoryActionTypes.CategoryLoadAction),\n    switchMap((action: DaffCategoryLoad<T>) => {\n\t\t\tdaffCategoryValidateFilters(action.request.filter_requests);\n      return this.driver.get(action.request).pipe(\n        switchMap((resp: DaffGetCategoryResponse<T, V, U, W>) => of(\n          new DaffProductGridLoadSuccess(resp.products),\n          new DaffCategoryLoadSuccess(resp)\n        )),\n        catchError(error => of(new DaffCategoryLoadFailure('Failed to load the category')))\n      )\n    })\n  )\n}\n","import { InjectionToken } from '@angular/core';\n\n/**\n * A token to define the default category page size on a category page load. This value is 12 by default.\n */\nexport const DaffDefaultCategoryPageSize = new InjectionToken<number>('DaffDefaultCategoryPageSize');\n","import { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core'\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router'\nimport { ofType } from '@ngrx/effects';\nimport { ActionsSubject, Store } from '@ngrx/store';\nimport { Observable, of } from 'rxjs'\nimport { mapTo, take } from 'rxjs/operators';\n\nimport { DaffCategoryActionTypes, DaffCategoryPageLoad } from '../../actions/category.actions';\nimport { DaffCategoryReducersState } from '../../reducers/category-reducers.interface';\nimport { DaffDefaultCategoryPageSize } from './default-category-page-size.token';\n\n/**\n * Resolves category data for category pages, and will only resolve the url after a category request succeeds or fails. This resolver expects a url\n * of the form `some/url/{id}` where `{id}` is the category id.\n */\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class DaffCategoryPageResolver implements Resolve<Observable<boolean>> {\n  constructor(\n\t\t@Inject(PLATFORM_ID) private platformId: string,\n\t\t@Inject(DaffDefaultCategoryPageSize) private defaultCategoryPageSize: number,\n    private store: Store<DaffCategoryReducersState>,\n    private dispatcher: ActionsSubject,\n\t) {}\n\t\n\tresolve(route: ActivatedRouteSnapshot): Observable<boolean> {\n\t\tthis.store.dispatch(new DaffCategoryPageLoad({\n      id: route.paramMap.get('id'), page_size: this.defaultCategoryPageSize\n\t\t}));\n\n\t\treturn isPlatformBrowser(this.platformId) ? of(true) : this.dispatcher.pipe(\n\t\t\tofType(DaffCategoryActionTypes.CategoryPageLoadSuccessAction, DaffCategoryActionTypes.CategoryPageLoadFailureAction),\n\t\t\tmapTo(true),\n\t\t\ttake(1)\n\t\t);\n\t}\n}\n","import { createFeatureSelector, MemoizedSelector } from '@ngrx/store';\n\nimport { DaffGenericCategory } from '../models/generic-category';\nimport { DaffCategoryRequest } from '../models/requests/category-request';\nimport { DaffCategoryReducersState } from '../reducers/category-reducers.interface';\nimport { DaffCategoryPageConfigurationState } from '../models/category-page-configuration-state';\nimport { DaffCategory } from '../models/category';\n\nexport interface DaffCategoryFeatureMemoizedSelectors<\n\tT extends DaffCategoryRequest = DaffCategoryRequest, \n\tV extends DaffGenericCategory<V> = DaffCategory, \n\tU extends DaffCategoryPageConfigurationState<T> = DaffCategoryPageConfigurationState<T>\n> {\n\tselectCategoryFeatureState: MemoizedSelector<object, DaffCategoryReducersState<T, V, U>>;\n}\n\nexport const getDaffCategoryFeatureSelector = (() => {\n\tlet cache;\n\treturn <T extends DaffCategoryRequest, V extends DaffGenericCategory<V>, U extends DaffCategoryPageConfigurationState<T>>(): DaffCategoryFeatureMemoizedSelectors<T, V, U> => cache = cache \n\t\t? cache \n\t\t: { selectCategoryFeatureState: createFeatureSelector<DaffCategoryReducersState<T, V, U>>('category') };\n})();\n","import { DaffCategoryFilterOption, DaffCategoryFilter } from '../../models/category-filter';\nimport { DaffCategoryAppliedFilterOption, DaffCategoryAppliedFilter } from '../../models/category-applied-filter';\nimport { DaffCategoryFilterRangeRequest, DaffCategoryFilterMatchRequest, DaffCategoryFilterEqualRequest, DaffCategoryFilterRequest } from '../../models/requests/filter-request';\nimport { DaffCategoryFilterType } from '../../models/category-filter-base';\n\nexport function buildAppliedFilter(filter: DaffCategoryFilter, request: DaffCategoryFilterRequest): DaffCategoryAppliedFilter {\n\treturn {\n\t\tname: request.name,\n\t\ttype: request.type,\n\t\tlabel: filter.label,\n\t\toptions: buildAppliedFilterOptions(filter.options, request)\n\t}\n}\n\nfunction buildAppliedFilterOptions(filterOptions: DaffCategoryFilterOption[], filterRequest: DaffCategoryFilterRequest): DaffCategoryAppliedFilterOption[] {\n\tswitch(filterRequest.type) {\n\t\tcase(DaffCategoryFilterType.Equal) :\n\t\t\treturn buildAppliedFilterOptionsFromEqualRequest(filterOptions, filterRequest);\n\t\tcase(DaffCategoryFilterType.Range) :\n\t\t\treturn buildAppliedFilterOptionsFromRangeRequest(filterOptions, filterRequest);\n\t\tcase(DaffCategoryFilterType.Match) :\n\t\t\treturn buildAppliedFilterOptionsFromMatchRequest(filterOptions, filterRequest);\n\t}\n}\n\nfunction buildAppliedFilterOptionsFromEqualRequest(\n\tfilterOptions: DaffCategoryFilterOption[], filterRequest: DaffCategoryFilterEqualRequest\n): DaffCategoryAppliedFilterOption[] {\n\treturn filterOptions\n\t\t.filter(option => filterRequest.value.indexOf(option.value) > -1)\n\t\t.map(option => {\n\t\t\treturn {\n\t\t\t\tvalue: option.value,\n\t\t\t\tlabel: option.label\n\t\t\t}\n\t\t})\n}\n\nfunction buildAppliedFilterOptionsFromRangeRequest(\n\tfilterOptions: DaffCategoryFilterOption[], filterRequest: DaffCategoryFilterRangeRequest\n): DaffCategoryAppliedFilterOption[] {\n\treturn filterOptions\n\t.filter(option => filterRequest.value.indexOf(option.value) > -1)\n\t.map(option => {\n\t\treturn {\n\t\t\tvalue: option.value,\n\t\t\tlabel: option.label\n\t\t}\n\t})\n}\n\nfunction buildAppliedFilterOptionsFromMatchRequest(\n\tfilterOptions: DaffCategoryFilterOption[], filterRequest: DaffCategoryFilterMatchRequest\n): DaffCategoryAppliedFilterOption[] {\n\treturn filterOptions\n\t.filter(option => filterRequest.value === option.value)\n\t.map(option => {\n\t\treturn {\n\t\t\tvalue: option.value,\n\t\t\tlabel: option.label\n\t\t}\n\t})\n}\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\n\nimport { DaffCategoryRequest } from '../../models/requests/category-request';\nimport { DaffGenericCategory } from '../../models/generic-category';\nimport { DaffCategoryPageConfigurationState } from '../../models/category-page-configuration-state';\nimport { DaffCategoryReducerState } from '../../reducers/category/category-reducer-state.interface';\nimport { DaffCategoryAppliedFilter } from '../../models/category-applied-filter';\nimport { DaffCategoryReducersState } from '../../reducers/category-reducers.interface';\nimport { getDaffCategoryFeatureSelector } from '../category-feature.selector';\nimport { DaffCategoryFilterRequest } from '../../models/requests/filter-request';\nimport { DaffCategoryFilter } from '../../models/category-filter';\nimport { buildAppliedFilter } from '../applied-filter/applied-filter-methods';\nimport { DaffCategory } from '../../models/category';\n\nexport interface DaffCategoryPageMemoizedSelectors<\n\tT extends DaffCategoryRequest = DaffCategoryRequest, \n\tV extends DaffGenericCategory<V> = DaffCategory, \n\tU extends DaffCategoryPageConfigurationState<T> = DaffCategoryPageConfigurationState<T>\n> {\n\tselectCategoryState: MemoizedSelector<object, DaffCategoryReducerState<T, U>>;\n\tselectCategoryPageConfigurationState: MemoizedSelector<object, U>;\n\tselectCategoryCurrentPage: MemoizedSelector<object, U['current_page']>;\n\tselectCategoryTotalPages: MemoizedSelector<object, U['total_pages']>;\n\tselectCategoryPageSize: MemoizedSelector<object, U['page_size']>;\n\tselectCategoryFilters: MemoizedSelector<object, U['filters']>;\n\tselectCategorySortOptions: MemoizedSelector<object, U['sort_options']>;\n\tselectCategoryPageProductIds: MemoizedSelector<object, U['product_ids']>;\n\tselectIsCategoryPageEmpty: MemoizedSelector<object, boolean>;\n\tselectCategoryPageTotalProducts: MemoizedSelector<object, U['total_products']>;\n\tselectCategoryPageFilterRequests: MemoizedSelector<object, U['filter_requests']>;\n\tselectCategoryPageAppliedFilters: MemoizedSelector<object, DaffCategoryAppliedFilter[]>;\n\tselectCategoryPageAppliedSortOption: MemoizedSelector<object, U['applied_sort_option']>;\n\tselectCategoryPageAppliedSortDirection: MemoizedSelector<object, U['applied_sort_direction']>;\n\tselectSelectedCategoryId: MemoizedSelector<object, U['id']>;\n\tselectCategoryLoading: MemoizedSelector<object, boolean>;\n\tselectCategoryProductsLoading: MemoizedSelector<object, boolean>;\n\tselectCategoryErrors: MemoizedSelector<object, string[]>;\n}\n\nconst createCategoryPageSelectors = <T extends DaffCategoryRequest, V extends DaffGenericCategory<V>, U extends DaffCategoryPageConfigurationState<T>>(): DaffCategoryPageMemoizedSelectors<T, V, U> => {\n\tconst selectCategoryFeatureState = getDaffCategoryFeatureSelector<T, V, U>().selectCategoryFeatureState;\n\n\t/**\n\t * Category State\n\t */\n\tconst selectCategoryState = createSelector(\n\t\tselectCategoryFeatureState,\n\t\t(state: DaffCategoryReducersState<T, V, U>) => state.category\n\t);\n\n\t/**\n\t * CategoryPageConfigurationState State\n\t */\n\tconst selectCategoryPageConfigurationState = createSelector(\n\t\tselectCategoryState,\n\t\t(state: DaffCategoryReducerState<T, U>) => state.categoryPageConfigurationState\n\t);\n\n\tconst selectCategoryCurrentPage = createSelector(\n\t\tselectCategoryPageConfigurationState,\n\t\t(state: U) => state.current_page\n\t);\n\n\tconst selectCategoryTotalPages = createSelector(\n\t\tselectCategoryPageConfigurationState,\n\t\t(state: U) => state.total_pages\n\t);\n\n\tconst selectCategoryPageSize = createSelector(\n\t\tselectCategoryPageConfigurationState,\n\t\t(state: U) => state.page_size\n\t);\n\n\tconst selectCategoryFilters = createSelector(\n\t\tselectCategoryPageConfigurationState,\n\t\t(state: U) => state.filters\n\t);\n\n\tconst selectCategorySortOptions = createSelector(\n\t\tselectCategoryPageConfigurationState,\n\t\t(state: U) => state.sort_options\n\t);\n\n\tconst selectCategoryPageProductIds = createSelector(\n\t\tselectCategoryPageConfigurationState,\n\t\t(state: U) => state.product_ids\n\t);\n\n\tconst selectIsCategoryPageEmpty = createSelector(\n\t\tselectCategoryPageProductIds,\n\t\t(state: V['product_ids']) => !state.length\n\t);\n\n\tconst selectCategoryPageTotalProducts = createSelector(\n\t\tselectCategoryPageConfigurationState,\n\t\t(state: U) => state.total_products\n\t);\n\n\tconst selectCategoryPageFilterRequests = createSelector(\n\t\tselectCategoryPageConfigurationState,\n\t\t(state: U) => state.filter_requests\n\t);\n\n\tconst selectCategoryPageAppliedFilters = createSelector(\n\t\tselectCategoryPageFilterRequests,\n\t\tselectCategoryFilters,\n\t\t(filterRequests: DaffCategoryFilterRequest[], availableFilters: DaffCategoryFilter[]): DaffCategoryAppliedFilter[] => {\n\t\t\tif(!availableFilters.length) return [];\n\t\t\treturn filterRequests.map(request => \n\t\t\t\tavailableFilters\n\t\t\t\t\t.filter(availableFilter => availableFilter.name === request.name)\n\t\t\t\t\t.map(filter => buildAppliedFilter(filter, request)).shift()\n\t\t\t);\n\t\t}\n\t);\n\n\tconst selectCategoryPageAppliedSortOption = createSelector(\n\t\tselectCategoryPageConfigurationState,\n\t\t(state: U) => state.applied_sort_option\n\t);\n\n\tconst selectCategoryPageAppliedSortDirection = createSelector(\n\t\tselectCategoryPageConfigurationState,\n\t\t(state: U) => state.applied_sort_direction\n\t);\n\n\t/**\n\t * Selected Category Id State\n\t */\n\tconst selectSelectedCategoryId = createSelector(\n\t\tselectCategoryPageConfigurationState,\n\t\t(state: U) => state.id\n\t);\n\n\t/**\n\t * Category Loading State\n\t */\n\tconst selectCategoryLoading = createSelector(\n\t\tselectCategoryState,\n\t\t(state: DaffCategoryReducerState<T, U>) => state.categoryLoading\n\t);\n\n\t/**\n\t * Category Products Loading State\n\t */\n\tconst selectCategoryProductsLoading = createSelector(\n\t\tselectCategoryState,\n\t\t(state: DaffCategoryReducerState<T, U>) => state.productsLoading\n\t);\n\n\t/**\n\t * Load Category Errors\n\t */\n\tconst selectCategoryErrors = createSelector(\n\t\tselectCategoryState,\n\t\t(state: DaffCategoryReducerState<T, U>) => state.errors\n\t);\n\n\treturn { \n\t\tselectCategoryState,\n\t\tselectCategoryPageConfigurationState,\n\t\tselectCategoryCurrentPage,\n\t\tselectCategoryTotalPages,\n\t\tselectCategoryPageSize,\n\t\tselectCategoryFilters,\n\t\tselectCategorySortOptions,\n\t\tselectCategoryPageProductIds,\n\t\tselectIsCategoryPageEmpty,\n\t\tselectCategoryPageTotalProducts,\n\t\tselectCategoryPageFilterRequests,\n\t\tselectCategoryPageAppliedFilters,\n\t\tselectCategoryPageAppliedSortOption,\n\t\tselectCategoryPageAppliedSortDirection,\n\t\tselectSelectedCategoryId,\n\t\tselectCategoryLoading,\n\t\tselectCategoryProductsLoading,\n\t\tselectCategoryErrors\n\t}\n}\n\nexport const getDaffCategoryPageSelectors = (() => {\n\tlet cache;\n\treturn <T extends DaffCategoryRequest, V extends DaffGenericCategory<V>, U extends DaffCategoryPageConfigurationState<T>>(): DaffCategoryPageMemoizedSelectors<T, V, U> => cache = cache \n\t\t? cache \n\t\t: createCategoryPageSelectors<T, V, U>();\n})();\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { Dictionary, EntityState } from '@ngrx/entity';\n\nimport { DaffGenericCategory } from '../../models/generic-category';\nimport { DaffCategoryRequest } from '../../models/requests/category-request';\nimport { DaffCategoryPageConfigurationState } from '../../models/category-page-configuration-state';\nimport { DaffCategoryReducersState } from '../../reducers/category-reducers.interface';\nimport { daffCategoryEntitiesAdapter } from '../../reducers/category-entities/category-entities-adapter';\nimport { getDaffCategoryFeatureSelector } from '../category-feature.selector';\nimport { DaffCategory } from '../../models/category';\n\nexport interface DaffCategoryEntitiesMemoizedSelectors<V extends DaffGenericCategory<V> = DaffCategory> {\n\tselectCategoryEntitiesState: MemoizedSelector<object, EntityState<V>>;\n\tselectCategoryIds: MemoizedSelector<object, EntityState<V>['ids']>;\n\tselectCategoryEntities: MemoizedSelector<object, Dictionary<V>>;\n\tselectAllCategories: MemoizedSelector<object, V[]>;\n\tselectCategoryTotal: MemoizedSelector<object, number>;\n}\n\nconst createCategoryFeatureSelectors = <T extends DaffCategoryRequest, V extends DaffGenericCategory<V>, U extends DaffCategoryPageConfigurationState<T>>(): DaffCategoryEntitiesMemoizedSelectors<V> => {\n\n\tconst entitiesSelectors = daffCategoryEntitiesAdapter<V>().getSelectors();\n\tconst categoryFeatureState = getDaffCategoryFeatureSelector<T, V, U>().selectCategoryFeatureState;\n\t/**\n\t * Category Entities State\n\t */\n\tconst selectCategoryEntitiesState = createSelector(\n\t\tcategoryFeatureState,\n\t\t(state: DaffCategoryReducersState<T, V, U>) => state.categoryEntities\n\t);\n\n\tconst selectCategoryIds = createSelector(\n\t\tselectCategoryEntitiesState,\n\t\tentitiesSelectors.selectIds\n\t);\n\n\tconst selectCategoryEntities = createSelector(\n\t\tselectCategoryEntitiesState,\n\t\tentitiesSelectors.selectEntities\n\t);\n\n\tconst selectAllCategories = createSelector(\n\t\tselectCategoryEntitiesState,\n\t\tentitiesSelectors.selectAll\n\t);\n\n\tconst selectCategoryTotal = createSelector(\n\t\tselectCategoryEntitiesState,\n\t\tentitiesSelectors.selectTotal\n\t);\n\n\treturn {\n\t\tselectCategoryEntitiesState,\n\t\tselectCategoryIds,\n\t\tselectCategoryEntities,\n\t\tselectAllCategories,\n\t\tselectCategoryTotal\n\t}\n}\n\nexport const getDaffCategoryEntitiesSelectors = (() => {\n\tlet cache;\n\treturn <T extends DaffCategoryRequest, V extends DaffGenericCategory<V>, U extends DaffCategoryPageConfigurationState<T>>(): DaffCategoryEntitiesMemoizedSelectors<V> => cache = cache \n\t\t? cache \n\t\t: createCategoryFeatureSelectors<T, V, U>();\n})();\n","import { createSelector, MemoizedSelector, MemoizedSelectorWithProps } from '@ngrx/store';\nimport { Dictionary } from '@ngrx/entity';\n\nimport { getDaffProductSelectors, DaffProduct } from '@daffodil/product';\n\nimport { DaffCategoryPageConfigurationState } from '../models/category-page-configuration-state';\nimport { DaffGenericCategory } from '../models/generic-category';\nimport { DaffCategoryRequest } from '../models/requests/category-request';\nimport { DaffCategoryFeatureMemoizedSelectors, getDaffCategoryFeatureSelector } from './category-feature.selector';\nimport { DaffCategoryPageMemoizedSelectors, getDaffCategoryPageSelectors } from './category-page/category-page.selector';\nimport { DaffCategoryEntitiesMemoizedSelectors } from './category-entities/category-entities.selector';\nimport { getDaffCategoryEntitiesSelectors } from './category-entities/category-entities.selector';\nimport { DaffCategory } from '../models/category';\n\nexport interface DaffCategoryMemoizedSelectors<\n\tT extends DaffCategoryRequest = DaffCategoryRequest, \n\tV extends DaffGenericCategory<V> = DaffCategory, \n\tU extends DaffCategoryPageConfigurationState<T> = DaffCategoryPageConfigurationState<T>,\n\tW extends DaffProduct = DaffProduct\n> extends\n\tDaffCategoryFeatureMemoizedSelectors<T, V, U>,\n\tDaffCategoryPageMemoizedSelectors<T, V, U>,\n\tDaffCategoryEntitiesMemoizedSelectors<V> {\n\tselectSelectedCategory: MemoizedSelector<object, V>;\n\tselectCategoryPageProducts: MemoizedSelector<object, W[]>;\n\tselectCategory: MemoizedSelectorWithProps<object, object, V>;\n\tselectProductsByCategory: MemoizedSelectorWithProps<object, object, W[]>;\n\tselectTotalProductsByCategory: MemoizedSelectorWithProps<object, object, number>;\n}\n\nconst createCategorySelectors = <T extends DaffCategoryRequest, V extends DaffGenericCategory<V>, U extends DaffCategoryPageConfigurationState<T>, W extends DaffProduct>(): DaffCategoryMemoizedSelectors<T, V, U, W> => {\n\tconst { selectProductEntities, selectAllProducts } = getDaffProductSelectors<W>();\n\n\tconst {\n\t\tselectCategoryEntities\n\t} = getDaffCategoryEntitiesSelectors<T, V, U>();\n\tconst { \n\t\tselectSelectedCategoryId, \n\t\tselectCategoryPageProductIds \n\t} = getDaffCategoryPageSelectors<T, V, U>();\n\t/**\n\t * Combinatoric Category Selectors\n\t */\n\tconst selectSelectedCategory = createSelector(\n\t\tselectCategoryEntities,\n\t\tselectSelectedCategoryId,\n\t\t(entities: Dictionary<V>, selectedCategoryId: string) => entities[selectedCategoryId]\n\t);\n\n\tconst selectCategoryPageProducts = createSelector(\n\t\tselectCategoryPageProductIds,\n\t\tselectProductEntities,\n\t\t(ids, products: Dictionary<W>) => ids.map(id => products[id]).filter(p => p != null)\n\t);\n\n\tconst selectCategory = createSelector(\n\t\tselectCategoryEntities,\n\t\t(entities: Dictionary<V>, props) =>  entities[props.id]\n\t);\n\n\tconst selectProductsByCategory = createSelector(\n\t\tselectCategoryEntities,\n\t\tselectAllProducts,\n\t\t(entities, products, props) => entities[props.id] && entities[props.id].product_ids\n\t\t\t? products.filter(product => entities[props.id].product_ids.indexOf(product.id) >= 0)\n\t\t\t: null\n\t);\n\n\tconst selectTotalProductsByCategory = createSelector(\n\t\tselectCategoryEntities,\n\t\tselectAllProducts,\n\t\t(entities, products, props) => selectProductsByCategory.projector(entities, products, { id: props.id })\n\t\t\t? selectProductsByCategory.projector(entities, products, { id: props.id }).length\n\t\t\t: null\n\t);\n\n\treturn {\n\t\t...getDaffCategoryFeatureSelector<T, V, U>(),\n\t\t...getDaffCategoryEntitiesSelectors<T, V, U>(),\n\t\t...getDaffCategoryPageSelectors<T, V, U>(),\n\t\tselectSelectedCategory,\n\t\tselectCategoryPageProducts,\n\t\tselectCategory,\n\t\tselectProductsByCategory,\n\t\tselectTotalProductsByCategory\n\t}\n}\n\nexport const getDaffCategorySelectors = (() => {\n\tlet cache;\n\treturn <\n\t\tT extends DaffCategoryRequest = DaffCategoryRequest, \n\t\tV extends DaffGenericCategory<V> = DaffCategory, \n\t\tU extends DaffCategoryPageConfigurationState<T> = DaffCategoryPageConfigurationState<T>, \n\t\tW extends DaffProduct = DaffProduct\n\t>(): DaffCategoryMemoizedSelectors<T, V, U, W> => cache = cache \n\t\t? cache \n\t\t: createCategorySelectors<T, V, U, W>();\n})();\n","import { Injectable, Inject } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { switchMap, catchError, withLatestFrom, map } from 'rxjs/operators';\nimport { of, Observable } from 'rxjs';\nimport { Store, select } from '@ngrx/store';\n\nimport { DaffProductGridLoadSuccess, DaffProduct } from '@daffodil/product';\n\nimport {\n  DaffCategoryActionTypes,\n  DaffChangeCategoryPageSize,\n  DaffChangeCategoryCurrentPage,\n\tDaffChangeCategoryFilters,\n\tDaffChangeCategorySortingOption,\n\tDaffToggleCategoryFilter,\n  DaffCategoryPageLoadSuccess,\n  DaffCategoryPageLoad,\n  DaffCategoryPageLoadFailure\n} from '../actions/category.actions';\nimport { DaffCategoryDriver } from '../drivers/injection-tokens/category-driver.token';\nimport { DaffCategoryServiceInterface } from '../drivers/interfaces/category-service.interface';\nimport { DaffGetCategoryResponse } from '../models/get-category-response';\nimport { getDaffCategorySelectors } from '../selectors/category.selector';\nimport { DaffCategoryRequest } from '../models/requests/category-request';\nimport { DaffCategoryPageConfigurationState } from '../models/category-page-configuration-state';\nimport { DaffGenericCategory } from '../models/generic-category';\nimport { daffCategoryValidateFilters } from '../helpers/public_api';\n\n@Injectable()\nexport class DaffCategoryPageEffects<\n\tT extends DaffCategoryRequest,\n\tV extends DaffGenericCategory<V>,\n\tU extends DaffCategoryPageConfigurationState<T>,\n\tW extends DaffProduct\n> {\n\n  constructor(\n    private actions$: Actions,\n    @Inject(DaffCategoryDriver) private driver: DaffCategoryServiceInterface<T, V, U, W>,\n    private store: Store<any>\n\t){}\n\n\tprivate categorySelectors = getDaffCategorySelectors<T, V, U, W>();\n\n  @Effect()\n  loadCategoryPage$ : Observable<any> = this.actions$.pipe(\n    ofType(DaffCategoryActionTypes.CategoryPageLoadAction),\n    switchMap((action: DaffCategoryPageLoad<T>) => {\n\t\t\tdaffCategoryValidateFilters(action.request.filter_requests);\n\t\t\treturn this.processCategoryGetRequest(action.request)\n\t\t})\n\t)\n\n  @Effect()\n  changeCategoryPageSize$ : Observable<any> = this.actions$.pipe(\n\t\tofType(DaffCategoryActionTypes.ChangeCategoryPageSizeAction),\n    withLatestFrom(\n\t\t\tthis.store.pipe(select(this.categorySelectors.selectCategoryPageConfigurationState))\n\t\t),\n    switchMap((\n\t\t\t[action, categoryRequest]:\n\t\t\t[DaffChangeCategoryPageSize, T]\n\t\t) => this.processCategoryGetRequest({\n\t\t\t...categoryRequest,\n\t\t\tpage_size: action.pageSize\n\t\t}))\n  )\n\n  @Effect()\n  changeCategoryCurrentPage$ : Observable<any> = this.actions$.pipe(\n    ofType(DaffCategoryActionTypes.ChangeCategoryCurrentPageAction),\n    withLatestFrom(\n\t\t\tthis.store.pipe(select(this.categorySelectors.selectCategoryPageConfigurationState))\n    ),\n    switchMap((\n\t\t\t[action, categoryRequest]:\n\t\t\t[DaffChangeCategoryCurrentPage, T]\n\t\t) => this.processCategoryGetRequest({\n\t\t\t...categoryRequest,\n\t\t\tcurrent_page: action.currentPage\n\t\t}))\n  )\n\n  @Effect()\n  changeCategoryFilters$ : Observable<any> = this.actions$.pipe(\n    ofType(DaffCategoryActionTypes.ChangeCategoryFiltersAction),\n    withLatestFrom(\n\t\t\tthis.store.pipe(select(this.categorySelectors.selectCategoryPageConfigurationState))\n    ),\n    switchMap((\n\t\t\t[action, categoryRequest]:\n\t\t\t[DaffChangeCategoryFilters, T]\n\t\t) => {\n\t\t\tdaffCategoryValidateFilters(action.filters);\n\t\t\treturn this.processCategoryGetRequest({\n\t\t\t\t...categoryRequest,\n\t\t\t\tfilter_requests: action.filters\n\t\t\t})\n\t\t})\n  )\n\n  @Effect()\n  toggleCategoryFilter$ : Observable<any> = this.actions$.pipe(\n    ofType(DaffCategoryActionTypes.ToggleCategoryFilterAction),\n    withLatestFrom(\n\t\t\tthis.store.pipe(select(this.categorySelectors.selectCategoryPageConfigurationState))\n    ),\n    switchMap((\n\t\t\t[action, categoryPageConfigurationState]:\n\t\t\t[DaffToggleCategoryFilter, U]\n\t\t) => {\n\t\t\tdaffCategoryValidateFilters(categoryPageConfigurationState.filter_requests);\n\t\t\treturn this.processCategoryGetRequest({\n\t\t\t\t...categoryPageConfigurationState\n\t\t\t})\n\t\t})\n  )\n\n  @Effect()\n  changeCategorySort$ : Observable<any> = this.actions$.pipe(\n    ofType(DaffCategoryActionTypes.ChangeCategorySortingOptionAction),\n    withLatestFrom(\n\t\t\tthis.store.pipe(select(this.categorySelectors.selectCategoryPageConfigurationState))\n    ),\n    switchMap((\n\t\t\t[action, categoryRequest]:\n\t\t\t[DaffChangeCategorySortingOption, T]\n\t\t) => this.processCategoryGetRequest({\n\t\t\t...categoryRequest,\n\t\t\tapplied_sort_option: action.sort.option,\n\t\t\tapplied_sort_direction: action.sort.direction\n\t\t}))\n\t)\n\n  private processCategoryGetRequest(payload: T) {\n    return this.driver.get(payload).pipe(\n      switchMap((resp: DaffGetCategoryResponse<T, V, U, W>) => [\n        new DaffProductGridLoadSuccess(resp.products),\n        new DaffCategoryPageLoadSuccess(resp)\n      ]),\n      catchError(error => of(new DaffCategoryPageLoadFailure('Failed to load the category')))\n    )\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { daffCategoryReducers } from './reducers/category-reducers';\nimport { DaffCategoryEffects } from './effects/category.effects';\nimport { DaffDefaultCategoryPageSize } from './resolvers/public_api';\nimport { DaffCategoryPageEffects } from './effects/category-page.effects';\n\n@NgModule({\n  imports: [\n    StoreModule.forFeature('category', daffCategoryReducers),\n    EffectsModule.forFeature([DaffCategoryEffects, DaffCategoryPageEffects]),\n\t],\n\tproviders: [\n\t\t{ provide: DaffDefaultCategoryPageSize, useValue: 12 }\n\t]\n})\nexport class DaffCategoryStateModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DaffCategoryStateModule } from './category-state.module';\nimport { DaffProductModule } from '@daffodil/product';\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    /**\n     * Ngrx/store\n     */\n    DaffCategoryStateModule,\n    DaffProductModule\n  ]\n})\nexport class DaffCategoryModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store, select, Action } from '@ngrx/store';\n\nimport { DaffProduct } from '@daffodil/product';\n\nimport { DaffCategoryModule } from '../category.module';\nimport { getDaffCategorySelectors } from '../selectors/category.selector';\nimport { DaffCategoryReducersState } from '../reducers/category-reducers.interface';\nimport { DaffCategoryPageConfigurationState } from '../models/category-page-configuration-state';\nimport { DaffCategoryFilter } from '../models/category-filter';\nimport { DaffCategorySortOption } from '../models/category-sort-option';\nimport { DaffSortDirectionEnum, DaffCategoryRequest } from '../models/requests/category-request';\nimport { DaffCategoryAppliedFilter } from '../models/category-applied-filter';\nimport { DaffGenericCategory } from '../models/generic-category';\nimport { DaffCategory } from '../models/category';\nimport { DaffCategoryFacadeInterface } from './category-facade.interface';\n\n/**\n * A facade for accessing state for the currently selected category.\n */\n@Injectable({\n  providedIn: DaffCategoryModule\n})\nexport class DaffCategoryFacade<\n\tT extends DaffCategoryRequest = DaffCategoryRequest, \n\tV extends DaffGenericCategory<V> = DaffCategory, \n\tU extends DaffCategoryPageConfigurationState<T> = DaffCategoryPageConfigurationState<T>,\n\tW extends DaffProduct = DaffProduct\n> implements DaffCategoryFacadeInterface<T, V, U, W> {\n\tprivate categorySelectors = getDaffCategorySelectors<T, V, U, W>();\n\t\n\t/**\n   * The currently selected category.\n   */\n  category$: Observable<V>;\n  /**\n   * The page configuration state for the selected category.\n   */\n  pageConfigurationState$: Observable<U>;\n  /**\n   * The current page of products for the selected category.\n   */\n  currentPage$: Observable<number>;\n  /**\n   * The number of pages of product for the selected category.\n   */\n\ttotalPages$: Observable<number>;\n\t/**\n\t * The total number of products for the filters applied.\n\t */\n\ttotalProducts$: Observable<number>;\n  /**\n   * The number of products per page for the selected category.\n   */\n  pageSize$: Observable<number>;\n  /**\n   * The filters available for the products of the selected category.\n   */\n  filters$: Observable<DaffCategoryFilter[]>;\n  /**\n   * The sort options available for the products of the selected category.\n   */\n  sortOptions$: Observable<DaffCategorySortOption[]>;\n  /**\n   * The sort options available for the products of the selected category.\n   */\n  appliedFilters$: Observable<DaffCategoryAppliedFilter[]>;\n  /**\n   * The sort options available for the products of the selected category.\n   */\n  appliedSortOption$: Observable<string>;\n  /**\n   * The sort options available for the products of the selected category.\n   */\n  appliedSortDirection$: Observable<DaffSortDirectionEnum>;\n  /**\n   * Products of the currently selected category.\n   */\n  products$: Observable<W[]>;\n  /**\n   * The loading state for retrieving a single category.\n   */\n  categoryLoading$: Observable<boolean>;\n  /**\n   * The loading state for retrieving only the products of the category.\n   */\n  productsLoading$: Observable<boolean>;\n  /**\n   * Errors associated with retrieving a single category.\n   */\n\terrors$: Observable<string[]>;\n\t/**\n\t * Is the category page empty of products.\n\t */\n\tisCategoryEmpty$: Observable<boolean>;\n\t\n\t/**\n\t * Get a category by the provided Id.\n\t * @param id \n\t */\n\tgetCategoryById(id: string): Observable<V> {\n\t\treturn this.store.pipe(select(this.categorySelectors.selectCategory, {id: id}));\n\t}\n\n\t/**\n\t * Get products by a category Id.\n\t * @param categoryId \n\t */\n\tgetProductsByCategory(categoryId: string): Observable<W[]> {\n\t\treturn this.store.pipe(select(this.categorySelectors.selectProductsByCategory, {id: categoryId}))\n\t}\n\n\t/**\n\t * Get products by a category Id.\n\t * @param categoryId \n\t */\n\tgetTotalProductsByCategory(categoryId: string): Observable<number> {\n\t\treturn this.store.pipe(select(this.categorySelectors.selectTotalProductsByCategory, {id: categoryId}))\n\t}\n\n  constructor(private store: Store<DaffCategoryReducersState<T, V, U>>) {\n    this.category$ = this.store.pipe(select(this.categorySelectors.selectSelectedCategory));\n\t\tthis.products$ = this.store.pipe(select(this.categorySelectors.selectCategoryPageProducts));\n\t\tthis.totalProducts$ = this.store.pipe(select(this.categorySelectors.selectCategoryPageTotalProducts));\n    this.pageConfigurationState$ = this.store.pipe(select(this.categorySelectors.selectCategoryPageConfigurationState));\n    this.currentPage$ = this.store.pipe(select(this.categorySelectors.selectCategoryCurrentPage));\n    this.totalPages$ = this.store.pipe(select(this.categorySelectors.selectCategoryTotalPages));\n    this.pageSize$ = this.store.pipe(select(this.categorySelectors.selectCategoryPageSize));\n    this.filters$ = this.store.pipe(select(this.categorySelectors.selectCategoryFilters));\n    this.sortOptions$ = this.store.pipe(select(this.categorySelectors.selectCategorySortOptions));\n    this.appliedFilters$ = this.store.pipe(select(this.categorySelectors.selectCategoryPageAppliedFilters));\n    this.appliedSortOption$ = this.store.pipe(select(this.categorySelectors.selectCategoryPageAppliedSortOption));\n    this.appliedSortDirection$ = this.store.pipe(select(this.categorySelectors.selectCategoryPageAppliedSortDirection));\n    this.categoryLoading$ = this.store.pipe(select(this.categorySelectors.selectCategoryLoading));\n    this.productsLoading$ = this.store.pipe(select(this.categorySelectors.selectCategoryProductsLoading));\n\t\tthis.errors$ = this.store.pipe(select(this.categorySelectors.selectCategoryErrors));\n\t\tthis.isCategoryEmpty$ = this.store.pipe(select(this.categorySelectors.selectIsCategoryPageEmpty));\n\t}\n\n  /**\n   * Dispatches the given action.\n   * @param action action to dispatch.\n   */\n  dispatch(action: Action) {\n    this.store.dispatch(action);\n  }\n}\n","import gql from 'graphql-tag';\n\nexport const MagentoGetCategoryQuery = gql`\nquery MagentoGetCategoryQuery($filters: CategoryFilterInput){\n\tcategoryList(filters: $filters) {\n\t\tid\n\t\tname\n\t\tlevel\n\t\tdescription\n\t\tbreadcrumbs {\n\t\t\tcategory_id\n\t\t\tcategory_name\n\t\t\tcategory_level\n\t\t\tcategory_url_key\n\t\t}\n\t\tproducts {\n\t\t\titems {\n\t\t\t\tsku\n\t\t\t}\n\t\t}\n\t\tchildren_count\n\t}\n}`\n","import gql from 'graphql-tag';\nimport { magentoProductFragment } from '@daffodil/product';\n\n/**\n * This query only exists because products and their associated aggregations/filter cannot\n * be retrieved through a category call.\n */\nexport const MagentoGetProductsQuery = gql`\nquery MagentoGetProducts($filter: ProductAttributeFilterInput!, $search: String, $pageSize: Int, $currentPage: Int, $sort: ProductAttributeSortInput)\n{\n\tproducts(filter: $filter, search: $search, pageSize: $pageSize, currentPage: $currentPage, sort: $sort)\n\t{\n\t\ttotal_count\n\t\titems {\n\t\t\t...product\n\t\t}\n\t\tpage_info {\n\t\t\tpage_size\n\t\t\tcurrent_page\n\t\t\ttotal_pages\n\t\t}\n\t}\n}\n${magentoProductFragment}\n`\n","export enum MagentoCategoryFilterActionEnum {\n\tEqual = 'eq',\n\tTo = 'to',\n\tFrom = 'from',\n\tIn = 'in',\n\tMatch = 'match'\n}\n\nexport interface MagentoCategoryFilters {\n\t[x: string]: MagentoFilterAction;\n}\n\nexport type MagentoFilterAction = {\n\t[key in MagentoCategoryFilterActionEnum]?: string | string[];\n}\n","import { Injectable } from '@angular/core';\n\nimport { MagentoCategoryFilters, MagentoCategoryFilterActionEnum } from '../models/requests/filters';\nimport { DaffCategoryFilterRequest, DaffCategoryFromToFilterSeparator } from '../../../models/requests/filter-request';\nimport { DaffCategoryFilterType } from '../../../models/category-filter-base';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffMagentoAppliedFiltersTransformService {\n\n  transform(categoryId: string, daffFilters: DaffCategoryFilterRequest[]): MagentoCategoryFilters {\n\t\tconst magentoFilters: MagentoCategoryFilters = {\n\t\t\tcategory_id: {\n\t\t\t\t[MagentoCategoryFilterActionEnum.Equal]: categoryId\n\t\t\t}\n\t\t};\n\n\t\tif(!daffFilters) return magentoFilters;\n\n\t\tdaffFilters.forEach(filter => {\n\t\t\t// The FromTo filter needs special treatment, because Magento accepts the \"from\" and \"to\" filters\n\t\t\t// separately (it also outputs FromTo filter pairs together)\n\t\t\tif(filter.type === DaffCategoryFilterType.Range) {\n\t\t\t\tconst fromToValues = filter.value[0].split(DaffCategoryFromToFilterSeparator);\n\t\t\t\tmagentoFilters[filter.name] = {\n\t\t\t\t\t...magentoFilters[filter.name],\n\t\t\t\t\t...this.getRangeFromValue(fromToValues[0]),\n\t\t\t\t\t...this.getRangeToValue(fromToValues[1])\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmagentoFilters[filter.name] = {\n\t\t\t\t\t...magentoFilters[filter.name],\n\t\t\t\t\t[this.getFilterAction(filter.type)]: this.getFilterValue(filter.type, filter.value)\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn magentoFilters;\n\t}\n\t\n\t/**\n\t * Returns an In action for Equal type and a Match action for Match type.\n\t */\n\tprivate getFilterAction(type: DaffCategoryFilterType): MagentoCategoryFilterActionEnum {\n\t\treturn type === DaffCategoryFilterType.Equal \n\t\t\t? MagentoCategoryFilterActionEnum.In\n\t\t\t: MagentoCategoryFilterActionEnum.Match;\n\t}\n\n\t/**\n\t * Returns an array for Equal type and a string for Match type.\n\t */\n\tprivate getFilterValue(type: DaffCategoryFilterType, value: DaffCategoryFilterRequest['value']): string | string[] {\n\t\treturn type === DaffCategoryFilterType.Equal ? value : value[0];\n\t}\n\n\tprivate getRangeFromValue(fromValue: string) {\n\t\treturn fromValue !== '*' ? {[MagentoCategoryFilterActionEnum.From]: fromValue} : null;\n\t}\n\n\tprivate getRangeToValue(toValue: string) {\n\t\treturn toValue !== '*' ? {[MagentoCategoryFilterActionEnum.To]: toValue} : null;\n\t}\n}\n","export enum MagentoSortDirectionEnum {\n\tAscending = 'ASC',\n\tDecending = 'DESC'\n}\n\nexport interface MagentoSortFieldAction {\n\t[x: string]: MagentoSortDirectionEnum;\n}\n","import { DaffCategoryFilterRequest } from './filter-request';\n\nexport enum DaffSortDirectionEnum {\n\tAscending = 'ASC',\n\tDecending = 'DSC'\n}\n\nexport interface DaffCategoryRequest {\n  id: string;\n  filter_requests?: DaffCategoryFilterRequest[];\n  applied_sort_option?: string;\n  applied_sort_direction?: DaffSortDirectionEnum;\n  current_page?: number;\n  page_size?: number;\n}\n","import { Injectable } from '@angular/core';\n\nimport { MagentoSortFieldAction, MagentoSortDirectionEnum } from '../models/requests/sort';\nimport { DaffSortDirectionEnum } from '../../../models/requests/category-request';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffMagentoAppliedSortOptionTransformService {\n\n  transform(appliedOption: string, appliedDirection: DaffSortDirectionEnum): MagentoSortFieldAction {\n\t\treturn {\n\t\t\t[appliedOption]: this.transformDirection(appliedDirection)\n\t\t}\n\t}\n\t\n\tprivate transformDirection(direction: DaffSortDirectionEnum): MagentoSortDirectionEnum {\n\t\tif(direction === DaffSortDirectionEnum.Ascending) {\n\t\t\treturn MagentoSortDirectionEnum.Ascending;\n\t\t} else if(direction === DaffSortDirectionEnum.Decending) {\n\t\t\treturn MagentoSortDirectionEnum.Decending;\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DaffCategoryPageConfigurationState } from '../../../models/category-page-configuration-state';\nimport { DaffCategoryFilter } from '../../../models/category-filter';\nimport { MagentoAggregation } from '../models/aggregation';\nimport { MagentoSortFields } from '../models/sort-fields';\nimport { MagentoCompleteCategoryResponse } from '../models/complete-category-response';\nimport { DaffCategoryFromToFilterSeparator } from '../../../models/requests/filter-request';\nimport { DaffCategoryFilterType } from '../../../models/category-filter-base';\nimport { DaffCategoryRequest } from '../../../models/requests/category-request';\nimport { coerceDefaultSortOptionFirst } from './pure/sort-default-option-first';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffMagentoCategoryPageConfigTransformerService {\n\n  transform(categoryResponse: MagentoCompleteCategoryResponse): DaffCategoryPageConfigurationState<DaffCategoryRequest> {\n\t\treturn {\n      id: categoryResponse.category.id,\n      page_size: categoryResponse.page_info.page_size,\n      current_page: categoryResponse.page_info.current_page,\n\t\t\ttotal_pages: categoryResponse.page_info.total_pages,\n\t\t\ttotal_products: categoryResponse.total_count,\n      filters: categoryResponse.aggregates.map(this.transformAggregate.bind(this)),\n\t\t\tsort_options: coerceDefaultSortOptionFirst(categoryResponse.sort_fields).options,\n\t\t\tproduct_ids: categoryResponse.products.map(product => product.sku)\n    }\n  }\n\n  private transformAggregate(filter: MagentoAggregation): DaffCategoryFilter {\n\t\tconst filterType = this.transformAggregateType(filter.type)\n    return {\n      label: filter.label,\n      type: filterType,\n\t\t\tname: filter.attribute_code,\n\t\t\toptions: filter.options.map(option => {\n\t\t\t\treturn {\n\t\t\t\t\tlabel: option.label,\n\t\t\t\t\tvalue: filterType === DaffCategoryFilterType.Range ? this.transformRangeValue(option.value) : option.value,\n\t\t\t\t\tcount: option.count\n\t\t\t\t}\n\t\t\t})\n    }\n\t}\n\n\tprivate transformAggregateType(type: MagentoAggregation['type']): DaffCategoryFilterType {\n\t\tif(type === 'select') return DaffCategoryFilterType.Equal;\n\t\telse if(type === 'boolean') return DaffCategoryFilterType.Equal;\n\t\telse if(type === 'multiselect') return DaffCategoryFilterType.Equal;\n\t\telse if(type === 'price') return DaffCategoryFilterType.Range;\n\t\telse return DaffCategoryFilterType.Match;\n\t}\n\n\tprivate transformRangeValue(value: string): string {\n\t\treturn value.replace('_', DaffCategoryFromToFilterSeparator);\n\t}\n}\n","import { MagentoSortFields } from '../../models/sort-fields'\n\nexport function coerceDefaultSortOptionFirst(sort_fields: MagentoSortFields): MagentoSortFields {\n  const index = sort_fields.options.findIndex(option => sort_fields.default === option.value)\n\n  return {\n    ...sort_fields,\n    options: [\n      sort_fields.options[index],\n      ...sort_fields.options.slice(0, index),\n      ...sort_fields.options.slice(index + 1)\n    ]\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { DaffCategory } from '../../../models/category';\nimport { DaffCategoryBreadcrumb } from '../../../models/category-breadcrumb';\nimport { MagentoBreadcrumb, MagentoCategory } from '../models/category';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffMagentoCategoryTransformerService {\n\n  transform(category: MagentoCategory): DaffCategory {\n    return {\n      id: category.id,\n\t\t\tname: category.name,\n\t\t\tdescription: category.description,\n\t\t\tchildren_count: category.children_count,\n\t\t\t//todo: use optional chaining when possible\n\t\t\tbreadcrumbs: category.breadcrumbs ? \n\t\t\t\tcategory.breadcrumbs\n\t\t\t\t\t.map(breadcrumb => this.transformBreadcrumb(breadcrumb))\n\t\t\t\t\t.sort((a, b) => a.categoryLevel - b.categoryLevel) : \n\t\t\t\tnull,\n\t\t\tproduct_ids: category.products.items.map(product => product.sku),\n\t\t\ttotal_products: category.products.items.length\n    }\n  }\n\n  private transformBreadcrumb(breadcrumb: MagentoBreadcrumb): DaffCategoryBreadcrumb {\n    return {\n      categoryId: breadcrumb.category_id,\n      categoryName: breadcrumb.category_name,\n      categoryLevel: breadcrumb.category_level,\n      categoryUrlKey: breadcrumb.category_url_key\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { transformManyMagentoProducts } from '@daffodil/product';\n\nimport { DaffMagentoCategoryPageConfigTransformerService } from './category-page-config-transformer.service';\nimport { MagentoCompleteCategoryResponse } from '../models/complete-category-response';\nimport { DaffGetCategoryResponse } from '../../../models/get-category-response';\nimport { DaffMagentoCategoryTransformerService } from './category-transformer.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffMagentoCategoryResponseTransformService {\n\n  constructor(\n    private magentoCategoryTransformerService: DaffMagentoCategoryTransformerService,\n    private magentoCategoryPageConfigurationTransformerService: DaffMagentoCategoryPageConfigTransformerService\n  ) {}\n\n  transform(completeCategory: MagentoCompleteCategoryResponse): DaffGetCategoryResponse {\n    return {\n\t\t\t...{ magentoCompleteCategoryResponse: completeCategory },\n      category: this.magentoCategoryTransformerService.transform(completeCategory.category),\n      categoryPageConfigurationState: this.magentoCategoryPageConfigurationTransformerService.transform(completeCategory),\n      products: transformManyMagentoProducts(completeCategory.products)\n    }\n  }\n}\n","import gql from 'graphql-tag';\n\n/**\n * This query only exists because products and their associated aggregations/filter cannot\n * be retrieved through a category call.\n */\nexport const MagentoGetCategoryAggregations = gql`\nquery MagentoGetProducts($filter: ProductAttributeFilterInput!)\n{\n\tproducts(filter: $filter)\n\t{\n\t\taggregations {\n\t\t\tlabel\n\t\t\tcount\n\t\t\tattribute_code\n\t\t\toptions {\n\t\t\t\t\tcount\n\t\t\t\t\tlabel\n\t\t\t\t\tvalue\n\t\t\t}\n\t\t}\n\t\tsort_fields {\n\t\t\tdefault\n\t\t\toptions {\n\t\t\t\tlabel\n\t\t\t\tvalue\n\t\t\t}\n\t\t}\n\t}\n}`\n","import gql from 'graphql-tag';\n\n/**\n * A query for getting aggregation types.\n */\nexport const MagentoGetCustomAttributeMetadata = gql`\nquery MagentoGetCustomAttributeMetadata($attributes: [AttributeInput!]!)\n{\n\tcustomAttributeMetadata(attributes: $attributes)\n\t{\n\t\titems {\n      attribute_code\n      attribute_type\n      input_type\n    }\n\t}\n}`\n","import { MagentoAggregation } from '../models/aggregation';\nimport { MagentoCustomMetadataAttribute } from '../models/requests/custom-metadata-attribute';\nimport { MagentoCustomAttributeMetadataResponse } from '../models/custom-attribute-metadata-response';\nimport { MagentoGetCategoryAggregationsResponse } from '../models/get-category-aggregations-response';\n\nexport function buildCustomMetadataAttribute(filter: MagentoAggregation): MagentoCustomMetadataAttribute {\n\treturn {\n\t\tattribute_code: filter.attribute_code,\n\t\tentity_type: '4'\n\t}\n}\n\nexport function addMetadataTypesToAggregates(\n\tattributeResponse: MagentoCustomAttributeMetadataResponse, \n\taggregationResponse: MagentoGetCategoryAggregationsResponse\n): MagentoGetCategoryAggregationsResponse {\n\n\treturn {\n\t\t...aggregationResponse,\n\t\tproducts: {\n\t\t\t...aggregationResponse.products,\n\t\t\taggregations: [\n\t\t\t\t...aggregationResponse.products.aggregations.map((aggregate) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...aggregate,\n\t\t\t\t\t\ttype: getMatchedAttributeType(aggregate, attributeResponse)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t]\n\t\t}\n\t}\n}\n\nfunction getMatchedAttributeType(aggregate: MagentoAggregation, attributes: MagentoCustomAttributeMetadataResponse): string {\n\tif(aggregate.attribute_code === 'category_id') return 'select';\n\n\treturn attributes.customAttributeMetadata.items.filter(item => item.attribute_code === aggregate.attribute_code)[0].input_type;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { Apollo } from 'apollo-angular';\n\nimport { DaffCategoryServiceInterface } from '../interfaces/category-service.interface';\nimport { DaffGetCategoryResponse } from '../../models/get-category-response';\nimport { DaffCategoryRequest } from '../../models/requests/category-request';\nimport { MagentoCompleteCategoryResponse } from './models/complete-category-response';\nimport { MagentoGetACategoryResponse } from './models/get-category-response';\nimport { MagentoGetCategoryQuery } from './queries/get-category';\nimport { MagentoGetProductsResponse } from './models/get-products-response';\nimport { MagentoGetProductsQuery } from './queries/get-products';\nimport { DaffMagentoAppliedFiltersTransformService } from './transformers/applied-filter-transformer.service';\nimport { DaffMagentoAppliedSortOptionTransformService } from './transformers/applied-sort-option-transformer.service';\nimport { DaffMagentoCategoryResponseTransformService } from './transformers/category-response-transform.service';\nimport { MagentoGetProductsByCategoriesRequest } from './models/requests/get-products-by-categories-request';\nimport { MagentoGetCategoryAggregations } from './queries/get-category-aggregations';\nimport { MagentoGetCategoryAggregationsResponse } from './models/get-category-aggregations-response';\nimport { MagentoCustomAttributeMetadataResponse } from './models/custom-attribute-metadata-response';\nimport { MagentoGetCustomAttributeMetadata } from './queries/custom-attribute-metadata';\nimport { buildCustomMetadataAttribute, addMetadataTypesToAggregates } from './transformers/custom-metadata-attributes-methods';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffMagentoCategoryService implements DaffCategoryServiceInterface {\n  \n  constructor(\n    private apollo: Apollo,\n\t\tprivate magentoCategoryResponseTransformer: DaffMagentoCategoryResponseTransformService,\n\t\tprivate magentoAppliedFiltersTransformer: DaffMagentoAppliedFiltersTransformService,\n\t\tprivate magentoAppliedSortTransformer: DaffMagentoAppliedSortOptionTransformService\n  ) {}\n\n\t//todo the MagentoGetCategoryQuery needs to get its own product ids.\n  /**\n   * Gets a category based on parameters. Default current_page is 1, and default page_size is 20.\n   * @param categoryRequest A DaffCategoryRequest object.\n   */\n  get(categoryRequest: DaffCategoryRequest): Observable<DaffGetCategoryResponse> {\n    return combineLatest([\n      this.apollo.query<MagentoGetACategoryResponse>({\n\t\t\t\tquery: MagentoGetCategoryQuery,\n\t\t\t\tvariables: { filters: {ids: { eq: categoryRequest.id}}}\n\t\t\t}),\n      this.apollo.query<MagentoGetCategoryAggregationsResponse>({\n\t\t\t\tquery: MagentoGetCategoryAggregations,\n\t\t\t\tvariables: {filter: {category_id: {eq: categoryRequest.id}}}\n\t\t\t}).pipe(\n\t\t\t\tswitchMap((aggregationResult): Observable<MagentoGetCategoryAggregationsResponse> => \n\t\t\t\t\tthis.apollo.query<MagentoCustomAttributeMetadataResponse>({\n\t\t\t\t\t\tquery: MagentoGetCustomAttributeMetadata,\n\t\t\t\t\t\tvariables: { \n\t\t\t\t\t\t\tattributes: aggregationResult.data.products.aggregations\n\t\t\t\t\t\t\t\t.filter(aggregate => aggregate.attribute_code !== 'category_id')\n\t\t\t\t\t\t\t\t.map(aggregate => buildCustomMetadataAttribute(aggregate))\n\t\t\t\t\t\t}\n\t\t\t\t\t}).pipe(\n\t\t\t\t\t\tmap(response => addMetadataTypesToAggregates(response.data, aggregationResult.data))\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t),\n      this.apollo.query<MagentoGetProductsResponse>({\n\t\t\t\tquery: MagentoGetProductsQuery,\n\t\t\t\tvariables: this.getProductsQueryVariables(categoryRequest)\n\t\t\t})\n    ]).pipe(\n      map((result): MagentoCompleteCategoryResponse => this.buildCompleteCategoryResponse(result[0].data, result[1], result[2].data)),\n\t\t\tmap((finalResult: MagentoCompleteCategoryResponse) => this.magentoCategoryResponseTransformer.transform(finalResult))\n\t\t);\n\t}\n\t\n\tprivate getProductsQueryVariables(request: DaffCategoryRequest): MagentoGetProductsByCategoriesRequest {\n\t\tconst queryVariables = {\n\t\t\tfilter: this.magentoAppliedFiltersTransformer.transform(request.id, request.filter_requests)\n\t\t};\n\t\tif(request.page_size) queryVariables['pageSize'] = request.page_size;\n\t\tif(request.current_page) queryVariables['currentPage'] = request.current_page;\n\t\tif(request.applied_sort_option && request.applied_sort_direction) {\n\t\t\tqueryVariables['sort'] = this.magentoAppliedSortTransformer.transform(request.applied_sort_option, request.applied_sort_direction);\n\t\t}\n\n\t\treturn queryVariables;\n\t}\n\n\tprivate buildCompleteCategoryResponse(\n\t\tcategoryResponse: MagentoGetACategoryResponse, \n\t\taggregationsAndSortsResponse: MagentoGetCategoryAggregationsResponse,\n\t\tproductsResponse: MagentoGetProductsResponse\n\t): MagentoCompleteCategoryResponse {\n\t\treturn {\n\t\t\tcategory: categoryResponse.categoryList[0],\n\t\t\tproducts: productsResponse.products.items,\n\t\t\taggregates: aggregationsAndSortsResponse.products.aggregations,\n\t\t\tsort_fields: aggregationsAndSortsResponse.products.sort_fields,\n\t\t\ttotal_count: productsResponse.products.total_count,\n\t\t\tpage_info: productsResponse.products.page_info\n\t\t};\n\t}\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DaffMagentoCategoryService } from './category.service';\nimport { DaffMagentoCategoryResponseTransformService } from './transformers/category-response-transform.service';\nimport { DaffMagentoCategoryTransformerService } from './transformers/category-transformer.service';\nimport { DaffMagentoCategoryPageConfigTransformerService } from './transformers/category-page-config-transformer.service';\nimport { DaffCategoryDriver } from '../injection-tokens/category-driver.token';\nimport { DaffMagentoAppliedSortOptionTransformService } from './transformers/applied-sort-option-transformer.service';\nimport { DaffMagentoAppliedFiltersTransformService } from './transformers/applied-filter-transformer.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ]\n})\nexport class DaffCategoryMagentoDriverModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DaffCategoryMagentoDriverModule,\n      providers: [\n\t\t\t\t{\n\t\t\t\t\tprovide: DaffCategoryDriver,\n\t\t\t\t\tuseExisting: DaffMagentoCategoryService\n\t\t\t\t},\n\t\t\t\tDaffMagentoCategoryPageConfigTransformerService,\n\t\t\t\tDaffMagentoCategoryResponseTransformService,\n\t\t\t\tDaffMagentoCategoryTransformerService,\n\t\t\t\tDaffMagentoAppliedFiltersTransformService,\n\t\t\t\tDaffMagentoAppliedSortOptionTransformService\n      ]\n    };\n  }\n}\n"]}