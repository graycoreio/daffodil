{
  "id": "guides/cart/testing",
  "title": "Testing",
  "contents": "\n<div class=\"content\">\n<h1 id=\"testing\">Testing</h1>\n<p><code>@daffodil/cart</code> provides a testing package accessible at <code>@daffodil/cart/testing</code>. This package provides model factories, facade mocks, and driver mocks to facilitate unit testing.</p>\n<p>The following example demonstrates how to unit test a component using Daffodil model factories and the mock facade with the Jasmine testing framework and the <code>jasmine-marbles</code> library.</p>\n<p><code>cart.component.ts</code></p>\n<pre><code class=\"language-typescript\">import {\n  DaffCartFacade,\n  DaffCartCreate\n} from &#39;@daffodil/cart&#39;;\n\n@Component({})\nclass CartComponent implements OnInit {\n  loading$: Observable&lt;boolean&gt;;\n\n  constructor(private cartFacade: DaffCartFacade) {}\n\n  ngOnInit() {\n    this.loading$ = this.cartFacade.loading$;\n  }\n\n  createCart() {\n    this.cartFacade.dispatch(new DaffCartCreate());\n  }\n}</code></pre>\n<p><code>cart.component.spec.ts</code></p>\n<pre><code class=\"language-typescript\">import {\n  DaffCartFacade,\n  DaffCartCreate,\n  DaffCartTestingModule,\n  MockDaffCartFacade\n} from &#39;@daffodil/cart&#39;;\n\ndescribe(&#39;CartComponent&#39;, () =&gt; {\n  let mockCartFacade: MockDaffCartFacade;\n  let fixture: ComponentFixture&lt;CartComponent&gt;;\n  let component: CartComponent;\n\n  beforeEach(() =&gt; {\n    TestBed.configureTestingModule({\n      imports: [\n        DaffCartTestingModule // this provides the MockDaffCartFacade\n      ]\n    });\n\n    mockCartFacade = TestBed.get(DaffCartFacade);\n\n    spyOn(mockCartFacade, &#39;dispatch&#39;);\n\n    fixture = TestBed.createComponent(CartComponent);\n    component = fixture.componentInstance;\n\n    fixture.detectChanges();\n  });\n\n  describe(&#39;when createCart is called&#39;, () =&gt; {\n    beforeEach(() =&gt; {\n      component.createCart()\n    })\n\n    it(&#39;should dispatch cart creation&#39;, () =&gt; {\n      const expected = new DaffCartCreate();\n      expect(mockCartFacade.dispatch).toHaveBeenCalledWith(expected);\n    });\n  });\n\n  describe(&#39;when the cart is loading&#39;, () =&gt; {\n    beforeEach(() =&gt; {\n      // mock facade fields are `BehaviorSubject`s\n      // use the `next` method to mock stream values\n      mockCartFacade.loading$.next(true);\n    })\n\n    it(&#39;should set loading$ to true&#39;, () =&gt; {\n      const expected = hot(&#39;a&#39;, {a: true});\n      expect(component.loading$).toBeObservable(expected);\n    });\n  });\n});</code></pre>\n\n</div>\n"
}