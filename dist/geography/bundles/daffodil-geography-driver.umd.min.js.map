{"version":3,"sources":["ng://@daffodil/geography/driver/errors/country-not-found.ts","ng://@daffodil/geography/driver/errors/invalid-api-response.ts","ng://@daffodil/geography/driver/interfaces/geography-service.interface.ts"],"names":["DaffCountryNotFoundError","message","_this","_super","call","this","code","__extends","DaffInheritableError","DaffGeographyInvalidAPIResponseError","DaffGeographyDriver","InjectionToken"],"mappings":"owBAKC,SAAAA,EAAmBC,GAAnB,IAAAC,EACCC,EAAAC,KAAAC,KAAMJ,IAAQI,YADIH,EAAAD,QAAAA,EAFFC,EAAAI,KAAe,qCAKjC,OAN8CC,EAAAP,EAAAG,GAM9CH,GAN8CQ,EAAAA,yYCG7C,SAAAC,EAAmBR,GAAnB,IAAAC,EACCC,EAAAC,KAAAC,KAAMJ,IAAQI,YADIH,EAAAD,QAAAA,EAFFC,EAAAI,KAAe,wCAKjC,OAN0DC,EAAAA,EAAAA,GAM1DE,GAN0DD,EAAAA,sBCG1D,IAAaE,EAAsB,IAAIC,EAAAA,eAAe","sourcesContent":["import { DaffError, DaffInheritableError } from '@daffodil/core';\n\nexport class DaffCountryNotFoundError extends DaffInheritableError implements DaffError {\n  public readonly code: string = 'DAFF_GEOGRAPHY_COUNTRY_NOT_FOUND';\n\n\tconstructor(public message: string) {\n\t\tsuper(message);\n\t}\n}\n","import { DaffError, DaffInheritableError } from '@daffodil/core';\n\nexport class DaffGeographyInvalidAPIResponseError extends DaffInheritableError implements DaffError {\n  public readonly code: string = 'DAFF_GEOGRAPHY_INVALID_API_RESPONSE';\n\n\tconstructor(public message: string) {\n\t\tsuper(message);\n\t}\n}\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DaffCountry } from '@daffodil/geography';\n\nexport const DaffGeographyDriver = new InjectionToken('DaffGeographyDriver');\n\nexport interface DaffGeographyServiceInterface<T extends DaffCountry> {\n\t/**\n\t * Retrieves the list of countries available to the given store.\n\t */\n\tlist(): Observable<T[]>;\n\n\t/**\n\t * Retrieve precise information about a specific country.\n\t */\n\tget(id: T['id']): Observable<T>;\n}\n"]}