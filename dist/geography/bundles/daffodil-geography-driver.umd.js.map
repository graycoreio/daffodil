{"version":3,"file":"daffodil-geography-driver.umd.js","sources":["ng://@daffodil/geography/driver/errors/country-not-found.ts","ng://@daffodil/geography/driver/errors/invalid-api-response.ts","ng://@daffodil/geography/driver/interfaces/geography-service.interface.ts"],"sourcesContent":["import { DaffError, DaffInheritableError } from '@daffodil/core';\n\nexport class DaffCountryNotFoundError extends DaffInheritableError implements DaffError {\n  public readonly code: string = 'DAFF_GEOGRAPHY_COUNTRY_NOT_FOUND';\n\n\tconstructor(public message: string) {\n\t\tsuper(message);\n\t}\n}\n","import { DaffError, DaffInheritableError } from '@daffodil/core';\n\nexport class DaffGeographyInvalidAPIResponseError extends DaffInheritableError implements DaffError {\n  public readonly code: string = 'DAFF_GEOGRAPHY_INVALID_API_RESPONSE';\n\n\tconstructor(public message: string) {\n\t\tsuper(message);\n\t}\n}\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DaffCountry } from '@daffodil/geography';\n\nexport const DaffGeographyDriver = new InjectionToken('DaffGeographyDriver');\n\nexport interface DaffGeographyServiceInterface<T extends DaffCountry> {\n\t/**\n\t * Retrieves the list of countries available to the given store.\n\t */\n\tlist(): Observable<T[]>;\n\n\t/**\n\t * Retrieve precise information about a specific country.\n\t */\n\tget(id: T['id']): Observable<T>;\n}\n"],"names":["DaffInheritableError","__extends","InjectionToken"],"mappings":";;;;;;;;;;;;;;;;;;;;QAE8C,4CAAoB;QAGjE,kCAAmB,OAAe;YAAlC,YACC,kBAAM,OAAO,CAAC,SACd;YAFkB,aAAO,GAAP,OAAO,CAAQ;YAFjB,UAAI,GAAW,kCAAkC,CAAC;;SAIlE;QACF,+BAAC;KAND,CAA8CA,yBAAoB,GAMjE;;;QALC,wCAAkE;;QAEvD,2CAAsB;;;;;;;;;;;;;;;;;QCHuBC,0DAAoB;QAG7E,8CAAmB,OAAe;YAAlC,YACC,kBAAM,OAAO,CAAC,SACd;YAFkB,aAAO,GAAP,OAAO,CAAQ;YAFjB,UAAI,GAAW,qCAAqC,CAAC;;SAIrE;QACF,2CAAC;KAND,CAA0DD,yBAAoB,GAM7E;;;QALC,oDAAqE;;QAE1D,uDAAsB;;;;;;;;;;;;ICLnC;AAKA,QAAa,mBAAmB,GAAG,IAAIE,qBAAc,CAAC,qBAAqB,CAAC;;;;;IAE5E,4CAUC;;;;;;QANA,+DAAwB;;;;;;QAKxB,gEAAgC;;;;;;;;;;;;;;;"}