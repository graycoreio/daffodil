{"version":3,"file":"daffodil-geography-state-testing.umd.js","sources":["ng://@daffodil/geography/state/testing/mock-geography-facade.ts","ng://@daffodil/geography/state/testing/geography-testing.module.ts"],"sourcesContent":["import { BehaviorSubject } from 'rxjs';\nimport { Action } from '@ngrx/store';\nimport { Dictionary } from '@ngrx/entity';\nimport { Injectable } from '@angular/core';\n\nimport { DaffCountry } from '@daffodil/geography';\nimport { DaffGeographyFacadeInterface } from '@daffodil/geography/state';\n\n@Injectable({providedIn: 'root'})\nexport class MockDaffGeographyFacade implements DaffGeographyFacadeInterface {\n  loading$: BehaviorSubject<boolean> = new BehaviorSubject(null);\n  errors$: BehaviorSubject<string[]> = new BehaviorSubject([]);\n  countries$: BehaviorSubject<DaffCountry[]> = new BehaviorSubject([]);\n  countryIds$: BehaviorSubject<(string | number)[]> = new BehaviorSubject([]);\n  countryCount$: BehaviorSubject<number> = new BehaviorSubject(null);\n  countryEntities$: BehaviorSubject<Dictionary<DaffCountry>> = new BehaviorSubject(null);\n\n  getCountry(id) {\n    return new BehaviorSubject(null);\n  }\n\n  getCountrySubdivisions(id) {\n    return new BehaviorSubject([]);\n  }\n\n  isCountryFullyLoaded(id) {\n    return new BehaviorSubject(false)\n  }\n\n  dispatch(action: Action) {};\n}\n","import { NgModule } from '@angular/core';\n\nimport { DaffGeographyFacade } from '@daffodil/geography/state';\n\nimport { MockDaffGeographyFacade } from './mock-geography-facade';\n\n@NgModule({\n  providers: [\n\t\t{ provide: DaffGeographyFacade, useExisting: MockDaffGeographyFacade }\n\t]\n})\nexport class DaffGeographyTestingModule {}\n"],"names":["BehaviorSubject","Injectable","NgModule","DaffGeographyFacade"],"mappings":";;;;;;;;;;AAAA;QAQA;YAEE,aAAQ,GAA6B,IAAIA,oBAAe,CAAC,IAAI,CAAC,CAAC;YAC/D,YAAO,GAA8B,IAAIA,oBAAe,CAAC,EAAE,CAAC,CAAC;YAC7D,eAAU,GAAmC,IAAIA,oBAAe,CAAC,EAAE,CAAC,CAAC;YACrE,gBAAW,GAAyC,IAAIA,oBAAe,CAAC,EAAE,CAAC,CAAC;YAC5E,kBAAa,GAA4B,IAAIA,oBAAe,CAAC,IAAI,CAAC,CAAC;YACnE,qBAAgB,GAA6C,IAAIA,oBAAe,CAAC,IAAI,CAAC,CAAC;SAexF;;;;;QAbC,4CAAU;;;;QAAV,UAAW,EAAE;YACX,OAAO,IAAIA,oBAAe,CAAC,IAAI,CAAC,CAAC;SAClC;;;;;QAED,wDAAsB;;;;QAAtB,UAAuB,EAAE;YACvB,OAAO,IAAIA,oBAAe,CAAC,EAAE,CAAC,CAAC;SAChC;;;;;QAED,sDAAoB;;;;QAApB,UAAqB,EAAE;YACrB,OAAO,IAAIA,oBAAe,CAAC,KAAK,CAAC,CAAA;SAClC;;;;;QAED,0CAAQ;;;;QAAR,UAAS,MAAc,KAAI;QAAA,CAAC;;oBArB7BC,eAAU,SAAC,EAAC,UAAU,EAAE,MAAM,EAAC;;;sCARhC;KAQA,IAsBC;;;QApBC,2CAA+D;;QAC/D,0CAA6D;;QAC7D,6CAAqE;;QACrE,8CAA4E;;QAC5E,gDAAmE;;QACnE,mDAAuF;;;;;;;;ACfzF;QAMA;SAK0C;;oBALzCC,aAAQ,SAAC;wBACR,SAAS,EAAE;4BACX,EAAE,OAAO,EAAEC,yBAAmB,EAAE,WAAW,EAAE,uBAAuB,EAAE;yBACtE;qBACD;;QACwC,iCAAC;KAL1C;;;;;;;;;;;;;"}