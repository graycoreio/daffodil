{"version":3,"file":"daffodil-geography.umd.js","sources":["ng://@daffodil/geography/comparators/address.ts","ng://@daffodil/geography/comparators/personal-address.ts"],"sourcesContent":["import { DaffAddress } from '../models/address';\n\n/**\n * Compares two addresses and returns true if all of their fields are equal.\n *\n * @param address0 An address.\n * @param address1 An address.\n */\nexport function daffCompareAddresses(address0: DaffAddress, address1: DaffAddress): boolean {\n  return !!(address0 && address1 &&\n    address0.street === address1.street &&\n    address0.street2 === address1.street2 &&\n    address0.city === address1.city &&\n    address0.region === address1.region &&\n    address0.country === address1.country &&\n    address0.country_id === address1.country_id &&\n    address0.postcode === address1.postcode)\n}\n","import { DaffPersonalAddress } from '../models/personal-address';\nimport { daffCompareAddresses } from './address';\n\n/**\n * Compares two personal addresses and returns true if all of their fields are equal.\n *\n * @param address0 A personal address.\n * @param address1 A personal address.\n */\nexport function daffComparePersonalAddresses(address0: DaffPersonalAddress, address1: DaffPersonalAddress): boolean {\n  return !!(address0 && address1 &&\n    address0.prefix === address1.prefix &&\n    address0.suffix === address1.suffix &&\n    address0.firstname === address1.firstname &&\n    address0.middlename === address1.middlename &&\n    address0.lastname === address1.lastname &&\n    address0.telephone === address1.telephone &&\n    address0.email === address1.email &&\n    daffCompareAddresses(address0, address1))\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;IAQA,SAAgB,oBAAoB,CAAC,QAAqB,EAAE,QAAqB;QAC/E,OAAO,CAAC,EAAE,QAAQ,IAAI,QAAQ;YAC5B,QAAQ,CAAC,MAAM,KAAK,QAAQ,CAAC,MAAM;YACnC,QAAQ,CAAC,OAAO,KAAK,QAAQ,CAAC,OAAO;YACrC,QAAQ,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI;YAC/B,QAAQ,CAAC,MAAM,KAAK,QAAQ,CAAC,MAAM;YACnC,QAAQ,CAAC,OAAO,KAAK,QAAQ,CAAC,OAAO;YACrC,QAAQ,CAAC,UAAU,KAAK,QAAQ,CAAC,UAAU;YAC3C,QAAQ,CAAC,QAAQ,KAAK,QAAQ,CAAC,QAAQ,CAAC,CAAA;KAC3C;;;;;;IChBD;;;;;;;IAQA,SAAgB,4BAA4B,CAAC,QAA6B,EAAE,QAA6B;QACvG,OAAO,CAAC,EAAE,QAAQ,IAAI,QAAQ;YAC5B,QAAQ,CAAC,MAAM,KAAK,QAAQ,CAAC,MAAM;YACnC,QAAQ,CAAC,MAAM,KAAK,QAAQ,CAAC,MAAM;YACnC,QAAQ,CAAC,SAAS,KAAK,QAAQ,CAAC,SAAS;YACzC,QAAQ,CAAC,UAAU,KAAK,QAAQ,CAAC,UAAU;YAC3C,QAAQ,CAAC,QAAQ,KAAK,QAAQ,CAAC,QAAQ;YACvC,QAAQ,CAAC,SAAS,KAAK,QAAQ,CAAC,SAAS;YACzC,QAAQ,CAAC,KAAK,KAAK,QAAQ,CAAC,KAAK;YACjC,oBAAoB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAA;KAC5C;;;;;;;;;;;;;"}