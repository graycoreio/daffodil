{"version":3,"file":"daffodil-geography-driver-testing.umd.js","sources":["ng://@daffodil/geography/driver/testing/drivers/geography.service.ts","ng://@daffodil/geography/driver/testing/drivers/geography-driver.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nimport {\n  DaffCountry\n} from '@daffodil/geography';\nimport {\n  DaffGeographyServiceInterface,\n} from '@daffodil/geography/driver';\nimport { DaffCountryFactory, DaffSubdivisionFactory } from '@daffodil/geography/testing';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffTestingGeographyService implements DaffGeographyServiceInterface<DaffCountry> {\n\n  constructor(\n    private countryFactory: DaffCountryFactory,\n    private subdivisionFactory: DaffSubdivisionFactory,\n  ) {}\n\n  get(countryId: DaffCountry['id']): Observable<DaffCountry> {\n    return of(this.countryFactory.create({\n      id: countryId,\n      subdivisions: this.subdivisionFactory.createMany(3)\n    }));\n  }\n\n  list(): Observable<DaffCountry[]> {\n    return of(this.countryFactory.createMany(5));\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DaffGeographyDriver } from '@daffodil/geography/driver';\n\nimport { DaffTestingGeographyService } from './geography.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ]\n})\nexport class DaffGeographyTestingDriverModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DaffGeographyTestingDriverModule,\n      providers: [\n        {\n          provide: DaffGeographyDriver,\n          useExisting: DaffTestingGeographyService\n        }\n      ]\n    };\n  }\n}\n"],"names":["of","Injectable","DaffCountryFactory","DaffSubdivisionFactory","DaffGeographyDriver","NgModule","CommonModule"],"mappings":";;;;;;;;;;AAAA;QAgBE,qCACU,cAAkC,EAClC,kBAA0C;YAD1C,mBAAc,GAAd,cAAc,CAAoB;YAClC,uBAAkB,GAAlB,kBAAkB,CAAwB;SAChD;;;;;QAEJ,yCAAG;;;;QAAH,UAAI,SAA4B;YAC9B,OAAOA,OAAE,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;gBACnC,EAAE,EAAE,SAAS;gBACb,YAAY,EAAE,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC,CAAC;aACpD,CAAC,CAAC,CAAC;SACL;;;;QAED,0CAAI;;;QAAJ;YACE,OAAOA,OAAE,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;SAC9C;;oBAnBFC,eAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;oBAJQC,0BAAkB;oBAAEC,8BAAsB;;;0CATnD;KAWA,IAoBC;;;;;;QAdG,qDAA0C;;;;;QAC1C,yDAAkD;;;;;;;AClBtD;QAOA;SAiBC;;;;QAXQ,wCAAO;;;QAAd;YACE,OAAO;gBACL,QAAQ,EAAE,gCAAgC;gBAC1C,SAAS,EAAE;oBACT;wBACE,OAAO,EAAEC,0BAAmB;wBAC5B,WAAW,EAAE,2BAA2B;qBACzC;iBACF;aACF,CAAC;SACH;;oBAhBFC,aAAQ,SAAC;wBACR,OAAO,EAAE;4BACPC,mBAAY;yBACb;qBACF;;QAaD,uCAAC;KAjBD;;;;;;;;;;;;;"}