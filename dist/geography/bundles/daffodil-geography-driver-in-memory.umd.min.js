!function(r,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common"),require("@daffodil/geography/driver"),require("@angular/common/http"),require("rxjs"),require("rxjs/operators"),require("angular-in-memory-web-api"),require("@daffodil/geography/testing")):"function"==typeof define&&define.amd?define("@daffodil/geography/driver/in-memory",["exports","@angular/core","@angular/common","@daffodil/geography/driver","@angular/common/http","rxjs","rxjs/operators","angular-in-memory-web-api","@daffodil/geography/testing"],e):e(((r=r||self).daffodil=r.daffodil||{},r.daffodil.geography=r.daffodil.geography||{},r.daffodil.geography.driver=r.daffodil.geography.driver||{},r.daffodil.geography.driver["in-memory"]={}),r.ng.core,r.ng.common,r.daffodil.geography.driver,r.ng.common.http,r.rxjs,r.rxjs.operators,r.angularInMemoryWebApi,r.daffodil.geography.testing)}(this,function(r,e,t,o,n,i,a,u,f){"use strict";var c=function(){function r(r){this.http=r,this.url="/api/countries"}return r.prototype.get=function(r){return this.http.get(this.url+"/"+r).pipe(a.catchError(function(r){return i.throwError(o.DaffCountryNotFoundError)}),a.map(function(r){return r}))},r.prototype.list=function(){return this.http.get(this.url+"/")},r.decorators=[{type:e.Injectable,args:[{providedIn:"root"}]}],r.ctorParameters=function(){return[{type:n.HttpClient}]},r.ngInjectableDef=e.ɵɵdefineInjectable({factory:function(){return new r(e.ɵɵinject(n.HttpClient))},token:r,providedIn:"root"}),r}();var d=function(){function r(){}return r.forRoot=function(){return{ngModule:r,providers:[{provide:o.DaffGeographyDriver,useExisting:c}]}},r.decorators=[{type:e.NgModule,args:[{imports:[t.CommonModule]}]}],r}(),s=function(){function r(r,e){var t=this;this.countryFactory=r,this.subdivisionFactory=e,this.countries=this.countryFactory.createMany(5),this.countries.forEach(function(r){return r.subdivisions=t.subdivisionFactory.createMany(5)})}return r.prototype.createDb=function(r){if(r){var e=r.utils.getJsonBody(r.req).countries;e&&(this.countries=e)}return{countries:this.countries}},r.prototype.get=function(r){var e=this;return r.utils.createResponse$(function(){return{body:r.id?e.getCountry(r):e.listCountries(r),status:u.STATUS.OK}})},r.prototype.getCountry=function(r){return r.collection.find(function(e){return e.id===r.id})},r.prototype.listCountries=function(r){return r.collection},r.decorators=[{type:e.Injectable,args:[{providedIn:"root"}]}],r.ctorParameters=function(){return[{type:f.DaffCountryFactory},{type:f.DaffSubdivisionFactory}]},r.ngInjectableDef=e.ɵɵdefineInjectable({factory:function(){return new r(e.ɵɵinject(f.DaffCountryFactory),e.ɵɵinject(f.DaffSubdivisionFactory))},token:r,providedIn:"root"}),r}();r.DaffGeographyInMemoryDriverModule=d,r.DaffInMemoryBackendGeographyService=s,r.DaffInMemoryGeographyService=c,Object.defineProperty(r,"__esModule",{value:!0})});
//# sourceMappingURL=daffodil-geography-driver-in-memory.umd.min.js.map