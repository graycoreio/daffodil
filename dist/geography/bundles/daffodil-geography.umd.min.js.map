{"version":3,"sources":["ng://@daffodil/geography/comparators/address.ts","ng://@daffodil/geography/comparators/personal-address.ts"],"names":["daffCompareAddresses","address0","address1","street","street2","city","region","country","country_id","postcode","prefix","suffix","firstname","middlename","lastname","telephone","email"],"mappings":"iQAQA,SAAgBA,EAAqBC,EAAuBC,GAC1D,SAAUD,IAAYC,GACpBD,EAASE,SAAWD,EAASC,QAC7BF,EAASG,UAAYF,EAASE,SAC9BH,EAASI,OAASH,EAASG,MAC3BJ,EAASK,SAAWJ,EAASI,QAC7BL,EAASM,UAAYL,EAASK,SAC9BN,EAASO,aAAeN,EAASM,YACjCP,EAASQ,WAAaP,EAASO,kECPnC,SAA6CR,EAA+BC,GAC1E,SAAUD,GAAYC,GACpBD,EAASS,SAAWR,EAASQ,QAC7BT,EAASU,SAAWT,EAASS,QAC7BV,EAASW,YAAcV,EAASU,WAChCX,EAASY,aAAeX,EAASW,YACjCZ,EAASa,WAAaZ,EAASY,UAC/Bb,EAASc,YAAcb,EAASa,WAChCd,EAASe,QAAUd,EAASc,OAC5BhB,EAAqBC,EAAUC","sourcesContent":["import { DaffAddress } from '../models/address';\n\n/**\n * Compares two addresses and returns true if all of their fields are equal.\n *\n * @param address0 An address.\n * @param address1 An address.\n */\nexport function daffCompareAddresses(address0: DaffAddress, address1: DaffAddress): boolean {\n  return !!(address0 && address1 &&\n    address0.street === address1.street &&\n    address0.street2 === address1.street2 &&\n    address0.city === address1.city &&\n    address0.region === address1.region &&\n    address0.country === address1.country &&\n    address0.country_id === address1.country_id &&\n    address0.postcode === address1.postcode)\n}\n","import { DaffPersonalAddress } from '../models/personal-address';\nimport { daffCompareAddresses } from './address';\n\n/**\n * Compares two personal addresses and returns true if all of their fields are equal.\n *\n * @param address0 A personal address.\n * @param address1 A personal address.\n */\nexport function daffComparePersonalAddresses(address0: DaffPersonalAddress, address1: DaffPersonalAddress): boolean {\n  return !!(address0 && address1 &&\n    address0.prefix === address1.prefix &&\n    address0.suffix === address1.suffix &&\n    address0.firstname === address1.firstname &&\n    address0.middlename === address1.middlename &&\n    address0.lastname === address1.lastname &&\n    address0.telephone === address1.telephone &&\n    address0.email === address1.email &&\n    daffCompareAddresses(address0, address1))\n}\n"]}