{"version":3,"file":"daffodil-geography-driver-testing.js","sources":["ng://@daffodil/geography/driver/testing/drivers/geography.service.ts","ng://@daffodil/geography/driver/testing/drivers/geography-driver.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nimport {\n  DaffCountry\n} from '@daffodil/geography';\nimport {\n  DaffGeographyServiceInterface,\n} from '@daffodil/geography/driver';\nimport { DaffCountryFactory, DaffSubdivisionFactory } from '@daffodil/geography/testing';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffTestingGeographyService implements DaffGeographyServiceInterface<DaffCountry> {\n\n  constructor(\n    private countryFactory: DaffCountryFactory,\n    private subdivisionFactory: DaffSubdivisionFactory,\n  ) {}\n\n  get(countryId: DaffCountry['id']): Observable<DaffCountry> {\n    return of(this.countryFactory.create({\n      id: countryId,\n      subdivisions: this.subdivisionFactory.createMany(3)\n    }));\n  }\n\n  list(): Observable<DaffCountry[]> {\n    return of(this.countryFactory.createMany(5));\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DaffGeographyDriver } from '@daffodil/geography/driver';\n\nimport { DaffTestingGeographyService } from './geography.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ]\n})\nexport class DaffGeographyTestingDriverModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DaffGeographyTestingDriverModule,\n      providers: [\n        {\n          provide: DaffGeographyDriver,\n          useExisting: DaffTestingGeographyService\n        }\n      ]\n    };\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAA;IAgBE,qCACU,cAAkC,EAClC,kBAA0C;QAD1C,mBAAc,GAAd,cAAc,CAAoB;QAClC,uBAAkB,GAAlB,kBAAkB,CAAwB;KAChD;;;;;IAEJ,yCAAG;;;;IAAH,UAAI,SAA4B;QAC9B,OAAO,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;YACnC,EAAE,EAAE,SAAS;YACb,YAAY,EAAE,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC,CAAC;SACpD,CAAC,CAAC,CAAC;KACL;;;;IAED,0CAAI;;;IAAJ;QACE,OAAO,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;KAC9C;;gBAnBF,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;gBAJQ,kBAAkB;gBAAE,sBAAsB;;;sCATnD;CAWA,IAoBC;;;;;;IAdG,qDAA0C;;;;;IAC1C,yDAAkD;;;;;;;AClBtD;IAOA;KAiBC;;;;IAXQ,wCAAO;;;IAAd;QACE,OAAO;YACL,QAAQ,EAAE,gCAAgC;YAC1C,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,mBAAmB;oBAC5B,WAAW,EAAE,2BAA2B;iBACzC;aACF;SACF,CAAC;KACH;;gBAhBF,QAAQ,SAAC;oBACR,OAAO,EAAE;wBACP,YAAY;qBACb;iBACF;;IAaD,uCAAC;CAjBD;;;;;;;;;;;;;;;;;;;;;;;;"}