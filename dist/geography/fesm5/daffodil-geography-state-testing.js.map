{"version":3,"file":"daffodil-geography-state-testing.js","sources":["ng://@daffodil/geography/state/testing/mock-geography-facade.ts","ng://@daffodil/geography/state/testing/geography-testing.module.ts"],"sourcesContent":["import { BehaviorSubject } from 'rxjs';\nimport { Action } from '@ngrx/store';\nimport { Dictionary } from '@ngrx/entity';\nimport { Injectable } from '@angular/core';\n\nimport { DaffCountry } from '@daffodil/geography';\nimport { DaffGeographyFacadeInterface } from '@daffodil/geography/state';\n\n@Injectable({providedIn: 'root'})\nexport class MockDaffGeographyFacade implements DaffGeographyFacadeInterface {\n  loading$: BehaviorSubject<boolean> = new BehaviorSubject(null);\n  errors$: BehaviorSubject<string[]> = new BehaviorSubject([]);\n  countries$: BehaviorSubject<DaffCountry[]> = new BehaviorSubject([]);\n  countryIds$: BehaviorSubject<(string | number)[]> = new BehaviorSubject([]);\n  countryCount$: BehaviorSubject<number> = new BehaviorSubject(null);\n  countryEntities$: BehaviorSubject<Dictionary<DaffCountry>> = new BehaviorSubject(null);\n\n  getCountry(id) {\n    return new BehaviorSubject(null);\n  }\n\n  getCountrySubdivisions(id) {\n    return new BehaviorSubject([]);\n  }\n\n  isCountryFullyLoaded(id) {\n    return new BehaviorSubject(false)\n  }\n\n  dispatch(action: Action) {};\n}\n","import { NgModule } from '@angular/core';\n\nimport { DaffGeographyFacade } from '@daffodil/geography/state';\n\nimport { MockDaffGeographyFacade } from './mock-geography-facade';\n\n@NgModule({\n  providers: [\n\t\t{ provide: DaffGeographyFacade, useExisting: MockDaffGeographyFacade }\n\t]\n})\nexport class DaffGeographyTestingModule {}\n"],"names":[],"mappings":";;;;;;;;AAAA;IAQA;QAEE,aAAQ,GAA6B,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;QAC/D,YAAO,GAA8B,IAAI,eAAe,CAAC,EAAE,CAAC,CAAC;QAC7D,eAAU,GAAmC,IAAI,eAAe,CAAC,EAAE,CAAC,CAAC;QACrE,gBAAW,GAAyC,IAAI,eAAe,CAAC,EAAE,CAAC,CAAC;QAC5E,kBAAa,GAA4B,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;QACnE,qBAAgB,GAA6C,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;KAexF;;;;;IAbC,4CAAU;;;;IAAV,UAAW,EAAE;QACX,OAAO,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;KAClC;;;;;IAED,wDAAsB;;;;IAAtB,UAAuB,EAAE;QACvB,OAAO,IAAI,eAAe,CAAC,EAAE,CAAC,CAAC;KAChC;;;;;IAED,sDAAoB;;;;IAApB,UAAqB,EAAE;QACrB,OAAO,IAAI,eAAe,CAAC,KAAK,CAAC,CAAA;KAClC;;;;;IAED,0CAAQ;;;;IAAR,UAAS,MAAc,KAAI;IAAA,CAAC;;gBArB7B,UAAU,SAAC,EAAC,UAAU,EAAE,MAAM,EAAC;;;kCARhC;CAQA,IAsBC;;;IApBC,2CAA+D;;IAC/D,0CAA6D;;IAC7D,6CAAqE;;IACrE,8CAA4E;;IAC5E,gDAAmE;;IACnE,mDAAuF;;;;;;;;ACfzF;IAMA;KAK0C;;gBALzC,QAAQ,SAAC;oBACR,SAAS,EAAE;wBACX,EAAE,OAAO,EAAE,mBAAmB,EAAE,WAAW,EAAE,uBAAuB,EAAE;qBACtE;iBACD;;IACwC,iCAAC;CAL1C;;;;;;;;;;;;;;;;;;;"}