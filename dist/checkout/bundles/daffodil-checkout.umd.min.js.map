{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@daffodil/checkout/shipping/actions/shipping.actions.ts","ng://@daffodil/checkout/shipping/selectors/shipping.selectors.ts","ng://@daffodil/checkout/shipping/containers/shipping.component.ts","ng://@daffodil/checkout/order/selectors/order.selector.ts","ng://@daffodil/checkout/order/containers/order.component.ts","ng://@daffodil/checkout/payment/actions/payment.actions.ts","ng://@daffodil/checkout/payment/reducers/payment/payment.reducer.ts","ng://@daffodil/checkout/payment/reducers/payment-reducers.ts","ng://@daffodil/checkout/payment/payment-state.module.ts","ng://@daffodil/checkout/payment/payment.module.ts","ng://@daffodil/checkout/payment/selectors/payment.selector.ts","ng://@daffodil/checkout/payment/facades/payment.facade.ts","ng://@daffodil/checkout/drivers/injection-tokens/payment-driver.token.ts","ng://@daffodil/checkout/drivers/interfaces/order-service.interface.ts","ng://@daffodil/checkout/drivers/injection-tokens/payment-transformer.token.ts","ng://@daffodil/checkout/billing/actions/billing.actions.ts","ng://@daffodil/checkout/billing/selectors/billing.selector.ts","ng://@daffodil/checkout/billing/reducers/billing/billing.reducer.ts","ng://@daffodil/checkout/billing/reducers/billing-reducers.ts","ng://@daffodil/checkout/billing/billing-state.module.ts","ng://@daffodil/checkout/billing/containers/billing.component.ts","ng://@daffodil/checkout/billing/billing.module.ts","ng://@daffodil/checkout/billing/facades/billing.facade.ts","ng://@daffodil/checkout/shipping/reducers/shipping/shipping.reducer.ts","ng://@daffodil/checkout/shipping/reducers/shipping-reducers.ts","ng://@daffodil/checkout/shipping/shipping-state.module.ts","ng://@daffodil/checkout/shipping/shipping.module.ts","ng://@daffodil/checkout/shipping/facades/shipping.facade.ts","ng://@daffodil/checkout/order/actions/order.actions.ts","ng://@daffodil/checkout/order/reducers/order/order.reducer.ts","ng://@daffodil/checkout/order/reducers/order-reducers.ts","ng://@daffodil/checkout/drivers/injection-tokens/driver-checkout.token.ts","ng://@daffodil/checkout/order/effects/order.effects.ts","ng://@daffodil/checkout/order/order-state.module.ts","ng://@daffodil/checkout/order/order.module.ts","ng://@daffodil/checkout/order/facades/order.facade.ts","ng://@daffodil/checkout/checkout.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__metadata","metadataKey","metadataValue","Reflect","metadata","UpdateShippingAddressAction","SelectShippingOptionAction","payload","type","DaffShippingActionTypes","DaffSelectShippingOption","selectShippingFeatureState","createFeatureSelector","selectShippingState","createSelector","state","shipping","selectShippingAddress","shippingAddress","selectShippingOptionId","selectedShippingOptionId","selectIsShippingAddressValid","ShippingContainer","store","ngOnInit","shippingAddress$","pipe","select","selectedShippingOptionId$","isShippingAddressValid$","updateShippingAddress","address","dispatch","DaffUpdateShippingAddress","selectShippingOption","optionId","Component","args","selector","template","exportAs","Store","selectOrderFeatureState","selectOrderState","order","selectOrder","selectLoading","loading","selectErrors","errors","OrderContainer","order$","loading$","UpdatePaymentInfoAction","DaffPaymentActionTypes","initialState","paymentInfo","daffPaymentReducer","action","daffPaymentReducers","payment","DaffPaymentStateModule","NgModule","imports","StoreModule","forFeature","DaffPaymentModule","CommonModule","selectPaymentFeatureState","selectPaymentState","selectPaymentInfo","DaffPaymentFacade","paymentInfo$","Injectable","providedIn","DaffPaymentDriver","InjectionToken","DaffOrderDriver","DaffPaymentTransformer","UpdateBillingAddressAction","ToggleBillingAddressIsShippingAddressAction","DaffBillingActionTypes","DaffUpdatePaymentInfo$1","DaffToggleBillingAddressIsShippingAddress","selectBillingFeatureState","selectBillingState","billing","selectBillingAddress","billingAddress","selectBillingAddressIsShippingAddress","billingAddressIsShippingAddress","daffBillingReducer","initialState$1","daffBillingReducers","DaffBillingStateModule","BillingContainer","billingAddress$","billingAddressIsShippingAddress$","updateBillingAddress","DaffUpdateBillingAddress","toggleBillingAddressIsShippingAddress","updatePaymentInfo","info","DaffUpdatePaymentInfo","DaffBillingModule","declarations","exports","DaffBillingFacade","daffShippingReducer","initialState$2","daffShippingReducers","DaffShippingStateModule","DaffShippingModule","DaffShippingFacade","PlaceOrderAction","PlaceOrderSuccessAction","PlaceOrderFailureAction","DaffOrderActionTypes","daffOrderReducer","initialState$3","daffOrderReducers","DaffCheckoutDriver","OrderEffects","actions$","checkoutDriver","_this","onPlaceOrder$","ofType","switchMap","placeOrder","id","toString","map","resp","DaffPlaceOrderSuccess","catchError","error","of","DaffPlaceOrderFailure","Actions","Inject","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","decorate","defineProperty","tslib_1.__decorate","Effect","Observable","DaffOrderStateModule","EffectsModule","DaffOrderModule","DaffOrderFacade","errors$","StateCheckoutModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Action } from '@ngrx/store';\n\nimport { DaffAddress } from '@daffodil/core';\n\nexport enum DaffShippingActionTypes {\n  UpdateShippingAddressAction = '[Shipping] Update Shipping Address Action',\n  SelectShippingOptionAction = '[Shipping] Select Shipping Option Action'\n}\n\nexport class DaffUpdateShippingAddress implements Action {\n  readonly type = DaffShippingActionTypes.UpdateShippingAddressAction;\n\n  constructor(public payload: DaffAddress) {}\n}\n\nexport class DaffSelectShippingOption implements Action {\n  readonly type = DaffShippingActionTypes.SelectShippingOptionAction;\n\n  constructor(public payload: string) {}\n}\n\nexport type DaffShippingActions =\n    | DaffUpdateShippingAddress\n    | DaffSelectShippingOption;\n","import { createSelector, createFeatureSelector, MemoizedSelector } from '@ngrx/store';\n\nimport { DaffAddress } from '@daffodil/core';\n\nimport { DaffShippingReducerState } from '../reducers/shipping/shipping-reducer.interface';\nimport { DaffShippingReducersState } from '../reducers/shipping-reducers.interface';\n\n/**\n * Shipping Feature State\n */\nexport const selectShippingFeatureState: MemoizedSelector<object, DaffShippingReducersState> = createFeatureSelector<DaffShippingReducersState>('shipping');\n\n/**\n * Shipping State\n */\nexport const selectShippingState = createSelector(\n  selectShippingFeatureState,\n  (state: DaffShippingReducersState) => state.shipping\n);\n\nexport const selectShippingAddress: MemoizedSelector<object, DaffAddress> = createSelector(\n  selectShippingState,\n  (state: DaffShippingReducerState) => state.shippingAddress\n);\n\nexport const selectShippingOptionId: MemoizedSelector<object, string> = createSelector(\n  selectShippingState,\n  (state: DaffShippingReducerState) => state.selectedShippingOptionId\n);\n\nexport const selectIsShippingAddressValid: MemoizedSelector<object, boolean> = createSelector(\n  selectShippingAddress,\n  (state: DaffAddress) => !!state\n);\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store, select } from '@ngrx/store';\n\nimport { DaffAddress } from '@daffodil/core';\n\nimport { DaffUpdateShippingAddress, DaffSelectShippingOption } from '../actions/shipping.actions';\nimport { DaffShippingReducersState } from '../reducers/shipping-reducers.interface';\nimport { selectShippingAddress, selectShippingOptionId, selectIsShippingAddressValid } from '../selectors/shipping.selectors';\n\n@Component({\n  selector: '[shipping-container]',\n  template: '<ng-content></ng-content>',\n  exportAs: 'ShippingContainer'\n})\nexport class ShippingContainer implements OnInit {\n  \n  shippingAddress$: Observable<DaffAddress>;\n  selectedShippingOptionId$: Observable<string>;\n  isShippingAddressValid$: Observable<boolean>;\n  isShippingOptionSelected$: Observable<boolean>;\n\n  constructor(\n    private store: Store<DaffShippingReducersState>\n  ) { }\n\n  ngOnInit() {\n    this.shippingAddress$ = this.store.pipe(select(selectShippingAddress));\n    this.selectedShippingOptionId$ = this.store.pipe(select(selectShippingOptionId));\n    this.isShippingAddressValid$ = this.store.pipe(select(selectIsShippingAddressValid));\n  }\n\n  updateShippingAddress(address: DaffAddress) {\n    this.store.dispatch(new DaffUpdateShippingAddress(address));\n  }\n\n  selectShippingOption(optionId: string) {\n    this.store.dispatch(new DaffSelectShippingOption(optionId));\n  }\n}\n","import { createSelector, createFeatureSelector, MemoizedSelector } from '@ngrx/store';\n\nimport { DaffOrder } from '../../models/order/order';\nimport { DaffOrderReducersState } from '../reducers/order-reducers.interface';\nimport { DaffOrderReducerState } from '../reducers/order/order-reducer.interface';\n\n/**\n * Order Feature State\n * @deprecated\n */\nexport const selectOrderFeatureState: MemoizedSelector<object, DaffOrderReducersState> = createFeatureSelector<DaffOrderReducersState>('order');\n\n/**\n * Order State\n * @deprecated\n */\nexport const selectOrderState = createSelector(\n  selectOrderFeatureState,\n  (state: DaffOrderReducersState) => state.order\n)\n\n/**\n * @deprecated\n */\nexport const selectOrder: MemoizedSelector<object, DaffOrder> = createSelector(\n  selectOrderState,\n  (state: DaffOrderReducerState) => state.order\n)\n\n/**\n * @deprecated\n */\nexport const selectLoading: MemoizedSelector<object, boolean> = createSelector(\n  selectOrderState,\n  (state: DaffOrderReducerState) => state.loading\n)\n\n/**\n * @deprecated\n */\nexport const selectErrors: MemoizedSelector<object, string[]> = createSelector(\n  selectOrderState,\n  (state: DaffOrderReducerState) => state.errors\n)\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store, select } from '@ngrx/store';\n\nimport { DaffOrderReducersState } from '../reducers/order-reducers.interface';\nimport { selectOrder, selectLoading } from '../selectors/order.selector';\nimport { DaffOrder } from '../../models/order/order';\n\n/**\n * @deprecated\n */\n@Component({\n  selector: '[order-container]',\n  template: '<ng-content></ng-content>',\n  exportAs: 'OrderContainer'\n})\nexport class OrderContainer implements OnInit {\n\n  order$: Observable<DaffOrder>;\n  loading$: Observable<boolean>;\n\n  constructor(\n    private store: Store<DaffOrderReducersState>\n  ) { }\n\n  ngOnInit() {\n    this.order$ = this.store.pipe(select(selectOrder));\n    this.loading$ = this.store.pipe(select(selectLoading));\n  }\n}\n","import { Action } from '@ngrx/store';\n\nimport { PaymentInfo } from '../../models/payment/payment-info';\n\nexport enum DaffPaymentActionTypes {\n  UpdatePaymentInfoAction = '[Payment] Update Payment Info Action'\n}\n\nexport class DaffUpdatePaymentInfo implements Action {\n  readonly type = DaffPaymentActionTypes.UpdatePaymentInfoAction;\n\n  constructor(public payload: PaymentInfo) {}\n}\n\nexport type DaffPaymentActions =\n    | DaffUpdatePaymentInfo;\n","import { DaffPaymentActionTypes, DaffPaymentActions } from '../../actions/payment.actions';\nimport { DaffPaymentReducerState } from './payment-reducer.interface';\n\nexport const initialState: DaffPaymentReducerState = {\n  paymentInfo: null\n};\n\nexport function daffPaymentReducer(state = initialState, action: DaffPaymentActions): DaffPaymentReducerState {\n  switch (action.type) {\n    case DaffPaymentActionTypes.UpdatePaymentInfoAction:\n      return {...state, paymentInfo: action.payload};\n    default:\n      return state;\n  }\n}\n","import { ActionReducerMap } from '@ngrx/store';\n\nimport { DaffPaymentReducersState } from './payment-reducers.interface';\nimport { daffPaymentReducer } from './payment/payment.reducer';\n\nexport const daffPaymentReducers : ActionReducerMap<DaffPaymentReducersState> = {\n  payment: daffPaymentReducer\n}\n","import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\n\nimport { daffPaymentReducers } from './reducers/payment-reducers';\n\n@NgModule({\n  imports: [\n    StoreModule.forFeature('payment', daffPaymentReducers)\n  ]\n})\nexport class DaffPaymentStateModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DaffPaymentStateModule } from './payment-state.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    /**\n     * Ngrx/store\n     */\n    DaffPaymentStateModule,\n  ]\n})\nexport class DaffPaymentModule { }\n","import { createSelector, createFeatureSelector } from '@ngrx/store';\n\nimport { DaffPaymentReducersState } from '../reducers/payment-reducers.interface';\nimport { DaffPaymentReducerState } from '../reducers/payment/payment-reducer.interface';\n\n/**\n * Payment Feature State\n */\nexport const selectPaymentFeatureState = createFeatureSelector<DaffPaymentReducersState>('payment');\n\n/**\n * Payment State\n */\nexport const selectPaymentState = createSelector(\n  selectPaymentFeatureState,\n  (state: DaffPaymentReducersState) => state.payment\n)\n\nexport const selectPaymentInfo = createSelector(\n  selectPaymentState,\n  (state: DaffPaymentReducerState) => state.paymentInfo\n)\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store, select, Action } from '@ngrx/store';\n\nimport { DaffStoreFacade } from '@daffodil/core/state';\n\nimport { DaffPaymentModule } from '../payment.module';\nimport { DaffPaymentReducersState } from '../reducers/payment-reducers.interface';\nimport { PaymentInfo } from '../../models/payment/payment-info';\nimport { selectPaymentInfo } from '../selectors/payment.selector';\n\n/**\n * A facade for accessing state for customer payment information.\n */\n@Injectable({\n  providedIn: DaffPaymentModule\n})\nexport class DaffPaymentFacade implements DaffStoreFacade<Action> {\n  /**\n   * The payment information for a customer.\n   */\n  paymentInfo$: Observable<PaymentInfo>;\n\n  constructor(private store: Store<DaffPaymentReducersState>) {\n    this.paymentInfo$ = this.store.pipe(select(selectPaymentInfo));\n  }\n\n  /**\n   * Dispatches the given action.\n   * @param action action to dispatch.\n   */\n  dispatch(action: Action) {\n    this.store.dispatch(action);\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const DaffPaymentDriver = new InjectionToken('DaffPaymentDriver');\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DaffOrder } from '../../models/order/order';\n\nexport const DaffOrderDriver = new InjectionToken<DaffOrderServiceInterface>('DaffOrderDriver');\n\n/**\n * Query order objects accessible by the logged-in user.\n * @deprecated\n */\nexport interface DaffOrderServiceInterface<T extends DaffOrder = DaffOrder> {\n  /**\n   * Get an order object with the specified order ID.\n   */\n  get(orderId: T['id']): Observable<T>;\n\n  /**\n   * List all order objects for the logged-in user.\n   */\n  list(): Observable<T[]>;\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const DaffPaymentTransformer = new InjectionToken('DaffPaymentTransformer');\n","import { Action } from '@ngrx/store';\n\nimport { DaffAddress } from '@daffodil/core';\n\nimport { PaymentInfo } from '../../models/payment/payment-info';\n\nexport enum DaffBillingActionTypes {\n  UpdateBillingAddressAction = '[Billing] Update Billing Address Action',\n  UpdatePaymentInfoAction = '[Billing] Update Payment Info Action',\n  ToggleBillingAddressIsShippingAddressAction = '[Billing] Billing Address Is Shipping Address Action'\n}\n\nexport class DaffUpdateBillingAddress implements Action {\n  readonly type = DaffBillingActionTypes.UpdateBillingAddressAction;\n\n  constructor(public payload: DaffAddress) {}\n}\n\nexport class DaffUpdatePaymentInfo implements Action {\n  readonly type = DaffBillingActionTypes.UpdatePaymentInfoAction;\n\n  constructor(public payload: PaymentInfo) {}\n}\n\nexport class DaffToggleBillingAddressIsShippingAddress implements Action {\n  readonly type = DaffBillingActionTypes.ToggleBillingAddressIsShippingAddressAction;\n}\n\nexport type DaffBillingActions =\n    | DaffUpdateBillingAddress\n    | DaffUpdatePaymentInfo\n    | DaffToggleBillingAddressIsShippingAddress;\n","import { createSelector, createFeatureSelector, MemoizedSelector } from '@ngrx/store';\n\nimport { DaffAddress } from '@daffodil/core';\n\nimport { PaymentInfo } from '../../models/payment/payment-info';\nimport { DaffBillingReducersState } from '../reducers/billing-reducers.interface';\nimport { DaffBillingReducerState } from '../reducers/billing/billing-reducer.interface';\n\n/**\n * Billing Feature State\n */\nexport const selectBillingFeatureState: MemoizedSelector<object, DaffBillingReducersState> = createFeatureSelector<DaffBillingReducersState>('billing');\n\n/**\n * Billing State\n */\nexport const selectBillingState = createSelector(\n  selectBillingFeatureState,\n  (state: DaffBillingReducersState) => state.billing\n)\n\nexport const selectBillingAddress: MemoizedSelector<object, DaffAddress> = createSelector(\n  selectBillingState,\n  (state: DaffBillingReducerState) => state.billingAddress\n)\n\nexport const selectBillingAddressIsShippingAddress: MemoizedSelector<object, boolean> = createSelector(\n  selectBillingState,\n  (state: DaffBillingReducerState) => state.billingAddressIsShippingAddress\n)\n\nexport const selectPaymentInfo: MemoizedSelector<object, PaymentInfo> = createSelector(\n  selectBillingState,\n  (state: DaffBillingReducerState) => state.paymentInfo\n)\n","import { DaffBillingActionTypes, DaffBillingActions } from '../../actions/billing.actions';\nimport { DaffBillingReducerState } from './billing-reducer.interface';\n\nexport const initialState: DaffBillingReducerState = {\n  billingAddress: null,\n  billingAddressIsShippingAddress: false,\n  paymentInfo: null\n};\n\nexport function daffBillingReducer(state = initialState, action: DaffBillingActions): DaffBillingReducerState {\n  switch (action.type) {\n    case DaffBillingActionTypes.UpdateBillingAddressAction:\n      return {...state, billingAddress: action.payload};\n    case DaffBillingActionTypes.ToggleBillingAddressIsShippingAddressAction:\n      return {...state, billingAddress: null, billingAddressIsShippingAddress: !state.billingAddressIsShippingAddress}\n    case DaffBillingActionTypes.UpdatePaymentInfoAction:\n      return {...state, paymentInfo: action.payload};\n    default:\n      return state;\n  }\n}\n","import { ActionReducerMap } from '@ngrx/store';\n\nimport { daffBillingReducer } from './billing/billing.reducer';\nimport { DaffBillingReducersState } from './billing-reducers.interface';\n\nexport const daffBillingReducers: ActionReducerMap<DaffBillingReducersState> = {\n  billing: daffBillingReducer\n}","import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\n\nimport { daffBillingReducers } from './reducers/billing-reducers';\n\n@NgModule({\n  imports: [\n    StoreModule.forFeature('billing', daffBillingReducers)\n  ]\n})\nexport class DaffBillingStateModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store, select } from '@ngrx/store';\n\nimport { DaffAddress } from '@daffodil/core';\n\nimport { DaffUpdateBillingAddress, DaffUpdatePaymentInfo, DaffToggleBillingAddressIsShippingAddress } from '../actions/billing.actions';\nimport { PaymentInfo } from '../../models/payment/payment-info';\nimport { selectBillingAddress, selectBillingAddressIsShippingAddress, selectPaymentInfo } from '../selectors/billing.selector';\nimport { DaffBillingReducersState } from '../reducers/billing-reducers.interface';\n\n@Component({\n  selector: '[billing-container]',\n  template: '<ng-content></ng-content>',\n  exportAs: 'BillingContainer'\n})\nexport class BillingContainer implements OnInit {\n  \n  billingAddress$: Observable<DaffAddress>;\n  billingAddressIsShippingAddress$: Observable<boolean>;\n  paymentInfo$: Observable<PaymentInfo>;\n\n  constructor(\n    private store: Store<DaffBillingReducersState>\n  ) { }\n\n  ngOnInit() {\n    this.billingAddress$ = this.store.pipe(select(selectBillingAddress));\n    this.billingAddressIsShippingAddress$ = this.store.pipe(select(selectBillingAddressIsShippingAddress));\n    this.paymentInfo$ = this.store.pipe(select(selectPaymentInfo));\n  }\n\n  updateBillingAddress(address: DaffAddress) {\n    this.store.dispatch(new DaffUpdateBillingAddress(address));\n  }\n\n  toggleBillingAddressIsShippingAddress() {\n    this.store.dispatch(new DaffToggleBillingAddressIsShippingAddress());\n  }\n\n  updatePaymentInfo(info: PaymentInfo) {\n    this.store.dispatch(new DaffUpdatePaymentInfo(info));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DaffBillingStateModule } from './billing-state.module';\nimport { BillingContainer } from './containers/billing.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    /**\n     * Ngrx/store\n     */\n    DaffBillingStateModule,\n  ],\n  declarations: [\n    BillingContainer\n  ],\n  exports: [\n    BillingContainer\n  ]\n})\nexport class DaffBillingModule { }","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store, select, Action } from '@ngrx/store';\n\nimport { DaffAddress } from '@daffodil/core';\nimport { DaffStoreFacade } from '@daffodil/core/state';\n\nimport { DaffBillingModule } from '../billing.module';\nimport { DaffBillingReducersState } from '../reducers/billing-reducers.interface';\nimport {\n  selectBillingAddress,\n  selectBillingAddressIsShippingAddress,\n  selectPaymentInfo\n} from '../selectors/billing.selector';\nimport { PaymentInfo } from '../../models/payment/payment-info';\n\n/**\n * A facade for accessing state for the billing information of a customer\n */\n@Injectable({\n  providedIn: DaffBillingModule\n})\nexport class DaffBillingFacade implements DaffStoreFacade<Action> {\n  /**\n   * The billing address for a customer.\n   */\n  billingAddress$: Observable<DaffAddress>;\n  /**\n   * Whether or not the billing address is the same as the shipping address.\n   */\n  billingAddressIsShippingAddress$: Observable<boolean>;\n  /**\n   * The payment information for a customer.\n   */\n  paymentInfo$: Observable<PaymentInfo>;\n\n  constructor(private store: Store<DaffBillingReducersState>) {\n    this.billingAddress$ = this.store.pipe(select(selectBillingAddress));\n    this.billingAddressIsShippingAddress$ = this.store.pipe(select(selectBillingAddressIsShippingAddress));\n    this.paymentInfo$ = this.store.pipe(select(selectPaymentInfo));\n  }\n\n  /**\n   * Dispatches the given action.\n   * @param action action to dispatch.\n   */\n  dispatch(action: Action) {\n    this.store.dispatch(action);\n  }\n}\n","import { DaffShippingActionTypes, DaffShippingActions } from '../../actions/shipping.actions';\nimport { DaffShippingReducerState } from './shipping-reducer.interface';\n\nexport const initialState: DaffShippingReducerState = {\n  shippingAddress: null,\n  selectedShippingOptionId: null\n};\n\nexport function daffShippingReducer(state = initialState, action: DaffShippingActions): DaffShippingReducerState {\n  switch (action.type) {\n    case DaffShippingActionTypes.UpdateShippingAddressAction:\n      return {...state, shippingAddress: action.payload};\n    case DaffShippingActionTypes.SelectShippingOptionAction:\n      return {...state, selectedShippingOptionId: action.payload};\n    default:\n      return state;\n  }\n}\n","import { ActionReducerMap } from '@ngrx/store';\n\nimport { DaffShippingReducersState } from './shipping-reducers.interface';\nimport { daffShippingReducer } from './shipping/shipping.reducer';\n\nexport const daffShippingReducers: ActionReducerMap<DaffShippingReducersState> = {\n  shipping: daffShippingReducer\n}\n","import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\n\nimport { daffShippingReducers } from './reducers/shipping-reducers';\n\n@NgModule({\n  imports: [\n    StoreModule.forFeature('shipping', daffShippingReducers)\n  ]\n})\nexport class DaffShippingStateModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DaffShippingStateModule } from './shipping-state.module';\nimport { ShippingContainer } from './containers/shipping.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    /**\n     * Ngrx/store\n     */\n    DaffShippingStateModule,\n  ],\n  declarations: [\n    ShippingContainer\n  ],\n  exports: [\n    ShippingContainer\n  ]\n})\nexport class DaffShippingModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store, select, Action } from '@ngrx/store';\n\nimport { DaffAddress } from '@daffodil/core';\nimport { DaffStoreFacade } from '@daffodil/core/state';\n\nimport { DaffShippingModule } from '../shipping.module';\nimport { DaffShippingReducersState } from '../reducers/shipping-reducers.interface';\nimport { selectShippingAddress, selectShippingOptionId, selectIsShippingAddressValid } from '../selectors/shipping.selectors';\n\n/**\n * A facade for accessing state for shipping information.\n */\n@Injectable({\n  providedIn: DaffShippingModule\n})\nexport class DaffShippingFacade implements DaffStoreFacade<Action> {\n  /**\n   * The shipping address for the customer.\n   */\n  shippingAddress$: Observable<DaffAddress>;\n  /**\n   * The selected shipping option id.\n   */\n  selectedShippingOptionId$: Observable<string>;\n  /**\n   * Is the shipping address valid.\n   */\n  isShippingAddressValid$: Observable<boolean>;\n\n  constructor(private store: Store<DaffShippingReducersState>) {\n    this.shippingAddress$ = this.store.pipe(select(selectShippingAddress));\n    this.selectedShippingOptionId$ = this.store.pipe(select(selectShippingOptionId));\n    this.isShippingAddressValid$ = this.store.pipe(select(selectIsShippingAddressValid));\n  }\n\n  /**\n   * Dispatches the given action.\n   * @param action action to dispatch.\n   */\n  dispatch(action: Action) {\n    this.store.dispatch(action);\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { DaffCart } from '@daffodil/cart';\n\nimport { DaffOrder } from '../../models/order/order';\n\n/**\n * @deprecated\n */\nexport enum DaffOrderActionTypes {\n  PlaceOrderAction = '[Order] Place Order Action',\n  PlaceOrderSuccessAction = '[Order] Place Order Success Action',\n  PlaceOrderFailureAction = '[Order] Place Order Failure Action'\n}\n\n/**\n * @deprecated\n */\nexport enum OrderActionTypes {\n  PlaceOrderAction = '[Order] Place Order Action',\n  PlaceOrderSuccessAction = '[Order] Place Order Success Action',\n  PlaceOrderFailureAction = '[Order] Place Order Failure Action'\n}\n\n/**\n * @deprecated\n */\nexport class PlaceOrder implements Action {\n  readonly type = DaffOrderActionTypes.PlaceOrderAction;\n\n  constructor(public payload: DaffCart) {}\n}\n\n/**\n * @deprecated\n */\nexport class DaffPlaceOrder implements Action {\n  readonly type = DaffOrderActionTypes.PlaceOrderAction;\n\n  constructor(public payload: DaffCart) {}\n}\n\n/**\n * @deprecated\n */\nexport class DaffPlaceOrderSuccess implements Action {\n  readonly type = DaffOrderActionTypes.PlaceOrderSuccessAction;\n\n  constructor(public payload: DaffOrder) {}\n}\n\n/**\n * @deprecated\n */\nexport class DaffPlaceOrderFailure implements Action {\n  readonly type = DaffOrderActionTypes.PlaceOrderFailureAction;\n\n  constructor(public payload: string) {}\n}\n\n/**\n * @deprecated\n */\nexport type DaffOrderActions =\n    | DaffPlaceOrder\n    | PlaceOrder\n    | DaffPlaceOrderSuccess\n    | DaffPlaceOrderFailure;\n","import { DaffOrderActions, DaffOrderActionTypes } from '../../actions/order.actions';\nimport { DaffOrderReducerState } from './order-reducer.interface';\n\n/**\n * @deprecated\n */\nexport const initialState: DaffOrderReducerState = {\n  order: null,\n  loading: false,\n  errors: []\n};\n\n/**\n * @deprecated\n */\nexport function daffOrderReducer(state = initialState, action: DaffOrderActions): DaffOrderReducerState {\n  switch (action.type) {\n    case DaffOrderActionTypes.PlaceOrderAction:\n      return {...state, loading: true};\n    case DaffOrderActionTypes.PlaceOrderSuccessAction:\n      return {...state, order: action.payload, loading: false};\n    case DaffOrderActionTypes.PlaceOrderFailureAction:\n      return {...state, errors: [action.payload], loading: false}\n    default:\n      return state;\n  }\n}\n","import { ActionReducerMap } from '@ngrx/store';\n\nimport { daffOrderReducer } from './order/order.reducer';\nimport { DaffOrderReducersState } from './order-reducers.interface';\n\n/**\n * @deprecated\n */\nexport const daffOrderReducers: ActionReducerMap<DaffOrderReducersState> = {\n  order: daffOrderReducer\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const DaffCheckoutDriver = new InjectionToken('DaffCheckoutDriver');\n","import { Injectable, Inject } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { map, catchError, switchMap, tap } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\n\nimport {\n  DaffOrderActionTypes,\n  DaffPlaceOrderSuccess,\n  DaffPlaceOrder,\n  DaffPlaceOrderFailure\n} from '../actions/order.actions';\nimport { DaffCheckoutDriver } from '../../drivers/injection-tokens/driver-checkout.token';\nimport { DaffCheckoutServiceInterface } from '../../drivers/interfaces/checkout-service.interface';\n\n/**\n * @deprecated\n */\n@Injectable()\nexport class OrderEffects {\n\n  constructor(\n    private actions$: Actions,\n    @Inject(DaffCheckoutDriver) private checkoutDriver: DaffCheckoutServiceInterface\n  ) {}\n\n  @Effect()\n  onPlaceOrder$ : Observable<any> = this.actions$.pipe(\n    ofType(DaffOrderActionTypes.PlaceOrderAction),\n    switchMap((action: DaffPlaceOrder) =>\n      this.checkoutDriver.placeOrder(action.payload.id.toString())\n        .pipe(\n          map((resp) => {\n            return new DaffPlaceOrderSuccess(resp);\n          }),\n          catchError(error => {\n            return of(new DaffPlaceOrderFailure('Failed to place order'));\n          })\n        )\n    )\n  )\n}\n","import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\n\nimport { EffectsModule } from '@ngrx/effects';\nimport { OrderEffects } from './effects/order.effects';\nimport { daffOrderReducers } from './reducers/order-reducers';\n\n/**\n * @deprecated\n */\n@NgModule({\n  imports: [\n    StoreModule.forFeature('order', daffOrderReducers),\n    EffectsModule.forFeature([\n      OrderEffects\n    ])\n  ]\n})\nexport class DaffOrderStateModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DaffOrderStateModule } from './order-state.module';\nimport { OrderContainer } from './containers/order.component';\n\n/**\n * @deprecated\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    /**\n     * Ngrx/store\n     */\n    DaffOrderStateModule,\n  ],\n  declarations: [\n    OrderContainer\n  ],\n  exports: [\n    OrderContainer\n  ]\n})\nexport class DaffOrderModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store, select, Action } from '@ngrx/store';\n\nimport { DaffStoreFacade } from '@daffodil/core/state';\nimport { DaffOrderModule } from '../order.module';\nimport { DaffOrder } from '../../models/order/order';\nimport { DaffOrderReducersState } from '../reducers/order-reducers.interface';\nimport { selectOrder, selectLoading, selectErrors } from '../selectors/order.selector';\n\n/**\n * A facade for accessing state for the currently selected category.\n */\n/**\n * @deprecated\n */\n@Injectable({\n  providedIn: DaffOrderModule\n})\nexport class DaffOrderFacade implements DaffStoreFacade<Action> {\n  /**\n   * The current order.\n   */\n  order$: Observable<DaffOrder>;\n  /**\n   * The loading state for the current order.\n   */\n  loading$: Observable<boolean>;\n  /**\n   * Any errors involved in loading the order.\n   */\n  errors$: Observable<string[]>;\n\n  constructor(private store: Store<DaffOrderReducersState>) {\n    this.order$ = this.store.pipe(select(selectOrder));\n    this.loading$ = this.store.pipe(select(selectLoading));\n    this.errors$ = this.store.pipe(select(selectErrors));\n  }\n\n  /**\n   * Dispatches the given action.\n   * @param action action to dispatch.\n   */\n  dispatch(action: Action) {\n    this.store.dispatch(action);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DaffShippingModule } from './shipping/shipping.module';\nimport { DaffPaymentModule } from './payment/payment.module';\nimport { DaffBillingModule } from './billing/billing.module';\nimport { DaffOrderModule } from './order/order.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DaffShippingModule,\n    DaffPaymentModule,\n    DaffBillingModule,\n\t\tDaffOrderModule\n  ],\n  exports: [\n\t\tDaffShippingModule,\n    DaffPaymentModule,\n    DaffBillingModule,\n\t\tDaffOrderModule\n  ]\n})\nexport class StateCheckoutModule { }\n"]}