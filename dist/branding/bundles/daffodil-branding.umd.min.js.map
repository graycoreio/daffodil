{"version":3,"sources":["ng://@daffodil/branding/lib/copyright/copyright.component.ts","ng://@daffodil/branding/lib/copyright/copyright.module.ts","ng://@daffodil/branding/lib/logo/logo.component.ts","ng://@daffodil/branding/lib/logo/logo.module.ts"],"names":["DaffCopyrightComponent","this","today","Date","now","Component","args","selector","template","DaffCopyrightModule","NgModule","imports","CommonModule","declarations","exports","ICON","FULL","BLACK","WHITE","BASE","BASECONTRAST","DaffLogoComponent","type","DaffLogoTypeEnum","color","DaffLogoColorEnum","flowerPath","prototype","isFull","changeDetection","ChangeDetectionStrategy","OnPush","Input","DaffLogoModule"],"mappings":"+WAAA,IAAAA,EAAA,WAEA,SAAAA,IAKEC,KAAAC,MAAgBC,KAAKC,MACvB,2BANCC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,0BACVC,SAAA,6RAIFR,EARA,GCAA,IAAAS,EAAA,WAIA,SAAAA,KAWmC,2BAXlCC,EAAAA,SAAQJ,KAAA,CAAC,CACRK,QAAS,CACPC,EAAAA,cAEFC,aAAc,CACZb,GAEFc,QAAS,CACPd,OAG+BS,EAfnC,MCIEM,KAAO,OACPC,KAAO,WAKPC,MAAQ,OACRC,MAAQ,QACRC,KAAO,OACPC,aAAe,6BAGjB,SAAAC,IAaWpB,KAAAqB,KAAqBC,EAAiBP,KAStCf,KAAAuB,MAAuBC,EAAkBL,aAQzCnB,KAAAyB,WAAa,wCAQxB,OAHEL,EAAAM,UAAAC,OAAA,WACE,OAAO3B,KAAKqB,OAASC,EAAiBP,0BApCzCX,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,qBACVC,SAAA,0zCAEAqB,gBAAiBC,EAAAA,wBAAwBC,0XASxCC,EAAAA,qBASAA,EAAAA,0BAQAA,EAAAA,SAQHX,KCtDA,IAAAY,EAAA,WAIA,SAAAA,KAO8B,2BAP7BvB,EAAAA,SAAQJ,KAAA,CAAC,CACRK,QAAS,CACPC,EAAAA,cAEFC,aAAc,CAACQ,GACfP,QAAS,CAACO,OAEkBY,EAX9B","sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'daff-branding-copyright',\n  templateUrl: './copyright.component.html',\n})\nexport class DaffCopyrightComponent {\n  today: number = Date.now();\n}\n","import { NgModule } from '@angular/core';\nimport { DaffCopyrightComponent } from './copyright.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    DaffCopyrightComponent\n  ],\n  exports: [\n    DaffCopyrightComponent\n  ]\n})\nexport class DaffCopyrightModule { }\n","import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\n\nexport type DaffLogoType = 'icon' | 'full';\nexport enum DaffLogoTypeEnum {\n  ICON = 'icon',\n  FULL = 'full'\n}\n\nexport type DaffLogoColor = 'dark' | 'light' | 'base' | 'baseContrast';\nexport enum DaffLogoColorEnum {\n  BLACK = 'dark',\n  WHITE = 'light',\n  BASE = 'base',\n  BASECONTRAST = 'baseContrast'\n} \n\n@Component({\n  selector: 'daff-branding-logo',\n  templateUrl: './logo.component.html',\n  styleUrls: ['./logo.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DaffLogoComponent {\n  /**\n   * @docs\n   * \n   * Rendering property for showing the \"full\" logo\n   * with test, or only the flower.\n   */\n  @Input() type: DaffLogoType = DaffLogoTypeEnum.FULL;\n\n  /**\n   * @docs\n   * \n   * Determines the color of the logo. The logo supports a \n   * smaller subset of DaffColorable, so it\n   * has its own custom types.\n   */\n  @Input() color: DaffLogoColor = DaffLogoColorEnum.BASECONTRAST;\n\n  /**\n   * @docs\n   * \n   * Path to the flower in a project, defaults\n   * to what is handle by the branding schematics.\n   */\n  @Input() flowerPath = '/assets/daff-branding/daff-flower.svg';\n\n  /**\n   * Helper function to determine if the logo type is \"full\"\n   */\n  isFull(): boolean {\n    return this.type === DaffLogoTypeEnum.FULL;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DaffLogoComponent } from './logo.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [DaffLogoComponent],\n  exports: [DaffLogoComponent]\n})\nexport class DaffLogoModule { }\n"]}