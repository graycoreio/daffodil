{"version":3,"file":"daffodil-branding.umd.js","sources":["ng://@daffodil/branding/lib/copyright/copyright.component.ts","ng://@daffodil/branding/lib/copyright/copyright.module.ts","ng://@daffodil/branding/lib/logo/logo.component.ts","ng://@daffodil/branding/lib/logo/logo.module.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'daff-branding-copyright',\n  templateUrl: './copyright.component.html',\n})\nexport class DaffCopyrightComponent {\n  today: number = Date.now();\n}\n","import { NgModule } from '@angular/core';\nimport { DaffCopyrightComponent } from './copyright.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    DaffCopyrightComponent\n  ],\n  exports: [\n    DaffCopyrightComponent\n  ]\n})\nexport class DaffCopyrightModule { }\n","import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\n\nexport type DaffLogoType = 'icon' | 'full';\nexport enum DaffLogoTypeEnum {\n  ICON = 'icon',\n  FULL = 'full'\n}\n\nexport type DaffLogoColor = 'dark' | 'light' | 'base' | 'baseContrast';\nexport enum DaffLogoColorEnum {\n  BLACK = 'dark',\n  WHITE = 'light',\n  BASE = 'base',\n  BASECONTRAST = 'baseContrast'\n} \n\n@Component({\n  selector: 'daff-branding-logo',\n  templateUrl: './logo.component.html',\n  styleUrls: ['./logo.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DaffLogoComponent {\n  /**\n   * @docs\n   * \n   * Rendering property for showing the \"full\" logo\n   * with test, or only the flower.\n   */\n  @Input() type: DaffLogoType = DaffLogoTypeEnum.FULL;\n\n  /**\n   * @docs\n   * \n   * Determines the color of the logo. The logo supports a \n   * smaller subset of DaffColorable, so it\n   * has its own custom types.\n   */\n  @Input() color: DaffLogoColor = DaffLogoColorEnum.BASECONTRAST;\n\n  /**\n   * @docs\n   * \n   * Path to the flower in a project, defaults\n   * to what is handle by the branding schematics.\n   */\n  @Input() flowerPath = '/assets/daff-branding/daff-flower.svg';\n\n  /**\n   * Helper function to determine if the logo type is \"full\"\n   */\n  isFull(): boolean {\n    return this.type === DaffLogoTypeEnum.FULL;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DaffLogoComponent } from './logo.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [DaffLogoComponent],\n  exports: [DaffLogoComponent]\n})\nexport class DaffLogoModule { }\n"],"names":["Component","NgModule","CommonModule","ChangeDetectionStrategy","Input"],"mappings":";;;;;;;;;;AAAA;QAEA;YAKE,UAAK,GAAW,IAAI,CAAC,GAAG,EAAE,CAAC;SAC5B;;oBANAA,cAAS,SAAC;wBACT,QAAQ,EAAE,yBAAyB;wBACnC,oSAAyC;qBAC1C;;QAGD,6BAAC;KAND,IAMC;;;QADC,uCAA2B;;;;;;;ACP7B;QAIA;SAWoC;;oBAXnCC,aAAQ,SAAC;wBACR,OAAO,EAAE;4BACPC,mBAAY;yBACb;wBACD,YAAY,EAAE;4BACZ,sBAAsB;yBACvB;wBACD,OAAO,EAAE;4BACP,sBAAsB;yBACvB;qBACF;;QACkC,0BAAC;KAXpC;;;;;;ICJA;;QAIE,MAAO,MAAM;QACb,MAAO,MAAM;;;;QAKb,OAAQ,MAAM;QACd,OAAQ,OAAO;QACf,MAAO,MAAM;QACb,cAAe,cAAc;;;QAG/B;;;;;;;YAaW,SAAI,GAAiB,gBAAgB,CAAC,IAAI,CAAC;;;;;;;;YAS3C,UAAK,GAAkB,iBAAiB,CAAC,YAAY,CAAC;;;;;;;YAQtD,eAAU,GAAG,uCAAuC,CAAC;SAQ/D;;;;;;;;QAHC,kCAAM;;;;QAAN;YACE,OAAO,IAAI,CAAC,IAAI,KAAK,gBAAgB,CAAC,IAAI,CAAC;SAC5C;;oBArCFF,cAAS,SAAC;wBACT,QAAQ,EAAE,oBAAoB;wBAC9B,62CAAoC;wBAEpC,eAAe,EAAEG,4BAAuB,CAAC,MAAM;;qBAChD;;;2BAQEC,UAAK;4BASLA,UAAK;iCAQLA,UAAK;;QAQR,wBAAC;KAtCD,IAsCC;;;;;;;;;QAzBC,iCAAoD;;;;;;;;;QASpD,kCAA+D;;;;;;;;QAQ/D,uCAA8D;;;;;;;AC9ChE;QAIA;SAO+B;;oBAP9BH,aAAQ,SAAC;wBACR,OAAO,EAAE;4BACPC,mBAAY;yBACb;wBACD,YAAY,EAAE,CAAC,iBAAiB,CAAC;wBACjC,OAAO,EAAE,CAAC,iBAAiB,CAAC;qBAC7B;;QAC6B,qBAAC;KAP/B;;;;;;;;;;;;;;;"}