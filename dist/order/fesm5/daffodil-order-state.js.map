{"version":3,"file":"daffodil-order-state.js","sources":["ng://@daffodil/order/state/actions/order.actions.ts","ng://@daffodil/order/state/reducers/order/order-initial-state.ts","ng://@daffodil/order/state/reducers/order/order.reducer.ts","ng://@daffodil/order/state/reducers/order-entities/order-entities-adapter.ts","ng://@daffodil/order/state/reducers/order-entities/order-entities-initial-state.ts","ng://@daffodil/order/state/reducers/order-entities/order-entities.reducer.ts","ng://@daffodil/order/state/reducers/order-reducers.ts","ng://@daffodil/order/state/reducers/order-store-feature-key.ts","ng://@daffodil/order/state/selectors/order-feature.selector.ts","ng://@daffodil/order/state/selectors/order-entities.selector.ts","ng://@daffodil/order/state/selectors/order.selector.ts","ng://@daffodil/order/state/selectors/order-all.selector.ts","ng://@daffodil/order/state/facades/order/order.facade.ts","ng://@daffodil/order/state/guards/placed-order/placed-order-guard-redirect.token.ts","ng://@daffodil/order/state/guards/placed-order/placed-order.guard.ts","ng://@daffodil/order/state/effects/order.effects.ts","ng://@daffodil/order/state/order-state.module.ts"],"sourcesContent":["import { Action } from '@ngrx/store';\n\nimport { DaffCart } from '@daffodil/cart';\nimport { DaffOrder } from '@daffodil/order';\n\nexport enum DaffOrderActionTypes {\n  OrderLoadAction = '[Order] Order Load Action',\n  OrderLoadSuccessAction = '[Order] Order Load Success Action',\n  OrderLoadFailureAction = '[Order] Order Load Failure Action',\n  OrderListAction = '[Order] Order List Action',\n  OrderListSuccessAction = '[Order] Order List Success Action',\n  OrderListFailureAction = '[Order] Order List Failure Action'\n}\n\n/**\n * Triggers the loading of the specified order.\n *\n * @param orderId The order ID.\n * @param cartId The optional guest cart ID.\n */\nexport class DaffOrderLoad<\n  T extends DaffOrder = DaffOrder,\n  V extends DaffCart = DaffCart\n> implements Action {\n  readonly type = DaffOrderActionTypes.OrderLoadAction;\n\n  constructor(public orderId: T['id'], public cartId?: V['id']) {}\n}\n\nexport class DaffOrderLoadSuccess<T extends DaffOrder = DaffOrder> implements Action {\n  readonly type = DaffOrderActionTypes.OrderLoadSuccessAction;\n\n  constructor(public payload: T) {}\n}\n\nexport class DaffOrderLoadFailure implements Action {\n  readonly type = DaffOrderActionTypes.OrderLoadFailureAction;\n\n  constructor(public payload: string) {}\n}\n\n/**\n * Triggers the loading of the orders for either the currently logged-in user or the specified guest cart.\n *\n * @param payload The guest cart ID.\n */\nexport class DaffOrderList<T extends DaffCart = DaffCart> implements Action {\n  readonly type = DaffOrderActionTypes.OrderListAction;\n\n  constructor(public payload?: T['id']) {}\n}\n\nexport class DaffOrderListSuccess<T extends DaffOrder = DaffOrder> implements Action {\n  readonly type = DaffOrderActionTypes.OrderListSuccessAction;\n\n  constructor(public payload: T[]) {}\n}\n\nexport class DaffOrderListFailure implements Action {\n  readonly type = DaffOrderActionTypes.OrderListFailureAction;\n\n  constructor(public payload: string) {}\n}\n\nexport type DaffOrderActions<\n  T extends DaffOrder = DaffOrder,\n  V extends DaffCart = DaffCart\n> =\n  | DaffOrderLoad<T, V>\n  | DaffOrderLoadSuccess<T>\n  | DaffOrderLoadFailure\n  | DaffOrderList\n  | DaffOrderListSuccess<T>\n  | DaffOrderListFailure\n","import { DaffOrderReducerState } from './order-reducer.interface';\n\nexport const daffOrderInitialState: DaffOrderReducerState = {\n  loading: false,\n  errors: []\n};\n","import { DaffOrder } from '@daffodil/order';\n\nimport { DaffOrderActions, DaffOrderActionTypes } from '../../actions/order.actions';\nimport { DaffOrderReducerState } from './order-reducer.interface';\nimport { daffOrderInitialState } from './order-initial-state';\n\nexport function daffOrderReducer<T extends DaffOrder = DaffOrder>(\n  state = daffOrderInitialState,\n  action: DaffOrderActions<T>\n): DaffOrderReducerState {\n  switch (action.type) {\n    case DaffOrderActionTypes.OrderListAction:\n    case DaffOrderActionTypes.OrderLoadAction:\n      return {\n        ...state,\n        loading: true\n      };\n\n    case DaffOrderActionTypes.OrderListSuccessAction:\n    case DaffOrderActionTypes.OrderLoadSuccessAction:\n      return {\n        ...state,\n        loading: false,\n        errors: []\n      };\n\n    case DaffOrderActionTypes.OrderListFailureAction:\n    case DaffOrderActionTypes.OrderLoadFailureAction:\n      return {\n        ...state,\n        errors: [\n          ...state.errors,\n          action.payload\n        ],\n        loading: false\n      }\n\n    default:\n      return state;\n  }\n}\n","import { EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport { DaffOrder } from '@daffodil/order';\n\n/**\n * Order Adapter for changing/overwriting entity state.\n */\nexport const daffGetOrderAdapter = (() => {\n  let cache;\n  return <T extends DaffOrder = DaffOrder>(): EntityAdapter<T> =>\n    cache = cache || createEntityAdapter<T>();\n})();\n","import { daffGetOrderAdapter } from './order-entities-adapter';\nimport { DaffOrderEntityState } from './order-entities-state.interface';\n\n/**\n * Initial state for order entity state.\n */\nexport const daffOrderEntitiesInitialState: DaffOrderEntityState<any> = daffGetOrderAdapter().getInitialState();\n","import { DaffOrder } from '@daffodil/order';\n\nimport { DaffOrderActions, DaffOrderActionTypes } from '../../actions/order.actions';\nimport { daffGetOrderAdapter } from './order-entities-adapter';\nimport { DaffOrderEntityState } from './order-entities-state.interface';\nimport { daffOrderEntitiesInitialState } from './order-entities-initial-state';\n\n/**\n * Reducer function that catches actions and changes/overwrites order entities state.\n */\nexport function daffOrderEntitiesReducer<T extends DaffOrder = DaffOrder>(\n  state = daffOrderEntitiesInitialState,\n  action: DaffOrderActions<T>\n): DaffOrderEntityState<T> {\n  const adapter = daffGetOrderAdapter<T>();\n\n  switch (action.type) {\n    case DaffOrderActionTypes.OrderLoadSuccessAction:\n      return adapter.upsertOne(action.payload, state);\n\n    case DaffOrderActionTypes.OrderListSuccessAction:\n      return adapter.upsertMany(action.payload, state);\n\n    default:\n      return state;\n  }\n}\n","import { ActionReducerMap } from '@ngrx/store';\n\nimport { daffOrderReducer } from './order/order.reducer';\nimport { DaffOrderReducersState } from './order-reducers.interface';\nimport { daffOrderEntitiesReducer } from './order-entities/public_api';\n\nexport const daffOrderReducers: ActionReducerMap<DaffOrderReducersState> = {\n  order: daffOrderReducer,\n  orders: daffOrderEntitiesReducer\n}\n","export const DAFF_ORDER_STORE_FEATURE_KEY = 'daffOrder';\n","import { createFeatureSelector, MemoizedSelector } from '@ngrx/store';\n\nimport { DaffOrder } from '@daffodil/order';\n\nimport { DaffOrderReducersState, DAFF_ORDER_STORE_FEATURE_KEY } from '../reducers/public_api';\n\nexport interface DaffOrderFeatureSelector<T extends DaffOrder = DaffOrder> {\n  selectOrderFeatureState: MemoizedSelector<object, DaffOrderReducersState<T>>\n}\n\nexport const getDaffOrderReducersStateSelector = (() => {\n  let cache;\n  return <T extends DaffOrder = DaffOrder>(): DaffOrderFeatureSelector<T> =>\n    cache = cache || {\n      selectOrderFeatureState: createFeatureSelector<DaffOrderReducersState<T>>(DAFF_ORDER_STORE_FEATURE_KEY)\n    }\n})();\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { Dictionary } from '@ngrx/entity';\n\nimport { DaffOrder, DaffOrderItem, DaffOrderTotal, DaffOrderTotalTypeEnum } from '@daffodil/order';\nimport { getDaffCartSelectors } from '@daffodil/cart/state';\n\nimport {\n  daffGetOrderAdapter,\n  DaffOrderEntityState\n} from '../reducers/public_api';\nimport { getDaffOrderReducersStateSelector } from './order-feature.selector';\n\nexport interface DaffOrderEntitySelectors<T extends DaffOrder = DaffOrder> {\n  selectOrderEntitiesState: MemoizedSelector<object, DaffOrderEntityState<T>>;\n  /**\n   * Selector for order IDs.\n   */\n  selectOrderIds: MemoizedSelector<object, string[] | number[]>;\n  /**\n   * Selector for order entities.\n   */\n  selectOrderEntities: MemoizedSelector<object, Dictionary<T>>;\n  /**\n   * Selector for all orders.\n   */\n  selectAllOrders: MemoizedSelector<object, T[]>;\n  /**\n   * Selector for total number of orders.\n   */\n  selectOrderTotal: MemoizedSelector<object, number>;\n  selectOrder: MemoizedSelector<object, T>;\n\n  /**\n   * Selector for the most recently placed order (if any).\n   */\n  selectPlacedOrder: MemoizedSelector<object, T>;\n  /**\n   * Selector for the existence of the most recently placed order.\n   */\n  selectHasPlacedOrder: MemoizedSelector<object, boolean>;\n\n  /**\n   * Selects the specified order's totals.\n   */\n  selectOrderTotals: MemoizedSelector<object, T['totals']>;\n  /**\n   * Selects the specified order's applied coupon codes.\n   */\n  selectOrderAppliedCodes: MemoizedSelector<object, T['applied_codes']>;\n  /**\n   * Selects the specified order's items.\n   */\n  selectOrderItems: MemoizedSelector<object, T['items']>;\n  /**\n   * Selects the specified order's billing addresses.\n   */\n  selectOrderBillingAddresses: MemoizedSelector<object, T['billing_addresses']>;\n  /**\n   * Selects the specified order's shipping addresses.\n   */\n  selectOrderShippingTotalAddresses: MemoizedSelector<object, T['shipping_addresses']>;\n  /**\n   * Selects the specified order's shipments.\n   */\n  selectOrderShipments: MemoizedSelector<object, T['shipments']>;\n  /**\n   * Selects the specified order's payment.\n   */\n  selectOrderPayment: MemoizedSelector<object, T['payment']>;\n  /**\n   * Selects the specified order's invoices.\n   */\n  selectOrderInvoices: MemoizedSelector<object, T['invoices']>;\n  /**\n   * Selects the specified order's credits.\n   */\n  selectOrderCredits: MemoizedSelector<object, T['credits']>;\n\n  /**\n   * Selects the specified order's specified item.\n   */\n  selectOrderItem: MemoizedSelector<object, DaffOrderItem>;\n\n  /**\n   * Selects the specified order's grand total.\n   */\n  selectOrderGrandTotal: MemoizedSelector<object, DaffOrderTotal>;\n  /**\n   * Selects the specified order's subtotal.\n   */\n  selectOrderSubtotal: MemoizedSelector<object, DaffOrderTotal>;\n  /**\n   * Selects the specified order's shipping total.\n   */\n  selectOrderShippingTotal: MemoizedSelector<object, DaffOrderTotal>;\n  /**\n   * Selects the specified order's discount total.\n   */\n\tselectOrderDiscountTotal: MemoizedSelector<object, DaffOrderTotal>;\n\t/**\n\t * Selects whether the specified order has a discount.\n\t */\n\tselectOrderHasDiscount: MemoizedSelector<object, boolean>;\n  /**\n   * Selects the specified order's tax total.\n   */\n  selectOrderTaxTotal: MemoizedSelector<object, DaffOrderTotal>;\n}\n\nconst createOrderEntitySelectors = <T extends DaffOrder = DaffOrder>() => {\n  const { selectOrderFeatureState } = getDaffOrderReducersStateSelector<T>();\n  const selectOrderEntitiesState = createSelector(\n    selectOrderFeatureState,\n    state => state.orders\n  )\n  const { selectIds, selectEntities, selectAll, selectTotal } = daffGetOrderAdapter<T>().getSelectors(selectOrderEntitiesState);\n  const { selectCartOrderId } = getDaffCartSelectors();\n\n  const selectOrder = createSelector(\n    selectEntities,\n    (orders, props) => orders[props.id] || null\n  )\n\n  const selectPlacedOrder = createSelector(\n    selectEntities,\n    selectCartOrderId,\n    (orders, orderId) => orderId ? selectOrder.projector(orders, {id: orderId}) : null\n  )\n  const selectHasPlacedOrder = createSelector(\n    selectPlacedOrder,\n    placedOrder => !!placedOrder\n  )\n\n  const selectOrderTotals = createSelector(\n    selectEntities,\n    (orders, props) => {\n      const order: DaffOrder = selectOrder.projector(orders, {id: props.id});\n      return (order && order.totals) || []\n    }\n  );\n  const selectOrderAppliedCodes = createSelector(\n    selectEntities,\n    (orders, props) => {\n      const order = selectOrder.projector(orders, {id: props.id});\n      return (order && order.applied_codes) || []\n    }\n  );\n  const selectOrderItems = createSelector(\n    selectEntities,\n    (orders, props) => {\n      const order = selectOrder.projector(orders, {id: props.id});\n      return (order && order.items) || []\n    }\n  );\n  const selectOrderBillingAddresses = createSelector(\n    selectEntities,\n    (orders, props) => {\n      const order = selectOrder.projector(orders, {id: props.id});\n      return (order && order.billing_addresses) || []\n    }\n  );\n  const selectOrderShippingTotalAddresses = createSelector(\n    selectEntities,\n    (orders, props) => {\n      const order = selectOrder.projector(orders, {id: props.id});\n      return (order && order.shipping_addresses) || []\n    }\n  );\n  const selectOrderShipments = createSelector(\n    selectEntities,\n    (orders, props) => {\n      const order = selectOrder.projector(orders, {id: props.id});\n      return (order && order.shipments) || []\n    }\n  );\n  const selectOrderPayment = createSelector(\n    selectEntities,\n    (orders, props) => {\n      const order = selectOrder.projector(orders, {id: props.id});\n      return (order && order.payment) || null\n    }\n  );\n  const selectOrderInvoices = createSelector(\n    selectEntities,\n    (orders, props) => {\n      const order = selectOrder.projector(orders, {id: props.id});\n      return (order && order.invoices) || []\n    }\n  );\n  const selectOrderCredits = createSelector(\n    selectEntities,\n    (orders, props) => {\n      const order = selectOrder.projector(orders, {id: props.id});\n      return (order && order.credits) || []\n    }\n  );\n\n  const selectOrderGrandTotal = createSelector(\n    selectEntities,\n    (orders, props) => {\n      const totals = selectOrderTotals.projector(orders, {id: props.id});\n      const index = totals.findIndex(total => total.type === DaffOrderTotalTypeEnum.GrandTotal);\n\n      return index > -1 ? totals[index] : null\n    }\n  );\n  const selectOrderSubtotal = createSelector(\n    selectEntities,\n    (orders, props) => {\n      const totals = selectOrderTotals.projector(orders, { id: props.id });\n      const index = totals.findIndex(total => total.type === DaffOrderTotalTypeEnum.Subtotal);\n\n      return index > -1 ? totals[index] : null\n    }\n  );\n  const selectOrderShippingTotal = createSelector(\n    selectEntities,\n    (orders, props) => {\n      const totals = selectOrderTotals.projector(orders, { id: props.id });\n      const index = totals.findIndex(total => total.type === DaffOrderTotalTypeEnum.Shipping);\n\n      return index > -1 ? totals[index] : null\n    }\n  );\n  const selectOrderDiscountTotal = createSelector(\n    selectEntities,\n    (orders, props) => {\n      const totals = selectOrderTotals.projector(orders, { id: props.id });\n      const index = totals.findIndex(total => total.type === DaffOrderTotalTypeEnum.Discount);\n\n      return index > -1 ? totals[index] : null\n    }\n  );\n  const selectOrderHasDiscount = createSelector(\n    selectEntities,\n    (orders, props) => {\n      const discountTotal = selectOrderDiscountTotal.projector(orders, { id: props.id });\n\n\t\t\t//todo: use optional chaining when possible\n      return !!discountTotal && discountTotal.value > 0;\n    }\n  );\n  const selectOrderTaxTotal = createSelector(\n    selectEntities,\n    (orders, props) => {\n      const totals = selectOrderTotals.projector(orders, { id: props.id });\n      const index = totals.findIndex(total => total.type === DaffOrderTotalTypeEnum.Tax);\n\n      return index > -1 ? totals[index] : null\n    }\n  );\n\n  const selectOrderItem = createSelector(\n\t\tselectEntities,\n\t\t(orders, props) => selectOrderItems.projector(orders, {id: props.id}).find(item => item.item_id === props.item_id) || null\n  );\n\n  return {\n    selectOrderEntitiesState,\n    selectOrderIds: selectIds,\n    selectOrderEntities: selectEntities,\n    selectAllOrders: selectAll,\n    selectOrderTotal: selectTotal,\n\n    selectPlacedOrder,\n    selectHasPlacedOrder,\n\n    selectOrder,\n    selectOrderTotals,\n    selectOrderAppliedCodes,\n    selectOrderItems,\n    selectOrderBillingAddresses,\n    selectOrderShippingTotalAddresses,\n    selectOrderShipments,\n    selectOrderPayment,\n    selectOrderInvoices,\n    selectOrderCredits,\n    selectOrderItem,\n\n    selectOrderGrandTotal,\n    selectOrderSubtotal,\n    selectOrderShippingTotal,\n    selectOrderDiscountTotal,\n    selectOrderHasDiscount,\n    selectOrderTaxTotal,\n  }\n}\n\nexport const getDaffOrderEntitySelectors = (() => {\n  let cache;\n  return <T extends DaffOrder = DaffOrder>(): DaffOrderEntitySelectors<T> =>\n    cache = cache || createOrderEntitySelectors<T>()\n})();\n\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\n\nimport { DaffOrder } from '@daffodil/order';\n\nimport { getDaffOrderReducersStateSelector } from './order-feature.selector';\nimport {\n  DaffOrderReducerState,\n} from '../reducers/public_api';\n\nexport interface DaffOrderSelectors {\n  selectOrderState: MemoizedSelector<object, DaffOrderReducerState>;\n  selectOrderLoading: MemoizedSelector<object, boolean>;\n  selectOrderErrors: MemoizedSelector<object, string[]>;\n}\n\nconst createOrderSelectors = <T extends DaffOrder = DaffOrder>() => {\n  const { selectOrderFeatureState } = getDaffOrderReducersStateSelector<T>();\n  const selectOrderState = createSelector(\n    selectOrderFeatureState,\n    state => state.order\n  );\n\n  const selectOrderLoading = createSelector(\n    selectOrderState,\n    state => state.loading\n  );\n\n  const selectOrderErrors = createSelector(\n    selectOrderState,\n    state => state.errors\n  );\n\n  return {\n    selectOrderState,\n    selectOrderLoading,\n    selectOrderErrors\n  }\n}\n\nexport const getOrderSelectors = (() => {\n  let cache;\n  return <T extends DaffOrder = DaffOrder>(): DaffOrderSelectors =>\n    cache = cache || createOrderSelectors<T>()\n})();\n","import { DaffOrder } from '@daffodil/order';\n\nimport { DaffOrderEntitySelectors, getDaffOrderEntitySelectors } from './order-entities.selector';\nimport { DaffOrderSelectors, getOrderSelectors } from './order.selector';\nimport { DaffOrderFeatureSelector, getDaffOrderReducersStateSelector } from './order-feature.selector';\n\nexport interface DaffOrderAllSelectors<T extends DaffOrder = DaffOrder> extends\n  DaffOrderEntitySelectors<T>,\n  DaffOrderSelectors,\n  DaffOrderFeatureSelector<T> {}\n\nexport const getDaffOrderSelectors = (() => {\n  let cache;\n  return <T extends DaffOrder = DaffOrder>(): DaffOrderAllSelectors<T> =>\n    cache = cache || {\n      ...getOrderSelectors<T>(),\n      ...getDaffOrderEntitySelectors<T>(),\n      ...getDaffOrderReducersStateSelector<T>()\n    }\n})();\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Action, Store, select } from '@ngrx/store';\nimport { Dictionary } from '@ngrx/entity';\n\nimport { DaffOrder, DaffOrderTotal } from '@daffodil/order';\n\nimport { DaffOrderReducersState } from '../../reducers/public_api';\nimport {\n  getDaffOrderSelectors\n} from '../../selectors/public_api';\nimport { DaffOrderFacadeInterface } from './order-facade.interface';\nimport { DaffOrderEntitySelectors } from '../../selectors/order-entities.selector';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffOrderFacade<T extends DaffOrder = DaffOrder> implements DaffOrderFacadeInterface<T> {\n  loading$: Observable<boolean>;\n  errors$: Observable<string[]>;\n\n  orders$: Observable<T[]>;\n  orderIds$: Observable<(string | number)[]>;\n  orderCount$: Observable<number>;\n  orderEntities$: Observable<Dictionary<T>>;\n\n  placedOrder$: Observable<T>;\n  hasPlacedOrder$: Observable<boolean>;\n\n  _order: DaffOrderEntitySelectors<T>['selectOrder'];\n  _totals: DaffOrderEntitySelectors<T>['selectOrderTotals'];\n  _appliedCodes: DaffOrderEntitySelectors<T>['selectOrderAppliedCodes'];\n  _items: DaffOrderEntitySelectors<T>['selectOrderItems'];\n  _billingAddresses: DaffOrderEntitySelectors<T>['selectOrderBillingAddresses'];\n  _shippingAddresses: DaffOrderEntitySelectors<T>['selectOrderShippingTotalAddresses'];\n  _shipments: DaffOrderEntitySelectors<T>['selectOrderShipments'];\n  _payment: DaffOrderEntitySelectors<T>['selectOrderPayment'];\n  _invoices: DaffOrderEntitySelectors<T>['selectOrderInvoices'];\n  _credits: DaffOrderEntitySelectors<T>['selectOrderCredits'];\n  _grandTotal: DaffOrderEntitySelectors<T>['selectOrderGrandTotal'];\n  _subtotal: DaffOrderEntitySelectors<T>['selectOrderSubtotal'];\n  _shipping: DaffOrderEntitySelectors<T>['selectOrderShippingTotal'];\n  _discount: DaffOrderEntitySelectors<T>['selectOrderDiscountTotal'];\n  _hasDiscount: DaffOrderEntitySelectors<T>['selectOrderHasDiscount'];\n  _tax: DaffOrderEntitySelectors<T>['selectOrderTaxTotal'];\n\n  constructor(private store: Store<DaffOrderReducersState<T>>) {\n    const {\n      selectOrderIds,\n      selectOrderEntities,\n      selectAllOrders,\n      selectOrderTotal,\n      selectOrderLoading,\n      selectOrderErrors,\n\n      selectPlacedOrder,\n      selectHasPlacedOrder,\n\n      selectOrder,\n      selectOrderTotals,\n      selectOrderAppliedCodes,\n      selectOrderItems,\n      selectOrderBillingAddresses,\n      selectOrderShippingTotalAddresses,\n      selectOrderShipments,\n      selectOrderPayment,\n      selectOrderInvoices,\n      selectOrderCredits,\n\n      selectOrderGrandTotal,\n      selectOrderSubtotal,\n      selectOrderShippingTotal,\n      selectOrderDiscountTotal,\n      selectOrderHasDiscount,\n      selectOrderTaxTotal,\n    } = getDaffOrderSelectors<T>();\n\n    this.loading$ = this.store.pipe(select(selectOrderLoading));\n    this.errors$ = this.store.pipe(select(selectOrderErrors));\n\n    this.orders$ = this.store.pipe(select(selectAllOrders));\n    this.orderIds$ = this.store.pipe(select(selectOrderIds));\n    this.orderCount$ = this.store.pipe(select(selectOrderTotal));\n    this.orderEntities$ = this.store.pipe(select(selectOrderEntities));\n\n    this.placedOrder$ = this.store.pipe(select(selectPlacedOrder));\n    this.hasPlacedOrder$ = this.store.pipe(select(selectHasPlacedOrder));\n\n    this._order = selectOrder;\n    this._totals = selectOrderTotals;\n    this._appliedCodes = selectOrderAppliedCodes;\n    this._items = selectOrderItems;\n    this._billingAddresses = selectOrderBillingAddresses;\n    this._shippingAddresses = selectOrderShippingTotalAddresses;\n    this._shipments = selectOrderShipments;\n    this._payment = selectOrderPayment;\n    this._invoices = selectOrderInvoices;\n    this._credits = selectOrderCredits;\n    this._grandTotal = selectOrderGrandTotal;\n    this._subtotal = selectOrderSubtotal;\n    this._shipping = selectOrderShippingTotal;\n    this._discount = selectOrderDiscountTotal;\n    this._hasDiscount = selectOrderHasDiscount;\n    this._tax = selectOrderTaxTotal;\n  }\n\n  getOrder$(orderId: T['id']): Observable<T> {\n    return this.store.pipe(select(this._order, {id: orderId}))\n  }\n\n  getTotals$(orderId: T['id']): Observable<T['totals']> {\n    return this.store.pipe(select(this._totals, {id: orderId}))\n  }\n\n  getAppliedCodes$(orderId: T['id']): Observable<T['applied_codes']> {\n    return this.store.pipe(select(this._appliedCodes, {id: orderId}))\n  }\n\n  getItems$(orderId: T['id']): Observable<T['items']> {\n    return this.store.pipe(select(this._items, {id: orderId}))\n  }\n\n  getBillingAddresses$(orderId: T['id']): Observable<T['billing_addresses']> {\n    return this.store.pipe(select(this._billingAddresses, {id: orderId}))\n  }\n\n  getShippingAddresses$(orderId: T['id']): Observable<T['shipping_addresses']> {\n    return this.store.pipe(select(this._shippingAddresses, {id: orderId}))\n  }\n\n  getShipments$(orderId: T['id']): Observable<T['shipments']> {\n    return this.store.pipe(select(this._shipments, {id: orderId}))\n  }\n\n  getPayment$(orderId: T['id']): Observable<T['payment']> {\n    return this.store.pipe(select(this._payment, {id: orderId}))\n  }\n\n  getInvoices$(orderId: T['id']): Observable<T['invoices']> {\n    return this.store.pipe(select(this._invoices, {id: orderId}))\n  }\n\n  getCredits$(orderId: T['id']): Observable<T['credits']> {\n    return this.store.pipe(select(this._credits, {id: orderId}))\n  }\n\n  getGrandTotal$(orderId: T['id']): Observable<DaffOrderTotal> {\n    return this.store.pipe(select(this._grandTotal, {id: orderId}))\n  };\n  getSubtotal$(orderId: T['id']): Observable<DaffOrderTotal> {\n    return this.store.pipe(select(this._subtotal, {id: orderId}))\n  };\n  getShippingTotal$(orderId: T['id']): Observable<DaffOrderTotal> {\n    return this.store.pipe(select(this._shipping, {id: orderId}))\n  };\n  getDiscountTotal$(orderId: T['id']): Observable<DaffOrderTotal> {\n    return this.store.pipe(select(this._discount, {id: orderId}))\n  };\n  hasDiscount$(orderId: T['id']): Observable<boolean> {\n    return this.store.pipe(select(this._hasDiscount, {id: orderId}))\n  };\n  getTaxTotal$(orderId: T['id']): Observable<DaffOrderTotal> {\n    return this.store.pipe(select(this._tax, {id: orderId}))\n  };\n\n  dispatch(action: Action) {\n    this.store.dispatch(action);\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const DaffPlacedOrderGuardRedirectUrl = new InjectionToken<string>('DaffPlacedOrderGuardRedirectUrl');\n","import { CanActivate, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Injectable, Inject } from '@angular/core';\nimport { tap } from 'rxjs/operators';\n\nimport { DaffOrderFacade } from '../../facades/order/order.facade';\nimport { DaffPlacedOrderGuardRedirectUrl } from './placed-order-guard-redirect.token';\n\n/**\n * A routing guard that will redirect to a given url if the placed order is not defined.\n * The url is `/` by default, but can be overridden with the DaffPlacedOrderGuardRedirectUrl injection token.\n */\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class DaffPlacedOrderGuard implements CanActivate {\n  constructor(\n\t\tprivate facade: DaffOrderFacade,\n\t\tprivate router: Router,\n\t\t@Inject(DaffPlacedOrderGuardRedirectUrl) private redirectUrl: string\n\t) {}\n\n  canActivate(): Observable<boolean> {\n    return this.facade.hasPlacedOrder$.pipe(\n\t\t\ttap(hasPlacedOrder => {\n\t\t\t\tif (!hasPlacedOrder) {\n\t\t\t\t\tthis.router.navigateByUrl(this.redirectUrl)\n\t\t\t\t}\n\t\t\t})\n\t\t)\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { switchMap, map, catchError } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\n\nimport {\n  DaffCart\n} from '@daffodil/cart';\nimport {\n  DaffOrder,\n} from '@daffodil/order';\nimport {\n  DaffOrderServiceInterface,\n  DaffOrderDriver\n} from '@daffodil/order/driver';\n\nimport {\n  DaffOrderActionTypes,\n  DaffOrderLoad,\n  DaffOrderLoadSuccess,\n  DaffOrderLoadFailure,\n  DaffOrderList,\n  DaffOrderListSuccess,\n  DaffOrderListFailure,\n} from '../actions/order.actions';\n\n@Injectable()\nexport class DaffOrderEffects<\n  T extends DaffOrder = DaffOrder,\n  V extends DaffCart = DaffCart\n> {\n  constructor(\n    private actions$: Actions,\n    @Inject(DaffOrderDriver) private driver: DaffOrderServiceInterface<T>,\n  ) {}\n\n  /**\n   * An effect for the loading of an order.\n   */\n  @Effect()\n  get$ = this.actions$.pipe(\n    ofType(DaffOrderActionTypes.OrderLoadAction),\n    switchMap((action: DaffOrderLoad<T, V>) =>\n      this.driver.get(action.orderId, action.cartId).pipe(\n        map(resp => new DaffOrderLoadSuccess<T>(resp)),\n        catchError(error => of(new DaffOrderLoadFailure('Failed to load order')))\n      )\n    ),\n  )\n\n  /**\n   * An effect for the listing of orders.\n   */\n  @Effect()\n  list$ = this.actions$.pipe(\n    ofType(DaffOrderActionTypes.OrderListAction),\n    switchMap((action: DaffOrderList) =>\n      this.driver.list(action.payload).pipe(\n        map(resp => new DaffOrderListSuccess<T>(resp)),\n        catchError(error => of(new DaffOrderListFailure('Failed to list the orders')))\n      )\n    ),\n  )\n}\n","import { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { DAFF_ORDER_STORE_FEATURE_KEY, daffOrderReducers } from './reducers/public_api';\nimport { DaffOrderEffects } from './effects/order.effects';\nimport { DaffPlacedOrderGuardRedirectUrl } from './guards/public_api';\n\n@NgModule({\n  imports: [\n    EffectsModule.forFeature([\n      DaffOrderEffects,\n    ]),\n    StoreModule.forFeature(DAFF_ORDER_STORE_FEATURE_KEY, daffOrderReducers),\n  ],\n  providers: [\n\t\t{ provide: DaffPlacedOrderGuardRedirectUrl, useValue: '/' },\n  ]\n})\nexport class DaffOrderStateModule {}\n"],"names":[],"mappings":"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"}