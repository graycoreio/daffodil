{"version":3,"file":"daffodil-order-driver-magento-2.4.0.js","sources":["ng://@daffodil/order/driver/magento/2.4.0/transforms/responses/order.ts","ng://@daffodil/order/driver/magento/2.4.0/queries/fragments/order-item.ts","ng://@daffodil/order/driver/magento/2.4.0/queries/fragments/order-address.ts","ng://@daffodil/order/driver/magento/2.4.0/queries/fragments/order-shipment-item.ts","ng://@daffodil/order/driver/magento/2.4.0/queries/fragments/order-shipment-tracking.ts","ng://@daffodil/order/driver/magento/2.4.0/queries/fragments/order-shipment.ts","ng://@daffodil/order/driver/magento/2.4.0/queries/fragments/order-payment.ts","ng://@daffodil/order/driver/magento/2.4.0/queries/fragments/order-invoice.ts","ng://@daffodil/order/driver/magento/2.4.0/queries/fragments/order.ts","ng://@daffodil/order/driver/magento/2.4.0/queries/get-guest-orders.ts","ng://@daffodil/order/driver/magento/2.4.0/injection-tokens/fragments/order.ts","ng://@daffodil/order/driver/magento/2.4.0/validators/get-orders.ts","ng://@daffodil/order/driver/magento/2.4.0/errors/codes.ts","ng://@daffodil/order/driver/magento/2.4.0/errors/map.ts","ng://@daffodil/order/driver/magento/2.4.0/errors/transform.ts","ng://@daffodil/order/driver/magento/2.4.0/order.service.ts","ng://@daffodil/order/driver/magento/2.4.0/order-driver.module.ts"],"sourcesContent":["import {\n  DaffOrder,\n  DaffOrderTotal,\n  DaffOrderItem,\n  DaffOrderAddress,\n  DaffOrderShipment,\n  DaffOrderShipmentItem,\n  DaffOrderShipmentTracking,\n  DaffOrderPayment,\n  DaffOrderInvoice,\n  DaffOrderTotalTypeEnum,\n  DaffOrderItemType\n} from '@daffodil/order';\n\nimport {\n  MagentoGraycoreOrder,\n  MagentoGraycoreOrderItem,\n  MagentoGraycoreOrderShipment,\n  MagentoGraycoreOrderAddress,\n  MagentoGraycoreOrderShipmentItem,\n  MagentoGraycoreOrderShipmentTracking,\n  MagentoGraycoreOrderPayment,\n  MagentoGraycoreOrderInvoice\n} from '../../models/responses/public_api';\n\nfunction transformTotals(totals: {\n  grand_total: number,\n  subtotal: number,\n  shipping: number,\n  discount: number,\n  tax: number,\n}): DaffOrderTotal[] {\n  return [\n    {\n      label: 'Grand Total',\n      type: DaffOrderTotalTypeEnum.GrandTotal,\n      value: totals.grand_total,\n      sort_order: 1\n    },\n    {\n      label: 'Subtotal',\n      type: DaffOrderTotalTypeEnum.Subtotal,\n      value: totals.subtotal,\n      sort_order: 0\n    },\n    {\n      label: 'Shipping',\n      type: DaffOrderTotalTypeEnum.Shipping,\n      value: totals.shipping,\n      sort_order: 2\n    },\n    {\n      label: 'Tax',\n      type: DaffOrderTotalTypeEnum.Tax,\n      value: totals.tax,\n      sort_order: 3\n    },\n    {\n      label: 'Discount',\n      type: DaffOrderTotalTypeEnum.Discount,\n      value: totals.discount,\n      sort_order: 4\n    }\n  ]\n}\n\nfunction transformItem(item: MagentoGraycoreOrderItem): DaffOrderItem {\n  return {\n    item_id: null,\n    type: DaffOrderItemType.Simple,\n    qty_ordered: item.qty_ordered,\n    qty_canceled: item.qty_canceled,\n    qty_fulfilled: item.qty_fulfilled,\n    qty: item.qty,\n    image: {\n      url: item.image,\n      id: null,\n      label: null\n    },\n    order_id: Number(item.order_id),\n    created_at: item.created_at,\n    updated_at: item.updated_at,\n    product_id: item.product_id,\n    parent_item_id: null,\n    sku: item.sku,\n    name: item.name,\n    weight: item.weight,\n    price: item.price,\n    discount_percent: item.discount_percent,\n    discount_amount: item.discount_amount,\n    tax_percent: item.tax_percent,\n    tax_amount: item.tax_amount,\n    row_total: item.row_total,\n    row_total_with_discount: item.row_total_with_discount,\n    row_weight: item.row_weight,\n    tax_before_discount: item.tax_before_discount\n  }\n}\n\nfunction transformAddress(address: MagentoGraycoreOrderAddress): DaffOrderAddress {\n  return {\n    order_id: address.order_id,\n    prefix: address.prefix,\n    suffix: address.suffix,\n    firstname: address.firstname,\n    middlename: address.middlename,\n    lastname: address.lastname,\n    telephone: address.telephone,\n    email: address.email,\n    street: address.street[0],\n    street2: address.street[1],\n    city: address.city,\n    region: address.region_id,\n    country: address.country_code,\n    postcode: address.postcode\n  }\n}\n\nfunction transformShipmentItem(shipmentItem: MagentoGraycoreOrderShipmentItem): DaffOrderShipmentItem {\n  return {\n    item: transformItem(shipmentItem.item),\n    qty: shipmentItem.qty\n  }\n}\n\nfunction transformShipmentTracking(tracking: MagentoGraycoreOrderShipmentTracking): DaffOrderShipmentTracking {\n  return {\n    tracking_number: tracking.tracking_number,\n    tracking_url: null,\n    carrier: tracking.carrier,\n    title: tracking.title,\n    carrier_logo: null,\n  }\n}\n\nfunction transformShipment(shipment: MagentoGraycoreOrderShipment): DaffOrderShipment {\n  return {\n    carrier: null,\n    carrier_title: null,\n    code: null,\n    method: null,\n    method_description: null,\n    tracking: shipment.tracking.map(transformShipmentTracking),\n    items: shipment.items.map(transformShipmentItem)\n  }\n}\n\nfunction transformPayment(payment: MagentoGraycoreOrderPayment): DaffOrderPayment {\n  return {\n    payment_id: payment.payment_id,\n    order_id: payment.order_id,\n    created_at: null,\n    updated_at: null,\n    method: payment.method,\n    cc_type: payment.cc_type,\n    cc_last4: payment.cc_last4,\n    cc_owner: payment.cc_owner,\n    cc_exp_month: payment.cc_exp_month,\n    cc_exp_year: payment.cc_exp_year\n  }\n}\n\nfunction transformInvoice(invoice: MagentoGraycoreOrderInvoice): DaffOrderInvoice {\n  return {\n    totals: transformTotals(invoice),\n    billing_address: transformAddress(invoice.billing_address),\n    shipping_address: transformAddress(invoice.shipping_address),\n    payment: transformPayment(invoice.payment),\n    items: invoice.items.map(transformShipmentItem),\n    shipping_method: null\n  }\n}\n\n/**\n * Transforms the MagentoGraycoreOrder from the magento order query into a DaffOrder.\n */\nexport function daffMagentoTransformOrder(order: MagentoGraycoreOrder): DaffOrder {\n  return {\n    extra_attributes: order,\n\n    id: order.order_number,\n    customer_id: order.customer_id,\n    created_at: order.created_at,\n    updated_at: order.updated_at,\n    status: order.status,\n\n    totals: transformTotals(order),\n    applied_codes: order.applied_codes.map(code => ({code})),\n    items: order.items.map(transformItem),\n    billing_addresses: [\n      transformAddress(order.billing_address)\n    ],\n    shipping_addresses: [\n      transformAddress(order.shipping_address)\n    ],\n    shipments: order.shipments.map(transformShipment),\n    payment: transformPayment(order.payment),\n    invoices: order.invoices.map(transformInvoice),\n    credits: order.credits.map(transformInvoice),\n  }\n}\n","import gql from 'graphql-tag';\n\nexport const orderItemFragment = gql`\n  fragment orderItem on GraycoreOrderItem {\n    qty_ordered\n    image\n    qty_canceled\n    qty_fulfilled\n    order_id\n    created_at\n    updated_at\n    product_id\n    sku\n    name\n    weight\n    qty\n    price\n    discount_percent\n    discount_amount\n    tax_percent\n    tax_amount\n    row_total\n    row_total_with_discount\n    row_weight\n    tax_before_discount\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const orderAddressFragment = gql`\n  fragment orderAddress on GraycoreOrderAddress {\n    order_id\n    prefix\n    suffix\n    firstname\n    middlename\n    lastname\n    telephone\n    email\n    street\n    city\n    region\n    region_id\n    country_code\n    postcode\n  }\n`;\n","import gql from 'graphql-tag';\n\nimport { orderItemFragment } from './order-item';\n\nexport const orderShipmentItemFragment = gql`\n  fragment orderShipmentItem on GraycoreOrderShipmentItem {\n    qty\n    item {\n      ...orderItem\n    }\n  }\n  ${orderItemFragment}\n`;\n","import gql from 'graphql-tag';\n\nexport const orderShipmentTrackingFragment = gql`\n  fragment orderShipmentTracking on GraycoreOrderShipmentTracking {\n    tracking_number\n    carrier\n    title\n  }\n`;\n","import gql from 'graphql-tag';\n\nimport { orderShipmentItemFragment } from './order-shipment-item';\nimport { orderShipmentTrackingFragment } from './order-shipment-tracking';\n\nexport const orderShipmentFragment = gql`\n  fragment orderShipment on GraycoreOrderShipment {\n    tracking {\n      ...orderShipmentTracking\n    }\n    items {\n      ...orderShipmentItem\n    }\n  }\n  ${orderShipmentItemFragment}\n  ${orderShipmentTrackingFragment}\n`;\n","import gql from 'graphql-tag';\n\nexport const orderPaymentFragment = gql`\n  fragment orderPayment on GraycoreOrderPayment {\n    payment_id\n    order_id\n    method\n    cc_type\n    cc_last4\n    cc_owner\n    cc_exp_month\n    cc_exp_year\n  }\n`;\n","import gql from 'graphql-tag';\n\nimport { orderShipmentItemFragment } from './order-shipment-item';\nimport { orderAddressFragment } from './order-address';\nimport { orderPaymentFragment } from './order-payment';\n\nexport const orderInvoiceFragment = gql`\n  fragment orderInvoice on GraycoreOrderInvoice {\n    items {\n      ...orderShipmentItem\n    }\n    grand_total\n    subtotal\n    shipping\n    discount\n    tax\n    billing_address {\n      ...orderAddress\n    }\n    shipping_address {\n      ...orderAddress\n\t\t}\n\t\tpayment {\n\t\t\t...orderPayment\n\t\t}\n  }\n  ${orderShipmentItemFragment}\n  ${orderAddressFragment}\n  ${orderPaymentFragment}\n`;\n","import gql from 'graphql-tag';\nimport { orderItemFragment } from './order-item';\nimport { orderAddressFragment } from './order-address';\nimport { orderShipmentFragment } from './order-shipment';\nimport { orderPaymentFragment } from './order-payment';\nimport { orderInvoiceFragment } from './order-invoice';\n\nexport const orderFragment = gql`\n  fragment order on GraycoreOrder {\n    id\n    order_number\n    customer_id\n    created_at\n    updated_at\n    grand_total\n    subtotal\n    shipping\n    discount\n    tax\n    status\n    applied_codes\n    items {\n      ...orderItem\n    }\n    billing_address {\n      ...orderAddress\n    }\n    shipping_address {\n      ...orderAddress\n    }\n    shipments {\n      ...orderShipment\n    }\n    payment {\n      ...orderPayment\n    }\n    invoices {\n      ...orderInvoice\n    }\n    credits {\n      ...orderInvoice\n    }\n  }\n  ${orderItemFragment}\n  ${orderShipmentFragment}\n  ${orderPaymentFragment}\n  ${orderInvoiceFragment}\n  ${orderAddressFragment}\n`;\n","import { DocumentNode } from 'graphql';\nimport gql from 'graphql-tag';\n\nimport { daffBuildFragmentNameSpread, daffBuildFragmentDefinition } from '@daffodil/core/graphql';\n\nimport { orderFragment } from './fragments/public_api';\n\nexport const getGuestOrders = (extraOrderFragments: DocumentNode[] = []) => gql`\n  query GetGuestOrders($cartId: String!) {\n    graycoreGuestOrders(cartId: $cartId) {\n      orders {\n        ...order\n        ${daffBuildFragmentNameSpread(...extraOrderFragments)}\n      }\n    }\n  }\n  ${orderFragment}\n  ${daffBuildFragmentDefinition(...extraOrderFragments)}\n`;\n","import { InjectionToken } from '@angular/core';\nimport { DocumentNode } from 'graphql';\n\n/**\n * An multi-provider injection token for providing extra GraphQL fragments that will be spread into order queries.\n * This can be used to retrieve additional data that is not covered by the standard Daffodil interfaces.\n * The data will appear in DaffOrder#extra_attributes.\n *\n * Fragment structure is platform-specific and this feature should be used with care.\n */\nexport const DaffMagentoExtraOrderFragments = new InjectionToken<DocumentNode[]>('DaffMagentoExtraOrderFragments', {factory: () => []});\n","import { ApolloQueryResult } from 'apollo-client';\n\nimport { DaffOrderInvalidAPIResponseError } from '@daffodil/order/driver';\n\nimport { MagentoGetGuestOrdersResponse } from '../queries/public_api';\n\nexport const validateGetOrdersResponse = (response: ApolloQueryResult<MagentoGetGuestOrdersResponse>) => {\n  if (response.data.graycoreGuestOrders.orders) {\n    if (response.data.graycoreGuestOrders.orders.reduce((acc, order) => acc && !!(\n      order.billing_address\n        && order.shipping_address\n        && order.payment\n    ), true)) {\n      return response\n    } else {\n      throw new DaffOrderInvalidAPIResponseError('One of the orders does not contain required fields.')\n    }\n  } else {\n    throw new DaffOrderInvalidAPIResponseError('Get orders response does not contain a valid list of orders.')\n  }\n}\n","export enum MagentoOrderGraphQlErrorCode {\n\tCART_NOT_FOUND = 'graphql-no-such-entity',\n}\n","import { DaffErrorCodeMap } from '@daffodil/core';\nimport { DaffCartNotFoundError } from '@daffodil/cart/driver';\n\nimport { MagentoOrderGraphQlErrorCode } from './codes';\n\nexport const DaffOrderMagentoErrorMap: DaffErrorCodeMap = {\n\t[MagentoOrderGraphQlErrorCode.CART_NOT_FOUND]: DaffCartNotFoundError,\n};\n","import { daffTransformMagentoError } from '@daffodil/driver/magento';\n\nimport { DaffOrderMagentoErrorMap } from './map';\n\nexport function transformMagentoOrderError(error: any) {\n  return daffTransformMagentoError(error, DaffOrderMagentoErrorMap)\n}\n","import { DocumentNode } from 'graphql';\nimport { Inject, Injectable } from '@angular/core';\nimport { Apollo } from 'apollo-angular';\n\nimport { Observable, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { DaffCart } from '@daffodil/cart';\nimport {\n  DaffOrder,\n} from '@daffodil/order';\nimport {\n  DaffOrderServiceInterface,\n  DaffOrderNotFoundError\n} from '@daffodil/order/driver';\n\nimport { getGuestOrders, MagentoGetGuestOrdersResponse } from './queries/public_api';\nimport { validateGetOrdersResponse } from './validators/public_api';\nimport { transformMagentoOrderError } from './errors/transform';\nimport { daffMagentoTransformOrder } from './transforms/responses/order';\nimport { DaffMagentoExtraOrderFragments } from './injection-tokens/public_api';\n\n/**\n * A service for making Magento GraphQL queries for orders.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffOrderMagentoService implements DaffOrderServiceInterface {\n  constructor(\n    private apollo: Apollo,\n    @Inject(DaffMagentoExtraOrderFragments) public extraOrderFragments: DocumentNode[],\n  ) {}\n\n  list(cartId?: DaffCart['id']): Observable<DaffOrder[]> {\n    return this.apollo.query<MagentoGetGuestOrdersResponse>({\n      query: getGuestOrders(this.extraOrderFragments),\n      variables: {\n        cartId\n      }\n    }).pipe(\n      map(validateGetOrdersResponse),\n      map(result => result.data.graycoreGuestOrders.orders.map(daffMagentoTransformOrder)),\n      catchError(err => throwError(transformMagentoOrderError(err)))\n    );\n  }\n\n  get(orderId: DaffOrder['id'], cartId?: DaffCart['id']): Observable<DaffOrder> {\n    return this.list(cartId).pipe(\n      map(orders => {\n        for (const order of orders) {\n          if (String(order.id) === String(orderId)) {\n            return order\n          }\n        }\n\n        // order not found\n        throw new DaffOrderNotFoundError(`Could not find an order with ID ${orderId}`);\n      }),\n    );\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DaffOrderDriver } from '@daffodil/order/driver';\n\nimport { DaffOrderMagentoService } from './order.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ]\n})\nexport class DaffOrderMagentoDriverModule {\n  static forRoot(): ModuleWithProviders<DaffOrderMagentoDriverModule> {\n    return {\n      ngModule: DaffOrderMagentoDriverModule,\n      providers: [\n        {\n          provide: DaffOrderDriver,\n          useExisting: DaffOrderMagentoService\n        },\n      ]\n    };\n  }\n}\n"],"names":[],"mappings":"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"}