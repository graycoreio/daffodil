{"version":3,"file":"daffodil-order-driver-magento-2.4.1.js","sources":["ng://@daffodil/order/driver/magento/2.4.1/models/responses/order-item.ts","ng://@daffodil/order/driver/magento/2.4.1/transforms/responses/order.ts","ng://@daffodil/order/driver/magento/2.4.1/models/responses/order-invoice-item.ts","ng://@daffodil/order/driver/magento/2.4.1/models/responses/order-shipment-item.ts","ng://@daffodil/order/driver/magento/2.4.1/queries/fragments/order-item.ts","ng://@daffodil/order/driver/magento/2.4.1/queries/fragments/order-address.ts","ng://@daffodil/order/driver/magento/2.4.1/queries/fragments/order-shipment-item.ts","ng://@daffodil/order/driver/magento/2.4.1/queries/fragments/order-shipment-tracking.ts","ng://@daffodil/order/driver/magento/2.4.1/queries/fragments/order-shipment.ts","ng://@daffodil/order/driver/magento/2.4.1/queries/fragments/order-payment.ts","ng://@daffodil/order/driver/magento/2.4.1/queries/fragments/order-invoice-item.ts","ng://@daffodil/order/driver/magento/2.4.1/queries/fragments/order-invoice-total.ts","ng://@daffodil/order/driver/magento/2.4.1/queries/fragments/order-invoice.ts","ng://@daffodil/order/driver/magento/2.4.1/queries/fragments/order-credit-item.ts","ng://@daffodil/order/driver/magento/2.4.1/queries/fragments/order-credit-total.ts","ng://@daffodil/order/driver/magento/2.4.1/queries/fragments/order-credit.ts","ng://@daffodil/order/driver/magento/2.4.1/queries/fragments/order-total.ts","ng://@daffodil/order/driver/magento/2.4.1/queries/fragments/order.ts","ng://@daffodil/order/driver/magento/2.4.1/queries/get-guest-orders.ts","ng://@daffodil/order/driver/magento/2.4.1/injection-tokens/fragments/order.ts","ng://@daffodil/order/driver/magento/2.4.1/validators/get-orders.ts","ng://@daffodil/order/driver/magento/2.4.1/errors/codes.ts","ng://@daffodil/order/driver/magento/2.4.1/errors/map.ts","ng://@daffodil/order/driver/magento/2.4.1/errors/transform.ts","ng://@daffodil/order/driver/magento/2.4.1/order.service.ts","ng://@daffodil/order/driver/magento/2.4.1/order-driver.module.ts"],"sourcesContent":["import { MagentoMoney } from '@daffodil/driver/magento'\n\nimport { MagentoDiscount } from './discount';\n\nexport enum MagentoOrderItemType {\n  Simple = 'simple',\n  Configurable = 'configurable',\n  Bundle = 'bundle'\n};\n\nexport interface MagentoOrderItemOption {\n  label: string;\n  value: string;\n};\n\nexport interface MagentoOrderItem {\n  id: string;\n  discounts: MagentoDiscount[];\n  product_name: string;\n  product_sale_price: MagentoMoney;\n  product_sku: string;\n  product_type: MagentoOrderItemType;\n  product_url_key: string;\n  quantity_canceled: number;\n  quantity_invoiced: number;\n  quantity_ordered: number;\n  quantity_refunded: number;\n  quantity_returned: number;\n  quantity_shipped: number;\n  selected_options: MagentoOrderItemOption[];\n  entered_options: MagentoOrderItemOption[];\n  status: string;\n}\n\nexport interface MagentoOrderBundleItemSelectedOption {\n  id: string;\n  label: string;\n  values: MagentoOrderBundleItemSelectedOptionValue[];\n};\n\nexport interface MagentoOrderBundleItemSelectedOptionValue {\n  id: string;\n  price: MagentoMoney;\n  product_name: string;\n  product_sku: string;\n  quantity: number;\n};\n\nexport interface MagentoOrderBundleItem extends MagentoOrderItem {\n  bundle_options: MagentoOrderBundleItemSelectedOption[];\n};\n","import { daffAdd, daffSubtract } from '@daffodil/core';\nimport {\n  DaffOrder,\n  DaffOrderTotal,\n  DaffOrderItem,\n  DaffOrderAddress,\n  DaffOrderShipment,\n  DaffOrderShipmentItem,\n  DaffOrderShipmentTracking,\n  DaffOrderPayment,\n  DaffOrderInvoice,\n  DaffOrderTotalTypeEnum,\n  DaffCompositeOrderItemOption,\n  DaffOrderItemType,\n  DaffConfigurableOrderItemAttribute,\n  DaffOrderCoupon\n} from '@daffodil/order';\n\nimport {\n  MagentoOrder,\n  MagentoOrderItem,\n  MagentoOrderShipment,\n  MagentoOrderAddress,\n  MagentoOrderShipmentItem,\n  MagentoOrderShipmentTracking,\n  MagentoOrderPayment,\n  MagentoOrderInvoice\n} from '../../models/responses/public_api';\nimport { MagentoOrderTotal } from '../../models/responses/order-total';\nimport { MagentoOrderCredit } from '../../models/responses/order-credit';\nimport { MagentoOrderCreditItem } from '../../models/responses/order-credit-item';\nimport { MagentoOrderBundleItem, MagentoOrderBundleItemSelectedOption, MagentoOrderItemOption, MagentoOrderItemType } from '../../models/responses/order-item';\nimport { MagentoDiscount } from '../../models/responses/discount';\nimport { MagentoOrderInvoiceItem } from '../../models/responses/order-invoice-item';\n\nfunction transformTotals(totals: MagentoOrderTotal): DaffOrderTotal[] {\n  return [\n    {\n      label: 'Grand Total',\n      type: DaffOrderTotalTypeEnum.GrandTotal,\n      value: totals.grand_total.value,\n      sort_order: 1\n    },\n    {\n      label: 'Subtotal',\n      type: DaffOrderTotalTypeEnum.Subtotal,\n      value: totals.subtotal.value,\n      sort_order: 0\n    },\n    {\n      label: 'Shipping',\n      type: DaffOrderTotalTypeEnum.Shipping,\n      value: totals.total_shipping.value,\n      sort_order: 2\n    },\n    {\n      label: 'Tax',\n      type: DaffOrderTotalTypeEnum.Tax,\n      value: totals.total_tax.value,\n      sort_order: 3\n    },\n    {\n      label: 'Discount',\n      type: DaffOrderTotalTypeEnum.Discount,\n      value: totals.discounts.reduce((acc, discount) => daffAdd(acc, discount.amount.value), 0),\n      sort_order: 4\n    }\n  ]\n}\n\nfunction transformCouponDiscount(discount: MagentoDiscount): DaffOrderCoupon {\n  return {\n    code: discount.label,\n  }\n}\n\nfunction transformConfigurableOption(option: MagentoOrderItemOption): DaffConfigurableOrderItemAttribute {\n  return {\n    attribute_label: option.label,\n\t  value_label: option.value\n  }\n}\n\nfunction transformBundleOption(option: MagentoOrderBundleItemSelectedOption): DaffCompositeOrderItemOption {\n  return {\n    option_label: option.label,\n\t  value_label: option.values && option.values[0] && option.values[0].product_name\n  }\n}\n\nfunction transformAdditionalItemFields(item: MagentoOrderItem) {\n  switch (item.product_type) {\n    case MagentoOrderItemType.Bundle:\n      return {\n        type: DaffOrderItemType.Composite,\n        options: (item as MagentoOrderBundleItem).bundle_options.map(transformBundleOption)\n      }\n    case MagentoOrderItemType.Configurable:\n      return {\n        type: DaffOrderItemType.Configurable,\n        attributes: item.selected_options.map(transformConfigurableOption)\n      }\n    case MagentoOrderItemType.Simple:\n      return {\n        type: DaffOrderItemType.Simple\n      }\n    default:\n      return {}\n  }\n}\n\nfunction transformItem(item: MagentoOrderItem, order: MagentoOrder, qty: number): DaffOrderItem {\n  const discount = item.discounts.reduce((acc, d) => daffAdd(acc, d.amount.value), 0);\n  const rowTotal = qty * item.product_sale_price.value;\n  const rowTotalWithDiscount = qty * daffSubtract(item.product_sale_price.value, discount);\n\n  return {\n    type: DaffOrderItemType.Simple,\n    item_id: null,\n    qty_ordered: item.quantity_ordered,\n    qty_canceled: item.quantity_canceled,\n    qty_fulfilled: item.quantity_shipped,\n    qty,\n    image: {\n      url: item.product_url_key,\n      id: null,\n      label: null\n    },\n    order_id: order.id,\n    created_at: null,\n    updated_at: null,\n    product_id: null,\n    parent_item_id: null,\n    sku: item.product_sku,\n    name: item.product_name,\n    weight: null,\n    price: item.product_sale_price.value,\n    discount_percent: Math.floor(discount / item.product_sale_price.value * 100),\n    discount_amount: discount,\n    tax_percent: null,\n    tax_amount: null,\n    row_total: rowTotal,\n    row_total_with_discount: rowTotalWithDiscount,\n    row_weight: null,\n    tax_before_discount: null,\n    ...transformAdditionalItemFields(item)\n  }\n}\n\nfunction transformAddress(address: MagentoOrderAddress, order: MagentoOrder): DaffOrderAddress {\n  return {\n    order_id: order.id,\n    prefix: address.prefix,\n    suffix: address.suffix,\n    firstname: address.firstname,\n    middlename: address.middlename,\n    lastname: address.lastname,\n    telephone: address.telephone,\n    email: null,\n    street: address.street[0],\n    street2: address.street[1],\n    city: address.city,\n    region: address.region_id,\n    country: address.country_code,\n    postcode: address.postcode\n  }\n}\n\nfunction transformShipmentItem(shipmentItem: MagentoOrderShipmentItem, order: MagentoOrder): DaffOrderShipmentItem {\n  return {\n    item: transformItem(shipmentItem.order_item, order, shipmentItem.quantity_shipped),\n    qty: shipmentItem.quantity_shipped\n  }\n}\n\nfunction transformShipmentTracking(tracking: MagentoOrderShipmentTracking): DaffOrderShipmentTracking {\n  return {\n    tracking_number: tracking.number,\n    tracking_url: null,\n    carrier: tracking.carrier,\n    title: tracking.title,\n    carrier_logo: null,\n  }\n}\n\nfunction transformShipment(shipment: MagentoOrderShipment, order: MagentoOrder): DaffOrderShipment {\n  return {\n    carrier: order.carrier,\n    carrier_title: null,\n    code: null,\n    method: order.shipping_method,\n    method_description: null,\n    tracking: shipment.tracking.map(transformShipmentTracking),\n    items: shipment.items.map(item => transformShipmentItem(item, order))\n  }\n}\n\nfunction transformPayment(payment: MagentoOrderPayment, order: MagentoOrder): DaffOrderPayment {\n  const findAdditionalData = key => {\n    const index = payment.additional_data.findIndex(({name}) => name === key);\n\n    return index > -1 ? payment.additional_data[index].value : null\n  }\n  return {\n    payment_id: null,\n    order_id: order.id,\n    created_at: null,\n    updated_at: null,\n    method: payment.type,\n    cc_type: findAdditionalData('cc_type'),\n    cc_last4: findAdditionalData('cc_last4'),\n    cc_owner: findAdditionalData('cc_owner'),\n    cc_exp_month: findAdditionalData('cc_exp_month'),\n    cc_exp_year: findAdditionalData('cc_exp_year')\n  }\n}\n\nfunction transformInvoiceItem(invoiceItem: MagentoOrderInvoiceItem, order: MagentoOrder): DaffOrderShipmentItem {\n  return {\n    item: transformItem(invoiceItem.order_item, order, invoiceItem.quantity_invoiced),\n    qty: invoiceItem.quantity_invoiced\n  }\n}\n\nfunction transformInvoice(invoice: MagentoOrderInvoice, order: MagentoOrder, payment: MagentoOrderPayment): DaffOrderInvoice {\n  return {\n    totals: transformTotals(invoice.total),\n    billing_address: transformAddress(order.billing_address, order),\n    shipping_address: transformAddress(order.shipping_address, order),\n    payment: transformPayment(payment, order),\n    items: invoice.items.map(item => transformInvoiceItem(item, order)),\n    shipping_method: null\n  }\n}\n\nfunction transformCreditItem(creditItem: MagentoOrderCreditItem, order: MagentoOrder): DaffOrderShipmentItem {\n  return {\n    item: transformItem(creditItem.order_item, order, creditItem.quantity_refunded),\n    qty: creditItem.quantity_refunded\n  }\n}\n\nfunction transformCredit(credit: MagentoOrderCredit, order: MagentoOrder): DaffOrderInvoice {\n  return {\n    totals: transformTotals(credit.total),\n    billing_address: transformAddress(order.billing_address, order),\n    shipping_address: transformAddress(order.shipping_address, order),\n    payment: transformPayment(order.payment_methods[0], order),\n    items: credit.items.map(item => transformCreditItem(item, order)),\n    shipping_method: null\n  }\n}\n\n/**\n * Transforms the MagentoOrder from the magento order query into a DaffOrder.\n */\nexport function daffMagentoTransformOrder(order: MagentoOrder): DaffOrder {\n  return {\n    extra_attributes: order,\n\n    id: order.number,\n    customer_id: null,\n    updated_at: null,\n    created_at: order.order_date,\n    status: order.status,\n\n    totals: transformTotals(order.total),\n    applied_codes: order.total.discounts.map(transformCouponDiscount),\n    items: order.items.map(item => transformItem(item, order, item.quantity_ordered)),\n    billing_addresses: [\n      transformAddress(order.billing_address, order)\n    ],\n    shipping_addresses: [\n      transformAddress(order.shipping_address, order)\n    ],\n    shipments: order.shipments.map(shipment => transformShipment(shipment, order)),\n    payment: transformPayment(order.payment_methods[0], order),\n    // TODO: find out if the index is the correct payment for invoice\n    invoices: order.invoices.map((invoice, index) => transformInvoice(invoice, order, order.payment_methods[index])),\n    credits: order.credit_memos.map(credit => transformCredit(credit, order)),\n  }\n}\n","import { MagentoOrderBundleItemSelectedOption, MagentoOrderItem } from './order-item'\n\nexport interface MagentoOrderInvoiceItem {\n  order_item: MagentoOrderItem;\n  quantity_invoiced: number;\n};\n\nexport interface MagentoOrderInvoiceBundleItem extends MagentoOrderInvoiceItem {\n  bundle_options: MagentoOrderBundleItemSelectedOption[];\n};\n","import { MagentoMoney } from '@daffodil/driver/magento';\n\nimport { MagentoOrderBundleItemSelectedOption, MagentoOrderItem } from './order-item';\n\nexport interface MagentoOrderShipmentItem {\n  order_item: MagentoOrderItem;\n  quantity_shipped: number;\n};\n\nexport interface MagentoOrderShipmentBundleItem extends MagentoOrderShipmentItem {\n  bundle_options: MagentoOrderBundleItemSelectedOption[];\n};\n","import gql from 'graphql-tag';\n\nexport const orderBundleItemSelectedOptionFragment = gql`\n  fragment orderBundleItemSelectedOption on ItemSelectedBundleOption {\n    __typename\n    id\n    label\n    values {\n      __typename\n      id\n      product_name\n    }\n  }\n`;\n\nexport const orderItemFragment = gql`\n  fragment orderItem on OrderItemInterface {\n    __typename\n    id\n    quantity_ordered\n    quantity_canceled\n    quantity_shipped\n    quantity_invoiced\n    product_url_key\n    product_sku\n    product_name\n    product_type\n    product_sale_price {\n      value\n    }\n    discounts {\n      amount {\n        value\n      }\n    }\n    selected_options {\n      label\n      value\n    }\n    ... on BundleOrderItem {\n      bundle_options {\n        ...orderBundleItemSelectedOption\n      }\n    }\n  }\n  ${orderBundleItemSelectedOptionFragment}\n`;\n","import gql from 'graphql-tag';\n\nexport const orderAddressFragment = gql`\n  fragment orderAddress on OrderAddress {\n    __typename\n    city\n    company\n    country_code\n    fax\n    firstname\n    middlename\n    lastname\n    postcode\n    prefix\n    region\n    region_id\n    street\n    suffix\n    telephone\n  }\n`;\n","import gql from 'graphql-tag';\n\nimport { orderItemFragment } from './order-item';\n\nexport const orderShipmentItemFragment = gql`\n  fragment orderShipmentItem on ShipmentItemInterface {\n    __typename\n    id\n    quantity_shipped\n    order_item {\n      ...orderItem\n    }\n  }\n  ${orderItemFragment}\n`;\n","import gql from 'graphql-tag';\n\nexport const orderShipmentTrackingFragment = gql`\n  fragment orderShipmentTracking on ShipmentTracking {\n    __typename\n    number\n    carrier\n    title\n  }\n`;\n","import gql from 'graphql-tag';\n\nimport { orderShipmentItemFragment } from './order-shipment-item';\nimport { orderShipmentTrackingFragment } from './order-shipment-tracking';\n\nexport const orderShipmentFragment = gql`\n  fragment orderShipment on OrderShipment {\n    __typename\n    id\n    tracking {\n      ...orderShipmentTracking\n    }\n    items {\n      ...orderShipmentItem\n    }\n  }\n  ${orderShipmentItemFragment}\n  ${orderShipmentTrackingFragment}\n`;\n","import gql from 'graphql-tag';\n\nexport const orderPaymentFragment = gql`\n  fragment orderPayment on OrderPaymentMethod {\n    __typename\n    name\n    type\n    additional_data {\n      name\n      value\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nimport { orderItemFragment } from './order-item';\n\nexport const orderInvoiceItemFragment = gql`\n  fragment orderInvoiceItem on InvoiceItemInterface {\n    __typename\n    id\n    quantity_invoiced\n    order_item {\n      ...orderItem\n    }\n  }\n  ${orderItemFragment}\n`;\n","import gql from 'graphql-tag';\n\nexport const orderInvoiceTotalFragment = gql`\n  fragment orderInvoiceTotal on InvoiceTotal {\n    __typename\n    discounts {\n      amount {\n        value\n      }\n      label\n    }\n    grand_total {\n      value\n    }\n    subtotal {\n      value\n    }\n    total_tax {\n      value\n    }\n    total_shipping {\n      value\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nimport { orderInvoiceItemFragment } from './order-invoice-item';\nimport { orderInvoiceTotalFragment } from './order-invoice-total';\n\nexport const orderInvoiceFragment = gql`\n  fragment orderInvoice on Invoice {\n    __typename\n    id\n    items {\n      ...orderInvoiceItem\n    }\n    total {\n      ...orderInvoiceTotal\n    }\n  }\n  ${orderInvoiceItemFragment}\n  ${orderInvoiceTotalFragment}\n`;\n","import gql from 'graphql-tag';\n\nimport { orderItemFragment } from './order-item';\n\nexport const orderCreditItemFragment = gql`\n  fragment orderCreditItem on CreditMemoItemInterface {\n    __typename\n    id\n    quantity_refunded\n    order_item {\n      ...orderItem\n    }\n  }\n  ${orderItemFragment}\n`;\n","import gql from 'graphql-tag';\n\nexport const orderCreditTotalFragment = gql`\n  fragment orderCreditTotal on CreditMemoTotal {\n    __typename\n    discounts {\n      amount {\n        value\n      }\n      label\n    }\n    grand_total {\n      value\n    }\n    subtotal {\n      value\n    }\n    total_tax {\n      value\n    }\n    total_shipping {\n      value\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nimport { orderCreditItemFragment } from './order-credit-item';\nimport { orderCreditTotalFragment } from './order-credit-total';\n\nexport const orderCreditFragment = gql`\n  fragment orderCredit on CreditMemo {\n    __typename\n    id\n    items {\n      ...orderCreditItem\n    }\n    total {\n      ...orderCreditTotal\n    }\n  }\n  ${orderCreditItemFragment}\n  ${orderCreditTotalFragment}\n`;\n","import gql from 'graphql-tag';\n\nexport const orderTotalFragment = gql`\n  fragment orderTotal on OrderTotal {\n    __typename\n    discounts {\n      amount {\n        value\n      }\n      label\n    }\n    grand_total {\n      value\n    }\n    subtotal {\n      value\n    }\n    total_tax {\n      value\n    }\n    total_shipping {\n      value\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nimport { orderItemFragment } from './order-item';\nimport { orderAddressFragment } from './order-address';\nimport { orderShipmentFragment } from './order-shipment';\nimport { orderPaymentFragment } from './order-payment';\nimport { orderInvoiceFragment } from './order-invoice';\nimport { orderCreditFragment } from './order-credit';\nimport { orderTotalFragment } from './order-total';\n\nexport const orderFragment = gql`\n  fragment order on GraycoreGuestOrder {\n    __typename\n    id\n    order_date\n    status\n    carrier\n    number\n    shipping_method\n    items {\n      ...orderItem\n    }\n    billing_address {\n      ...orderAddress\n    }\n    shipping_address {\n      ...orderAddress\n    }\n    shipments {\n      ...orderShipment\n    }\n    payment_methods {\n      ...orderPayment\n    }\n    invoices {\n      ...orderInvoice\n    }\n    credit_memos {\n      ...orderCredit\n    }\n    total {\n      ...orderTotal\n    }\n  }\n  ${orderItemFragment}\n  ${orderShipmentFragment}\n  ${orderPaymentFragment}\n  ${orderInvoiceFragment}\n  ${orderCreditFragment}\n  ${orderAddressFragment}\n  ${orderTotalFragment}\n`;\n","import { DocumentNode } from 'graphql';\nimport gql from 'graphql-tag';\n\nimport { daffBuildFragmentNameSpread, daffBuildFragmentDefinition } from '@daffodil/core/graphql';\n\nimport { orderFragment } from './fragments/public_api';\n\nexport const getGuestOrders = (extraOrderFragments: DocumentNode[] = []) => gql`\n  query GetGuestOrders($cartId: String!) {\n    graycoreGuestOrders(cartId: $cartId) {\n      items {\n        ...order\n        ${daffBuildFragmentNameSpread(...extraOrderFragments)}\n      }\n    }\n  }\n  ${orderFragment}\n  ${daffBuildFragmentDefinition(...extraOrderFragments)}\n`;\n","import { InjectionToken } from '@angular/core';\nimport { DocumentNode } from 'graphql';\n\n/**\n * An multi-provider injection token for providing extra GraphQL fragments that will be spread into order queries.\n * This can be used to retrieve additional data that is not covered by the standard Daffodil interfaces.\n * The data will appear in DaffOrder#extra_attributes.\n *\n * Fragment structure is platform-specific and this feature should be used with care.\n */\nexport const DaffMagentoExtraOrderFragments = new InjectionToken<DocumentNode[]>('DaffMagentoExtraOrderFragments', {factory: () => []});\n","import { ApolloQueryResult } from 'apollo-client';\n\nimport { DaffOrderInvalidAPIResponseError } from '@daffodil/order/driver';\n\nimport { MagentoGetGuestOrdersResponse } from '../queries/public_api';\n\nexport const validateGetOrdersResponse = (response: ApolloQueryResult<MagentoGetGuestOrdersResponse>) => {\n  if (response.data.graycoreGuestOrders.items) {\n    if (response.data.graycoreGuestOrders.items.reduce((acc, order) => acc && !!(\n      order.billing_address\n        && order.shipping_address\n        && order.payment_methods\n    ), true)) {\n      return response\n    } else {\n      throw new DaffOrderInvalidAPIResponseError('One of the orders does not contain required fields.')\n    }\n  } else {\n    throw new DaffOrderInvalidAPIResponseError('Get orders response does not contain a valid list of orders.')\n  }\n}\n","export enum MagentoOrderGraphQlErrorCode {\n\tCART_NOT_FOUND = 'graphql-no-such-entity',\n}\n","import { DaffErrorCodeMap } from '@daffodil/core';\nimport { DaffCartNotFoundError } from '@daffodil/cart/driver';\n\nimport { MagentoOrderGraphQlErrorCode } from './codes';\n\nexport const DaffOrderMagentoErrorMap: DaffErrorCodeMap = {\n\t[MagentoOrderGraphQlErrorCode.CART_NOT_FOUND]: DaffCartNotFoundError,\n};\n","import { daffTransformMagentoError } from '@daffodil/driver/magento';\n\nimport { DaffOrderMagentoErrorMap } from './map';\n\nexport function transformMagentoOrderError(error: any) {\n  return daffTransformMagentoError(error, DaffOrderMagentoErrorMap)\n}\n","import { DocumentNode } from 'graphql';\nimport { Inject, Injectable } from '@angular/core';\nimport { Apollo } from 'apollo-angular';\n\nimport { Observable, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { DaffCart } from '@daffodil/cart';\nimport {\n  DaffOrder,\n} from '@daffodil/order';\nimport {\n  DaffOrderServiceInterface,\n  DaffOrderNotFoundError\n} from '@daffodil/order/driver';\n\nimport { getGuestOrders, MagentoGetGuestOrdersResponse } from './queries/public_api';\nimport { validateGetOrdersResponse } from './validators/public_api';\nimport { transformMagentoOrderError } from './errors/transform';\nimport { daffMagentoTransformOrder } from './transforms/responses/order';\nimport { DaffMagentoExtraOrderFragments } from './injection-tokens/public_api';\n\n/**\n * A service for making Magento GraphQL queries for orders.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffOrderMagentoService implements DaffOrderServiceInterface {\n  constructor(\n    private apollo: Apollo,\n    @Inject(DaffMagentoExtraOrderFragments) public extraOrderFragments: DocumentNode[],\n  ) {}\n\n  list(cartId?: DaffCart['id']): Observable<DaffOrder[]> {\n    return this.apollo.query<MagentoGetGuestOrdersResponse>({\n      query: getGuestOrders(this.extraOrderFragments),\n      variables: {\n        cartId\n      }\n    }).pipe(\n      map(validateGetOrdersResponse),\n      map(result => result.data.graycoreGuestOrders.items.map(daffMagentoTransformOrder)),\n      catchError(err => throwError(transformMagentoOrderError(err)))\n    );\n  }\n\n  get(orderId: DaffOrder['id'], cartId?: DaffCart['id']): Observable<DaffOrder> {\n    return this.list(cartId).pipe(\n      map(orders => {\n        for (const order of orders) {\n          if (String(order.id) === String(orderId)) {\n            return order\n          }\n        }\n\n        // order not found\n        throw new DaffOrderNotFoundError(`Could not find an order with ID ${orderId}`);\n      }),\n    );\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DaffOrderDriver } from '@daffodil/order/driver';\n\nimport { DaffOrderMagentoService } from './order.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ]\n})\nexport class DaffOrderMagentoDriverModule {\n  static forRoot(): ModuleWithProviders<DaffOrderMagentoDriverModule> {\n    return {\n      ngModule: DaffOrderMagentoDriverModule,\n      providers: [\n        {\n          provide: DaffOrderDriver,\n          useExisting: DaffOrderMagentoService\n        },\n      ]\n    };\n  }\n}\n"],"names":[],"mappings":"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"}