{"version":3,"file":"daffodil-order-driver-magento-2.4.1.umd.js","sources":["ng://@daffodil/order/driver/magento/2.4.1/models/responses/order-item.ts","ng://@daffodil/order/driver/magento/2.4.1/transforms/responses/order.ts","ng://@daffodil/order/driver/magento/2.4.1/models/responses/order-invoice-item.ts","ng://@daffodil/order/driver/magento/2.4.1/models/responses/order-shipment-item.ts","ng://@daffodil/order/driver/magento/2.4.1/queries/fragments/order-item.ts","ng://@daffodil/order/driver/magento/2.4.1/queries/fragments/order-address.ts","ng://@daffodil/order/driver/magento/2.4.1/queries/fragments/order-shipment-item.ts","ng://@daffodil/order/driver/magento/2.4.1/queries/fragments/order-shipment-tracking.ts","ng://@daffodil/order/driver/magento/2.4.1/queries/fragments/order-shipment.ts","ng://@daffodil/order/driver/magento/2.4.1/queries/fragments/order-payment.ts","ng://@daffodil/order/driver/magento/2.4.1/queries/fragments/order-invoice-item.ts","ng://@daffodil/order/driver/magento/2.4.1/queries/fragments/order-invoice-total.ts","ng://@daffodil/order/driver/magento/2.4.1/queries/fragments/order-invoice.ts","ng://@daffodil/order/driver/magento/2.4.1/queries/fragments/order-credit-item.ts","ng://@daffodil/order/driver/magento/2.4.1/queries/fragments/order-credit-total.ts","ng://@daffodil/order/driver/magento/2.4.1/queries/fragments/order-credit.ts","ng://@daffodil/order/driver/magento/2.4.1/queries/fragments/order-total.ts","ng://@daffodil/order/driver/magento/2.4.1/queries/fragments/order.ts","ng://@daffodil/order/driver/magento/2.4.1/queries/get-guest-orders.ts","ng://@daffodil/order/driver/magento/2.4.1/injection-tokens/fragments/order.ts","ng://@daffodil/order/driver/magento/2.4.1/validators/get-orders.ts","ng://@daffodil/order/driver/magento/2.4.1/errors/codes.ts","ng://@daffodil/order/driver/magento/2.4.1/errors/map.ts","ng://@daffodil/order/driver/magento/2.4.1/errors/transform.ts","ng://@daffodil/order/driver/magento/2.4.1/order.service.ts","ng://@daffodil/order/driver/magento/2.4.1/order-driver.module.ts"],"sourcesContent":["import { MagentoMoney } from '@daffodil/driver/magento'\n\nimport { MagentoDiscount } from './discount';\n\nexport enum MagentoOrderItemType {\n  Simple = 'simple',\n  Configurable = 'configurable',\n  Bundle = 'bundle'\n};\n\nexport interface MagentoOrderItemOption {\n  label: string;\n  value: string;\n};\n\nexport interface MagentoOrderItem {\n  id: string;\n  discounts: MagentoDiscount[];\n  product_name: string;\n  product_sale_price: MagentoMoney;\n  product_sku: string;\n  product_type: MagentoOrderItemType;\n  product_url_key: string;\n  quantity_canceled: number;\n  quantity_invoiced: number;\n  quantity_ordered: number;\n  quantity_refunded: number;\n  quantity_returned: number;\n  quantity_shipped: number;\n  selected_options: MagentoOrderItemOption[];\n  entered_options: MagentoOrderItemOption[];\n  status: string;\n}\n\nexport interface MagentoOrderBundleItemSelectedOption {\n  id: string;\n  label: string;\n  values: MagentoOrderBundleItemSelectedOptionValue[];\n};\n\nexport interface MagentoOrderBundleItemSelectedOptionValue {\n  id: string;\n  price: MagentoMoney;\n  product_name: string;\n  product_sku: string;\n  quantity: number;\n};\n\nexport interface MagentoOrderBundleItem extends MagentoOrderItem {\n  bundle_options: MagentoOrderBundleItemSelectedOption[];\n};\n","import { daffAdd, daffSubtract } from '@daffodil/core';\nimport {\n  DaffOrder,\n  DaffOrderTotal,\n  DaffOrderItem,\n  DaffOrderAddress,\n  DaffOrderShipment,\n  DaffOrderShipmentItem,\n  DaffOrderShipmentTracking,\n  DaffOrderPayment,\n  DaffOrderInvoice,\n  DaffOrderTotalTypeEnum,\n  DaffCompositeOrderItemOption,\n  DaffOrderItemType,\n  DaffConfigurableOrderItemAttribute,\n  DaffOrderCoupon\n} from '@daffodil/order';\n\nimport {\n  MagentoOrder,\n  MagentoOrderItem,\n  MagentoOrderShipment,\n  MagentoOrderAddress,\n  MagentoOrderShipmentItem,\n  MagentoOrderShipmentTracking,\n  MagentoOrderPayment,\n  MagentoOrderInvoice\n} from '../../models/responses/public_api';\nimport { MagentoOrderTotal } from '../../models/responses/order-total';\nimport { MagentoOrderCredit } from '../../models/responses/order-credit';\nimport { MagentoOrderCreditItem } from '../../models/responses/order-credit-item';\nimport { MagentoOrderBundleItem, MagentoOrderBundleItemSelectedOption, MagentoOrderItemOption, MagentoOrderItemType } from '../../models/responses/order-item';\nimport { MagentoDiscount } from '../../models/responses/discount';\nimport { MagentoOrderInvoiceItem } from '../../models/responses/order-invoice-item';\n\nfunction transformTotals(totals: MagentoOrderTotal): DaffOrderTotal[] {\n  return [\n    {\n      label: 'Grand Total',\n      type: DaffOrderTotalTypeEnum.GrandTotal,\n      value: totals.grand_total.value,\n      sort_order: 1\n    },\n    {\n      label: 'Subtotal',\n      type: DaffOrderTotalTypeEnum.Subtotal,\n      value: totals.subtotal.value,\n      sort_order: 0\n    },\n    {\n      label: 'Shipping',\n      type: DaffOrderTotalTypeEnum.Shipping,\n      value: totals.total_shipping.value,\n      sort_order: 2\n    },\n    {\n      label: 'Tax',\n      type: DaffOrderTotalTypeEnum.Tax,\n      value: totals.total_tax.value,\n      sort_order: 3\n    },\n    {\n      label: 'Discount',\n      type: DaffOrderTotalTypeEnum.Discount,\n      value: totals.discounts.reduce((acc, discount) => daffAdd(acc, discount.amount.value), 0),\n      sort_order: 4\n    }\n  ]\n}\n\nfunction transformCouponDiscount(discount: MagentoDiscount): DaffOrderCoupon {\n  return {\n    code: discount.label,\n  }\n}\n\nfunction transformConfigurableOption(option: MagentoOrderItemOption): DaffConfigurableOrderItemAttribute {\n  return {\n    attribute_label: option.label,\n\t  value_label: option.value\n  }\n}\n\nfunction transformBundleOption(option: MagentoOrderBundleItemSelectedOption): DaffCompositeOrderItemOption {\n  return {\n    option_label: option.label,\n\t  value_label: option.values && option.values[0] && option.values[0].product_name\n  }\n}\n\nfunction transformAdditionalItemFields(item: MagentoOrderItem) {\n  switch (item.product_type) {\n    case MagentoOrderItemType.Bundle:\n      return {\n        type: DaffOrderItemType.Composite,\n        options: (item as MagentoOrderBundleItem).bundle_options.map(transformBundleOption)\n      }\n    case MagentoOrderItemType.Configurable:\n      return {\n        type: DaffOrderItemType.Configurable,\n        attributes: item.selected_options.map(transformConfigurableOption)\n      }\n    case MagentoOrderItemType.Simple:\n      return {\n        type: DaffOrderItemType.Simple\n      }\n    default:\n      return {}\n  }\n}\n\nfunction transformItem(item: MagentoOrderItem, order: MagentoOrder, qty: number): DaffOrderItem {\n  const discount = item.discounts.reduce((acc, d) => daffAdd(acc, d.amount.value), 0);\n  const rowTotal = qty * item.product_sale_price.value;\n  const rowTotalWithDiscount = qty * daffSubtract(item.product_sale_price.value, discount);\n\n  return {\n    type: DaffOrderItemType.Simple,\n    item_id: null,\n    qty_ordered: item.quantity_ordered,\n    qty_canceled: item.quantity_canceled,\n    qty_fulfilled: item.quantity_shipped,\n    qty,\n    image: {\n      url: item.product_url_key,\n      id: null,\n      label: null\n    },\n    order_id: order.id,\n    created_at: null,\n    updated_at: null,\n    product_id: null,\n    parent_item_id: null,\n    sku: item.product_sku,\n    name: item.product_name,\n    weight: null,\n    price: item.product_sale_price.value,\n    discount_percent: Math.floor(discount / item.product_sale_price.value * 100),\n    discount_amount: discount,\n    tax_percent: null,\n    tax_amount: null,\n    row_total: rowTotal,\n    row_total_with_discount: rowTotalWithDiscount,\n    row_weight: null,\n    tax_before_discount: null,\n    ...transformAdditionalItemFields(item)\n  }\n}\n\nfunction transformAddress(address: MagentoOrderAddress, order: MagentoOrder): DaffOrderAddress {\n  return {\n    order_id: order.id,\n    prefix: address.prefix,\n    suffix: address.suffix,\n    firstname: address.firstname,\n    middlename: address.middlename,\n    lastname: address.lastname,\n    telephone: address.telephone,\n    email: null,\n    street: address.street[0],\n    street2: address.street[1],\n    city: address.city,\n    region: address.region_id,\n    country: address.country_code,\n    postcode: address.postcode\n  }\n}\n\nfunction transformShipmentItem(shipmentItem: MagentoOrderShipmentItem, order: MagentoOrder): DaffOrderShipmentItem {\n  return {\n    item: transformItem(shipmentItem.order_item, order, shipmentItem.quantity_shipped),\n    qty: shipmentItem.quantity_shipped\n  }\n}\n\nfunction transformShipmentTracking(tracking: MagentoOrderShipmentTracking): DaffOrderShipmentTracking {\n  return {\n    tracking_number: tracking.number,\n    tracking_url: null,\n    carrier: tracking.carrier,\n    title: tracking.title,\n    carrier_logo: null,\n  }\n}\n\nfunction transformShipment(shipment: MagentoOrderShipment, order: MagentoOrder): DaffOrderShipment {\n  return {\n    carrier: order.carrier,\n    carrier_title: null,\n    code: null,\n    method: order.shipping_method,\n    method_description: null,\n    tracking: shipment.tracking.map(transformShipmentTracking),\n    items: shipment.items.map(item => transformShipmentItem(item, order))\n  }\n}\n\nfunction transformPayment(payment: MagentoOrderPayment, order: MagentoOrder): DaffOrderPayment {\n  const findAdditionalData = key => {\n    const index = payment.additional_data.findIndex(({name}) => name === key);\n\n    return index > -1 ? payment.additional_data[index].value : null\n  }\n  return {\n    payment_id: null,\n    order_id: order.id,\n    created_at: null,\n    updated_at: null,\n    method: payment.type,\n    cc_type: findAdditionalData('cc_type'),\n    cc_last4: findAdditionalData('cc_last4'),\n    cc_owner: findAdditionalData('cc_owner'),\n    cc_exp_month: findAdditionalData('cc_exp_month'),\n    cc_exp_year: findAdditionalData('cc_exp_year')\n  }\n}\n\nfunction transformInvoiceItem(invoiceItem: MagentoOrderInvoiceItem, order: MagentoOrder): DaffOrderShipmentItem {\n  return {\n    item: transformItem(invoiceItem.order_item, order, invoiceItem.quantity_invoiced),\n    qty: invoiceItem.quantity_invoiced\n  }\n}\n\nfunction transformInvoice(invoice: MagentoOrderInvoice, order: MagentoOrder, payment: MagentoOrderPayment): DaffOrderInvoice {\n  return {\n    totals: transformTotals(invoice.total),\n    billing_address: transformAddress(order.billing_address, order),\n    shipping_address: transformAddress(order.shipping_address, order),\n    payment: transformPayment(payment, order),\n    items: invoice.items.map(item => transformInvoiceItem(item, order)),\n    shipping_method: null\n  }\n}\n\nfunction transformCreditItem(creditItem: MagentoOrderCreditItem, order: MagentoOrder): DaffOrderShipmentItem {\n  return {\n    item: transformItem(creditItem.order_item, order, creditItem.quantity_refunded),\n    qty: creditItem.quantity_refunded\n  }\n}\n\nfunction transformCredit(credit: MagentoOrderCredit, order: MagentoOrder): DaffOrderInvoice {\n  return {\n    totals: transformTotals(credit.total),\n    billing_address: transformAddress(order.billing_address, order),\n    shipping_address: transformAddress(order.shipping_address, order),\n    payment: transformPayment(order.payment_methods[0], order),\n    items: credit.items.map(item => transformCreditItem(item, order)),\n    shipping_method: null\n  }\n}\n\n/**\n * Transforms the MagentoOrder from the magento order query into a DaffOrder.\n */\nexport function daffMagentoTransformOrder(order: MagentoOrder): DaffOrder {\n  return {\n    extra_attributes: order,\n\n    id: order.number,\n    customer_id: null,\n    updated_at: null,\n    created_at: order.order_date,\n    status: order.status,\n\n    totals: transformTotals(order.total),\n    applied_codes: order.total.discounts.map(transformCouponDiscount),\n    items: order.items.map(item => transformItem(item, order, item.quantity_ordered)),\n    billing_addresses: [\n      transformAddress(order.billing_address, order)\n    ],\n    shipping_addresses: [\n      transformAddress(order.shipping_address, order)\n    ],\n    shipments: order.shipments.map(shipment => transformShipment(shipment, order)),\n    payment: transformPayment(order.payment_methods[0], order),\n    // TODO: find out if the index is the correct payment for invoice\n    invoices: order.invoices.map((invoice, index) => transformInvoice(invoice, order, order.payment_methods[index])),\n    credits: order.credit_memos.map(credit => transformCredit(credit, order)),\n  }\n}\n","import { MagentoOrderBundleItemSelectedOption, MagentoOrderItem } from './order-item'\n\nexport interface MagentoOrderInvoiceItem {\n  order_item: MagentoOrderItem;\n  quantity_invoiced: number;\n};\n\nexport interface MagentoOrderInvoiceBundleItem extends MagentoOrderInvoiceItem {\n  bundle_options: MagentoOrderBundleItemSelectedOption[];\n};\n","import { MagentoMoney } from '@daffodil/driver/magento';\n\nimport { MagentoOrderBundleItemSelectedOption, MagentoOrderItem } from './order-item';\n\nexport interface MagentoOrderShipmentItem {\n  order_item: MagentoOrderItem;\n  quantity_shipped: number;\n};\n\nexport interface MagentoOrderShipmentBundleItem extends MagentoOrderShipmentItem {\n  bundle_options: MagentoOrderBundleItemSelectedOption[];\n};\n","import gql from 'graphql-tag';\n\nexport const orderBundleItemSelectedOptionFragment = gql`\n  fragment orderBundleItemSelectedOption on ItemSelectedBundleOption {\n    __typename\n    id\n    label\n    values {\n      __typename\n      id\n      product_name\n    }\n  }\n`;\n\nexport const orderItemFragment = gql`\n  fragment orderItem on OrderItemInterface {\n    __typename\n    id\n    quantity_ordered\n    quantity_canceled\n    quantity_shipped\n    quantity_invoiced\n    product_url_key\n    product_sku\n    product_name\n    product_type\n    product_sale_price {\n      value\n    }\n    discounts {\n      amount {\n        value\n      }\n    }\n    selected_options {\n      label\n      value\n    }\n    ... on BundleOrderItem {\n      bundle_options {\n        ...orderBundleItemSelectedOption\n      }\n    }\n  }\n  ${orderBundleItemSelectedOptionFragment}\n`;\n","import gql from 'graphql-tag';\n\nexport const orderAddressFragment = gql`\n  fragment orderAddress on OrderAddress {\n    __typename\n    city\n    company\n    country_code\n    fax\n    firstname\n    middlename\n    lastname\n    postcode\n    prefix\n    region\n    region_id\n    street\n    suffix\n    telephone\n  }\n`;\n","import gql from 'graphql-tag';\n\nimport { orderItemFragment } from './order-item';\n\nexport const orderShipmentItemFragment = gql`\n  fragment orderShipmentItem on ShipmentItemInterface {\n    __typename\n    id\n    quantity_shipped\n    order_item {\n      ...orderItem\n    }\n  }\n  ${orderItemFragment}\n`;\n","import gql from 'graphql-tag';\n\nexport const orderShipmentTrackingFragment = gql`\n  fragment orderShipmentTracking on ShipmentTracking {\n    __typename\n    number\n    carrier\n    title\n  }\n`;\n","import gql from 'graphql-tag';\n\nimport { orderShipmentItemFragment } from './order-shipment-item';\nimport { orderShipmentTrackingFragment } from './order-shipment-tracking';\n\nexport const orderShipmentFragment = gql`\n  fragment orderShipment on OrderShipment {\n    __typename\n    id\n    tracking {\n      ...orderShipmentTracking\n    }\n    items {\n      ...orderShipmentItem\n    }\n  }\n  ${orderShipmentItemFragment}\n  ${orderShipmentTrackingFragment}\n`;\n","import gql from 'graphql-tag';\n\nexport const orderPaymentFragment = gql`\n  fragment orderPayment on OrderPaymentMethod {\n    __typename\n    name\n    type\n    additional_data {\n      name\n      value\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nimport { orderItemFragment } from './order-item';\n\nexport const orderInvoiceItemFragment = gql`\n  fragment orderInvoiceItem on InvoiceItemInterface {\n    __typename\n    id\n    quantity_invoiced\n    order_item {\n      ...orderItem\n    }\n  }\n  ${orderItemFragment}\n`;\n","import gql from 'graphql-tag';\n\nexport const orderInvoiceTotalFragment = gql`\n  fragment orderInvoiceTotal on InvoiceTotal {\n    __typename\n    discounts {\n      amount {\n        value\n      }\n      label\n    }\n    grand_total {\n      value\n    }\n    subtotal {\n      value\n    }\n    total_tax {\n      value\n    }\n    total_shipping {\n      value\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nimport { orderInvoiceItemFragment } from './order-invoice-item';\nimport { orderInvoiceTotalFragment } from './order-invoice-total';\n\nexport const orderInvoiceFragment = gql`\n  fragment orderInvoice on Invoice {\n    __typename\n    id\n    items {\n      ...orderInvoiceItem\n    }\n    total {\n      ...orderInvoiceTotal\n    }\n  }\n  ${orderInvoiceItemFragment}\n  ${orderInvoiceTotalFragment}\n`;\n","import gql from 'graphql-tag';\n\nimport { orderItemFragment } from './order-item';\n\nexport const orderCreditItemFragment = gql`\n  fragment orderCreditItem on CreditMemoItemInterface {\n    __typename\n    id\n    quantity_refunded\n    order_item {\n      ...orderItem\n    }\n  }\n  ${orderItemFragment}\n`;\n","import gql from 'graphql-tag';\n\nexport const orderCreditTotalFragment = gql`\n  fragment orderCreditTotal on CreditMemoTotal {\n    __typename\n    discounts {\n      amount {\n        value\n      }\n      label\n    }\n    grand_total {\n      value\n    }\n    subtotal {\n      value\n    }\n    total_tax {\n      value\n    }\n    total_shipping {\n      value\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nimport { orderCreditItemFragment } from './order-credit-item';\nimport { orderCreditTotalFragment } from './order-credit-total';\n\nexport const orderCreditFragment = gql`\n  fragment orderCredit on CreditMemo {\n    __typename\n    id\n    items {\n      ...orderCreditItem\n    }\n    total {\n      ...orderCreditTotal\n    }\n  }\n  ${orderCreditItemFragment}\n  ${orderCreditTotalFragment}\n`;\n","import gql from 'graphql-tag';\n\nexport const orderTotalFragment = gql`\n  fragment orderTotal on OrderTotal {\n    __typename\n    discounts {\n      amount {\n        value\n      }\n      label\n    }\n    grand_total {\n      value\n    }\n    subtotal {\n      value\n    }\n    total_tax {\n      value\n    }\n    total_shipping {\n      value\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nimport { orderItemFragment } from './order-item';\nimport { orderAddressFragment } from './order-address';\nimport { orderShipmentFragment } from './order-shipment';\nimport { orderPaymentFragment } from './order-payment';\nimport { orderInvoiceFragment } from './order-invoice';\nimport { orderCreditFragment } from './order-credit';\nimport { orderTotalFragment } from './order-total';\n\nexport const orderFragment = gql`\n  fragment order on GraycoreGuestOrder {\n    __typename\n    id\n    order_date\n    status\n    carrier\n    number\n    shipping_method\n    items {\n      ...orderItem\n    }\n    billing_address {\n      ...orderAddress\n    }\n    shipping_address {\n      ...orderAddress\n    }\n    shipments {\n      ...orderShipment\n    }\n    payment_methods {\n      ...orderPayment\n    }\n    invoices {\n      ...orderInvoice\n    }\n    credit_memos {\n      ...orderCredit\n    }\n    total {\n      ...orderTotal\n    }\n  }\n  ${orderItemFragment}\n  ${orderShipmentFragment}\n  ${orderPaymentFragment}\n  ${orderInvoiceFragment}\n  ${orderCreditFragment}\n  ${orderAddressFragment}\n  ${orderTotalFragment}\n`;\n","import { DocumentNode } from 'graphql';\nimport gql from 'graphql-tag';\n\nimport { daffBuildFragmentNameSpread, daffBuildFragmentDefinition } from '@daffodil/core/graphql';\n\nimport { orderFragment } from './fragments/public_api';\n\nexport const getGuestOrders = (extraOrderFragments: DocumentNode[] = []) => gql`\n  query GetGuestOrders($cartId: String!) {\n    graycoreGuestOrders(cartId: $cartId) {\n      items {\n        ...order\n        ${daffBuildFragmentNameSpread(...extraOrderFragments)}\n      }\n    }\n  }\n  ${orderFragment}\n  ${daffBuildFragmentDefinition(...extraOrderFragments)}\n`;\n","import { InjectionToken } from '@angular/core';\nimport { DocumentNode } from 'graphql';\n\n/**\n * An multi-provider injection token for providing extra GraphQL fragments that will be spread into order queries.\n * This can be used to retrieve additional data that is not covered by the standard Daffodil interfaces.\n * The data will appear in DaffOrder#extra_attributes.\n *\n * Fragment structure is platform-specific and this feature should be used with care.\n */\nexport const DaffMagentoExtraOrderFragments = new InjectionToken<DocumentNode[]>('DaffMagentoExtraOrderFragments', {factory: () => []});\n","import { ApolloQueryResult } from 'apollo-client';\n\nimport { DaffOrderInvalidAPIResponseError } from '@daffodil/order/driver';\n\nimport { MagentoGetGuestOrdersResponse } from '../queries/public_api';\n\nexport const validateGetOrdersResponse = (response: ApolloQueryResult<MagentoGetGuestOrdersResponse>) => {\n  if (response.data.graycoreGuestOrders.items) {\n    if (response.data.graycoreGuestOrders.items.reduce((acc, order) => acc && !!(\n      order.billing_address\n        && order.shipping_address\n        && order.payment_methods\n    ), true)) {\n      return response\n    } else {\n      throw new DaffOrderInvalidAPIResponseError('One of the orders does not contain required fields.')\n    }\n  } else {\n    throw new DaffOrderInvalidAPIResponseError('Get orders response does not contain a valid list of orders.')\n  }\n}\n","export enum MagentoOrderGraphQlErrorCode {\n\tCART_NOT_FOUND = 'graphql-no-such-entity',\n}\n","import { DaffErrorCodeMap } from '@daffodil/core';\nimport { DaffCartNotFoundError } from '@daffodil/cart/driver';\n\nimport { MagentoOrderGraphQlErrorCode } from './codes';\n\nexport const DaffOrderMagentoErrorMap: DaffErrorCodeMap = {\n\t[MagentoOrderGraphQlErrorCode.CART_NOT_FOUND]: DaffCartNotFoundError,\n};\n","import { daffTransformMagentoError } from '@daffodil/driver/magento';\n\nimport { DaffOrderMagentoErrorMap } from './map';\n\nexport function transformMagentoOrderError(error: any) {\n  return daffTransformMagentoError(error, DaffOrderMagentoErrorMap)\n}\n","import { DocumentNode } from 'graphql';\nimport { Inject, Injectable } from '@angular/core';\nimport { Apollo } from 'apollo-angular';\n\nimport { Observable, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { DaffCart } from '@daffodil/cart';\nimport {\n  DaffOrder,\n} from '@daffodil/order';\nimport {\n  DaffOrderServiceInterface,\n  DaffOrderNotFoundError\n} from '@daffodil/order/driver';\n\nimport { getGuestOrders, MagentoGetGuestOrdersResponse } from './queries/public_api';\nimport { validateGetOrdersResponse } from './validators/public_api';\nimport { transformMagentoOrderError } from './errors/transform';\nimport { daffMagentoTransformOrder } from './transforms/responses/order';\nimport { DaffMagentoExtraOrderFragments } from './injection-tokens/public_api';\n\n/**\n * A service for making Magento GraphQL queries for orders.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffOrderMagentoService implements DaffOrderServiceInterface {\n  constructor(\n    private apollo: Apollo,\n    @Inject(DaffMagentoExtraOrderFragments) public extraOrderFragments: DocumentNode[],\n  ) {}\n\n  list(cartId?: DaffCart['id']): Observable<DaffOrder[]> {\n    return this.apollo.query<MagentoGetGuestOrdersResponse>({\n      query: getGuestOrders(this.extraOrderFragments),\n      variables: {\n        cartId\n      }\n    }).pipe(\n      map(validateGetOrdersResponse),\n      map(result => result.data.graycoreGuestOrders.items.map(daffMagentoTransformOrder)),\n      catchError(err => throwError(transformMagentoOrderError(err)))\n    );\n  }\n\n  get(orderId: DaffOrder['id'], cartId?: DaffCart['id']): Observable<DaffOrder> {\n    return this.list(cartId).pipe(\n      map(orders => {\n        for (const order of orders) {\n          if (String(order.id) === String(orderId)) {\n            return order\n          }\n        }\n\n        // order not found\n        throw new DaffOrderNotFoundError(`Could not find an order with ID ${orderId}`);\n      }),\n    );\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DaffOrderDriver } from '@daffodil/order/driver';\n\nimport { DaffOrderMagentoService } from './order.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ]\n})\nexport class DaffOrderMagentoDriverModule {\n  static forRoot(): ModuleWithProviders<DaffOrderMagentoDriverModule> {\n    return {\n      ngModule: DaffOrderMagentoDriverModule,\n      providers: [\n        {\n          provide: DaffOrderDriver,\n          useExisting: DaffOrderMagentoService\n        },\n      ]\n    };\n  }\n}\n"],"names":["DaffOrderTotalTypeEnum","daffAdd","DaffOrderItemType","order","daffSubtract","daffBuildFragmentNameSpread","daffBuildFragmentDefinition","InjectionToken","DaffOrderInvalidAPIResponseError","DaffCartNotFoundError","daffTransformMagentoError","map","catchError","throwError","DaffOrderNotFoundError","Injectable","Apollo","Inject","DaffOrderDriver","NgModule","CommonModule"],"mappings":"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"}