{"version":3,"file":"daffodil-product.js","sources":["ng://@daffodil/product/models/product.ts","ng://@daffodil/product/actions/product.actions.ts","ng://@daffodil/product/actions/product-grid.actions.ts","ng://@daffodil/product/actions/best-sellers.actions.ts","ng://@daffodil/product/actions/configurable-product.actions.ts","ng://@daffodil/product/actions/composite-product.actions.ts","ng://@daffodil/product/models/composite-product.ts","ng://@daffodil/product/models/composite-product-item.ts","ng://@daffodil/product/models/configurable-product.ts","ng://@daffodil/product/models/prices.ts","ng://@daffodil/product/models/composite-configuration-item.ts","ng://@daffodil/product/resolvers/product-page/product-page.resolver.ts","ng://@daffodil/product/reducers/product-grid/product-grid.reducer.ts","ng://@daffodil/product/reducers/product/product.reducer.ts","ng://@daffodil/product/reducers/best-sellers/best-sellers.reducer.ts","ng://@daffodil/product/reducers/product-entities/product-entities-reducer-adapter.ts","ng://@daffodil/product/reducers/product-entities/product-entities.reducer.ts","ng://@daffodil/product/reducers/configurable-product-entities/configurable-product-entities-reducer-adapter.ts","ng://@daffodil/product/reducers/configurable-product-entities/configurable-product-entities.reducer.ts","ng://@daffodil/product/reducers/composite-product-entities/composite-product-entities-reducer-adapter.ts","ng://@daffodil/product/reducers/composite-product-entities/composite-product-entities.reducer.ts","ng://@daffodil/product/reducers/product-reducers.ts","ng://@daffodil/product/reducers/composite-product-entities/composite-product-entity.ts","ng://@daffodil/product/selectors/product-feature.selector.ts","ng://@daffodil/product/selectors/product/product.selectors.ts","ng://@daffodil/product/selectors/product-entities/product-entities.selectors.ts","ng://@daffodil/product/selectors/best-sellers/best-sellers.selectors.ts","ng://@daffodil/product/selectors/product-grid/product-grid.selectors.ts","ng://@daffodil/product/selectors/configurable-product-entities/configurable-product-entities.selectors.ts","ng://@daffodil/product/selectors/configurable-product/configurable-product.selectors.ts","ng://@daffodil/product/selectors/composite-product-entities/composite-product-entities.selectors.ts","ng://@daffodil/product/selectors/composite-product/composite-product.selectors.ts","ng://@daffodil/product/selectors/all-selectors.selectors.ts","ng://@daffodil/product/drivers/injection-tokens/product-driver.token.ts","ng://@daffodil/product/effects/product-grid.effects.ts","ng://@daffodil/product/effects/product.effects.ts","ng://@daffodil/product/effects/best-seller.effects.ts","ng://@daffodil/product/product-state.module.ts","ng://@daffodil/product/product.module.ts","ng://@daffodil/product/drivers/shopify/product.service.ts","ng://@daffodil/product/drivers/shopify/product-driver.module.ts","ng://@daffodil/product/facades/product-grid/product-grid.facade.ts","ng://@daffodil/product/facades/product/product.facade.ts","ng://@daffodil/product/facades/configurable-product/configurable-product.facade.ts","ng://@daffodil/product/facades/helpers.ts","ng://@daffodil/product/facades/composite-product/composite-product.facade.ts","ng://@daffodil/product/facades/best-sellers/best-sellers.facade.ts","ng://@daffodil/product/drivers/magento/models/magento-product.ts","ng://@daffodil/product/drivers/magento/models/bundled-product.ts","ng://@daffodil/product/drivers/magento/models/configurable-product.ts","ng://@daffodil/product/drivers/magento/queries/fragments/bundled-product.ts","ng://@daffodil/product/drivers/magento/queries/fragments/simple-product.ts","ng://@daffodil/product/drivers/magento/queries/fragments/configurable-product.ts","ng://@daffodil/product/drivers/magento/queries/fragments/product.ts","ng://@daffodil/product/drivers/magento/queries/get-product.ts","ng://@daffodil/product/drivers/magento/queries/get-all-products.ts","ng://@daffodil/product/drivers/magento/transforms/simple-product-transformers.ts","ng://@daffodil/product/drivers/magento/transforms/bundled-product-transformers.ts","ng://@daffodil/product/drivers/magento/transforms/configurable-product-transformers.ts","ng://@daffodil/product/drivers/magento/transforms/product-transformers.ts","ng://@daffodil/product/drivers/magento/product.service.ts","ng://@daffodil/product/drivers/magento/product-driver.module.ts"],"sourcesContent":["import { DaffProductImage } from './product-image';\n\nexport enum DaffProductTypeEnum {\n\tSimple = 'simple',\n\tComposite = 'composite',\n\tConfigurable = 'configurable'\n}\n\n/**\n * An interface for a product usable by the @daffodil/product library.\n */\nexport interface DaffProduct {\n\tid: string;\n\ttype?: DaffProductTypeEnum;\n\turl?: string;\n\tprice?: number;\n\tdiscount?: DaffProductDiscount;\n  name?: string;\n  brand?: string;\n  description?: string;\n\timages: DaffProductImage[];\n\tin_stock?: boolean;\n}\n\n/**\n * The discount for a product.\n */\nexport interface DaffProductDiscount {\n\tamount: number;\n\tpercent: number;\n}\n","import { Action } from '@ngrx/store';\nimport { DaffProduct } from '../models/product';\n\n/**\n * Action types for Product Actions.\n */\nexport enum DaffProductActionTypes {\n    ProductLoadAction = '[Product] Load Action',\n    ProductLoadSuccessAction = '[Product] Load Success Action',\n    ProductLoadFailureAction = '[Product] Load Failure Action',\n    UpdateQtyAction = '[Product] Update Qty Action',\n    ProductModifyAction = '[Product] Product Modify Action'\n}\n\n/**\n * Triggers a request for a Product.\n * \n * @param payload - Id of requested Product\n */\nexport class DaffProductLoad implements Action {\n  readonly type = DaffProductActionTypes.ProductLoadAction;\n\n  constructor(public payload: string) {}\n}\n\n/**\n * An action called when a request for a Product succeeded.\n * \n * @param payload - A Product\n */\nexport class DaffProductLoadSuccess<T extends DaffProduct = DaffProduct> implements Action {\n    readonly type = DaffProductActionTypes.ProductLoadSuccessAction;\n\n    constructor(public payload: T) {}\n}\n\n/**\n * An action called when a request for a Product failed.\n * \n * @param payload - An error message\n */\nexport class DaffProductLoadFailure implements Action {\n  readonly type = DaffProductActionTypes.ProductLoadFailureAction;\n\n  constructor(public payload: string) {}\n}\n\n/**\n * Update the qty of a product in an redux store.\n * \n * @param payload - The qty of the product.\n */\nexport class DaffProductUpdateQty implements Action {\n    readonly type = DaffProductActionTypes.UpdateQtyAction;\n\n    constructor(public payload: number) {}\n}\n\nexport type DaffProductActions<T extends DaffProduct = DaffProduct> = \n    | DaffProductLoad \n    | DaffProductLoadSuccess<T>\n    | DaffProductLoadFailure\n    | DaffProductUpdateQty;","import { Action } from '@ngrx/store';\n\nimport { DaffProduct } from '../models/product';\n\n/** \n * Action types for Product Grid Actions.\n*/\nexport enum DaffProductGridActionTypes {\n    ProductGridLoadAction = '[ProductGrid] Load Action',\n    ProductGridLoadSuccessAction = '[ProductGrid] Load Success Action',\n    ProductGridLoadFailureAction = '[ProductGrid] Load Failure Action',\n    ProductGridResetAction = '[ProductGrid] Reset Action'\n}\n\n/**\n * Triggers a request for an array of products.\n */\nexport class DaffProductGridLoad implements Action {\n  readonly type = DaffProductGridActionTypes.ProductGridLoadAction;\n\n  constructor() {}\n}\n\n/**\n * An action called when a request for of an array of products succeeded.\n * \n * @param payload - An array of Products\n */\nexport class DaffProductGridLoadSuccess<T extends DaffProduct = DaffProduct> implements Action {\n    readonly type = DaffProductGridActionTypes.ProductGridLoadSuccessAction;\n\n    constructor(public payload: T[]) {}\n}\n\n/**\n * An action called when a request for an array of products failed.\n * \n * @param payload - An error message\n */\nexport class DaffProductGridLoadFailure implements Action {\n  readonly type = DaffProductGridActionTypes.ProductGridLoadFailureAction;\n\n  constructor(public payload: string) {}\n}\n\n/**\n * Resets the state of the product grid redux store to its initial state.\n */\nexport class DaffProductGridReset implements Action {\n    readonly type = DaffProductGridActionTypes.ProductGridResetAction;\n\n    constructor() {}\n}\n\nexport type DaffProductGridActions<T extends DaffProduct = DaffProduct> = \n    | DaffProductGridLoad \n    | DaffProductGridLoadSuccess<T>\n    | DaffProductGridLoadFailure\n    | DaffProductGridReset;","import { Action } from '@ngrx/store';\n\nimport { DaffProduct } from '../models/product';\n\n/**\n * Action types for Best Seller Actions.\n */\nexport enum DaffBestSellersActionTypes {\n  BestSellersLoadAction = '[BestSellers] Load Action',\n  BestSellersLoadSuccessAction = '[BestSellers] Load Success Action',\n  BestSellersLoadFailureAction = '[BestSellers] Load Failure Action',\n  BestSellersResetAction = '[BestSellers] Reset Action'\n}\n\n/**\n * Triggers a request for best selling products.\n */\nexport class DaffBestSellersLoad implements Action {\n  readonly type = DaffBestSellersActionTypes.BestSellersLoadAction;\n\n  constructor() {}\n}\n\n/**\n * An action called when a request for best selling products succeeded.\n * \n * @param payload - An array of Products\n */\nexport class DaffBestSellersLoadSuccess<T extends DaffProduct = DaffProduct> implements Action {\n  readonly type = DaffBestSellersActionTypes.BestSellersLoadSuccessAction;\n\n  constructor(public payload: T[]) {}\n}\n\n/**\n * An action called when a request for best selling products failed.\n * \n * @param payload - An error message\n */\nexport class DaffBestSellersLoadFailure implements Action {\n  readonly type = DaffBestSellersActionTypes.BestSellersLoadFailureAction;\n\n  constructor(public payload: string) {}\n}\n\n/**\n * Resets the state of the best sellers redux store to its initial state.\n */\nexport class DaffBestSellersReset implements Action {\n  readonly type = DaffBestSellersActionTypes.BestSellersResetAction;\n\n  constructor() {}\n}\n\nexport type DaffBestSellersActions<T extends DaffProduct = DaffProduct> = \n    | DaffBestSellersLoad \n    | DaffBestSellersLoadSuccess<T>\n    | DaffBestSellersLoadFailure\n    | DaffBestSellersReset;\n    ","import { Action } from '@ngrx/store';\n\nimport { DaffConfigurableProduct } from '../models/configurable-product';\n\n/**\n * Action types for Configurable Product Actions.\n */\nexport enum DaffConfigurableProductActionTypes {\n\tConfigurableProductApplyAttributeAction = '[Configurable Product] Configurable Product Apply Attribute Action',\n\tConfigurableProductRemoveAttributeAction = '[Configurable Product] Configurable Product Remove Attribute Action',\n\tConfigurableProductToggleAttributeAction = '[Configurable Product] Configurable Product Toggle Attribute Action',\n}\n\n/**\n * Applies an attribute to a particular configurable product.\n * \n * @param id - Id of the Configurable Product\n * @param attributeId - Id of the attribute to be applied\n * @param attributeValue - Value of the attribute to be applied\n */\nexport class DaffConfigurableProductApplyAttribute<T extends DaffConfigurableProduct> implements Action {\n  readonly type = DaffConfigurableProductActionTypes.ConfigurableProductApplyAttributeAction;\n\n  constructor(public id: T['id'], public attributeId: string, public attributeValue: string) {}\n}\n\n/**\n * Removes an applied attribute from a particular configurable product.\n * \n * @param id - Id of the Configurable Product\n * @param attributeId - Id of the attribute to be removed\n */\nexport class DaffConfigurableProductRemoveAttribute<T extends DaffConfigurableProduct> implements Action {\n  readonly type = DaffConfigurableProductActionTypes.ConfigurableProductRemoveAttributeAction;\n\n  constructor(public id: T['id'], public attributeId: string) {}\n}\n\n/**\n * Toggles an attribute of a particular configurable product. If the attribute type of the configurable product already has \n * a different value than the one provided in the action, the attribute value in state will be overwritten by the value provided \n * in the action.\n * \n * @param id - Id of the Configurable Product\n * @param attributeId - Id of the attribute to be toggled\n * @param attributeValue - Value of the attribute to be toggled\n */\nexport class DaffConfigurableProductToggleAttribute<T extends DaffConfigurableProduct> implements Action {\n  readonly type = DaffConfigurableProductActionTypes.ConfigurableProductToggleAttributeAction;\n\n  constructor(public id: T['id'], public attributeId: string, public attributeValue: string) {}\n}\n\nexport type DaffConfigurableProductActions<T extends DaffConfigurableProduct = DaffConfigurableProduct> = \n    | DaffConfigurableProductApplyAttribute<T>\n    | DaffConfigurableProductRemoveAttribute<T>\n    | DaffConfigurableProductToggleAttribute<T>;","import { Action } from '@ngrx/store';\n\nimport { DaffCompositeProduct } from '../models/composite-product';\nimport { DaffCompositeProductItem, DaffCompositeProductItemOption } from '../models/composite-product-item';\n\n/**\n * Action types for Composite Product Actions.\n */\nexport enum DaffCompositeProductActionTypes {\n\tCompositeProductApplyOptionAction = '[Composite Product] Composite Product Apply Option Action'\n}\n\n/**\n * Applies a product option to a particular composite product.\n * \n * @param id - Id of the Composite Product\n * @param itemId - Id of the product item.\n * @param optionId - Id of the option of the product item that is chosen.\n */\nexport class DaffCompositeProductApplyOption<T extends DaffCompositeProduct> implements Action {\n  readonly type = DaffCompositeProductActionTypes.CompositeProductApplyOptionAction;\n\n  constructor(public id: T['id'], public itemId: DaffCompositeProductItem['id'], public optionId: DaffCompositeProductItemOption['id'], public qty?: number) {}\n}\n\nexport type DaffCompositeProductActions<T extends DaffCompositeProduct = DaffCompositeProduct> = \n\t| DaffCompositeProductApplyOption<T>;\n","import { DaffProduct } from './product';\nimport { DaffCompositeProductItem } from './composite-product-item';\n\n/**\n * A composite product is a group of products sold together. It includes one primary product and many accessory \"items\". \n * The composite product items are additional products the customer might want to purchase with the primary product, \n * and each item has a number of options from which the user can choose. Composite product items can be optional or required.\n * For example, a toolbox bundle might have a primary product of the toolbox. The items could be a hammer and a screw driver, \n * and the options for these items could be two different hammers and two different screwdrivers between which the customer could choose. \n * All of these items could have different prices/discounts/etc which would cause the composite products to have ranged prices.\n */\nexport interface DaffCompositeProduct extends DaffProduct {\n\titems: DaffCompositeProductItem[];\n}\n","import { DaffProduct } from './product';\n\n/**\n * An enum for whether a composite product item should be displayed as a radio or select input.\n */\nexport enum DaffCompositeProductItemInputEnum {\n\tselect = 'select',\n\tradio = 'radio'\n}\n\n/**\n * The composite product item describes one set of product options that the user can add to the composite product.\n * A composite product item can be required or optional. If it is required, an option _must_ be chosen in order to add the product to the cart.\n * If the item is optional, the product can be added to the cart without an option having been chosen.\n * For example, if a composite product is a toolbox bundle, a composite product item might be a screw driver, and the options contained in that\n * item might be a phillips head and a flathead. The customer could choose to add either a phillips head or a flathead to the\n * composite product, or neither if the item is optional.\n */\nexport interface DaffCompositeProductItem {\n\tid: number | string;\n\trequired: boolean;\n\ttitle: string;\n\tinput_type: DaffCompositeProductItemInputEnum;\n\toptions: DaffCompositeProductItemOption[];\n}\n\n/**\n * The composite product item option is a DaffProduct that can be added to a composite product.\n */\nexport interface DaffCompositeProductItemOption extends DaffProduct {\n\tid: string;\n\tname: string;\n\tprice: number;\n\tis_default: boolean;\n\tquantity: number;\n}\n","import { DaffSortable } from '@daffodil/core';\n\nimport { DaffProduct, DaffProductDiscount } from './product';\nimport { DaffProductImage } from './product-image';\n\n/**\n * A configurable product is a product with configurable attributes. The price of a configurable product may change based on \n * the attributes chosen, so a configurable product can have a price range. An example of a configurable product is a T-shirt.\n */\nexport interface DaffConfigurableProduct extends DaffProduct {\n\tconfigurableAttributes: DaffConfigurableProductAttribute[];\n\tvariants: DaffConfigurableProductVariant[];\n}\n\n/**\n * An attribute of the configurable product that the customer must choose to add the configurable product to the cart. \n * An example of an attribute would be size for clothing.\n */\nexport interface DaffConfigurableProductAttribute extends DaffSortable {\n\tcode:\tstring;\n\tlabel: string;\n\tvalues:\tDaffConfigurableProductOptionValue[];\n}\n\n/**\n * A variant is one version of the configurable product with all attributes chosen. Variants exist because not all versions of every configuration of \n * the product might be in stock. For example, a shirt might have a medium, red shirt and a small,\n * green shirt in stock, but no small, red shirts. In this case there would be two variants (mediumRed, smallGreen) rather than the maximum 4 variants \n * (smallRed, mediumRed, smallGreen, mediumGreen). This ensures the customer can't add a configurable product to the cart that is not\n * in stock. However, variants don't usually need to be considered by the frontend dev, because daffodil abstacts away the concept of variants into \n * an \"available attributes\" selector.\n */\nexport interface DaffConfigurableProductVariant {\n\tappliedAttributes: DaffProductVariantAttributesDictionary;\n\tid: string;\n\tprice: number;\n\tdiscount: DaffProductDiscount;\n\timage?: DaffProductImage;\n\tin_stock: boolean;\n}\n\n/**\n * The applied attributes for a particular product variant.\n */\nexport interface DaffProductVariantAttributesDictionary {\n\t[x: string]:  DaffConfigurableProductOptionValue['value'];\n}\n\n/**\n * The configurable option of a configurable product attribute. For example, this could be \"blue\" for the attribute \"color\" for a T-shirt.\n */\nexport interface DaffConfigurableProductOptionValue {\n\tvalue: string;\n\tlabel: string;\n\tswatch?: DaffSwatchOption;\n}\n\n/**\n * An optional field for the hex color code for DaffConfigurableProductOptionValues that need it.\n */\nexport interface DaffSwatchOption {\n\tvalue: string;\n\tthumbnail?: string;\n}\n","import { DaffProductDiscount } from './product';\n\nexport interface DaffProductPrices {\n\tdiscountedPrice: number;\n\tdiscount: DaffProductDiscount;\n\toriginalPrice: number;\n}\n\nexport interface DaffPriceRange {\n\tmaxPrice: DaffProductPrices;\n\tminPrice: DaffProductPrices;\n}\n","export interface DaffCompositeConfigurationItem {\n\tqty?: number;\n\tvalue?: string;\n}\n","import { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core'\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router'\nimport { ofType } from '@ngrx/effects';\nimport { ActionsSubject, Store } from '@ngrx/store';\nimport { Observable, of } from 'rxjs'\nimport { mapTo, take } from 'rxjs/operators';\n\nimport { DaffProductActionTypes, DaffProductLoad } from '../../actions/product.actions';\nimport { DaffProductReducersState } from '../../reducers/public_api';\n\n/**\n * Resolves product data for product pages, and will only resolve the url after a product request succeeds or fails. This resolver expects a url\n * of the form `some/url/{id}` where `{id}` is the product id.\n */\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class DaffProductPageResolver implements Resolve<Observable<boolean>> {\n  constructor(\n\t\t@Inject(PLATFORM_ID) private platformId: string,\n\t\tprivate store: Store<DaffProductReducersState>,\n    private dispatcher: ActionsSubject,\n\t) {}\n\t\n\tresolve(route: ActivatedRouteSnapshot): Observable<boolean> {\n\t\tthis.store.dispatch(new DaffProductLoad(route.paramMap.get('id')));\n\n\t\treturn isPlatformBrowser(this.platformId) ? of(true) : this.dispatcher.pipe(\n\t\t\tofType(DaffProductActionTypes.ProductLoadSuccessAction, DaffProductActionTypes.ProductLoadFailureAction),\n\t\t\tmapTo(true),\n\t\t\ttake(1)\n\t\t);\n\t}\n}\n","import { DaffProductGridActionTypes, DaffProductGridActions } from '../../actions/product-grid.actions';\nimport { DaffProductGridReducerState } from './product-grid-reducer-state.interface';\nimport { DaffProduct } from '../../models/product';\n\n/**\n * Initial values of the product grid state.\n */\nexport const initialState: DaffProductGridReducerState<any> = {\n  products: [],\n  loading: false,\n  errors: []\n};\n\n/**\n * Reducer function that catches actions and changes/overwrites product grid state.\n * \n * @param state current State of the redux store\n * @param action a product grid action\n * @returns Product grid state\n */\nexport function daffProductGridReducer<T extends DaffProduct>(state = initialState, action: DaffProductGridActions<T>): DaffProductGridReducerState<T> {\n  switch (action.type) {\n    case DaffProductGridActionTypes.ProductGridLoadAction:\n      return {...state, loading: true};\n    case DaffProductGridActionTypes.ProductGridLoadSuccessAction:\n      return {...state, loading: false};\n    case DaffProductGridActionTypes.ProductGridLoadFailureAction:\n      return {...state, \n        loading: false, \n        errors: state.errors.concat(new Array(action.payload))\n      };\n    default:\n      return state;\n  }\n}\n","import { DaffProductReducerState } from './product-reducer-state.interface';\nimport { DaffProductActionTypes, DaffProductActions } from '../../actions/product.actions';\nimport { DaffProduct } from '../../models/product';\n\n/**\n * Initial values of the product state.\n */\nexport const initialState: DaffProductReducerState = {\n  selectedProductId: null,\n  qty: 1,\n  loading: false,\n  errors: []\n};\n\n/**\n * Reducer function that catches actions and changes/overwrites product state.\n * \n * @param state current State of the redux store\n * @param action a product action\n * @returns product state\n */\nexport function daffProductReducer<T extends DaffProduct>(state = initialState, action: DaffProductActions<T>): DaffProductReducerState {\n  switch (action.type) {\n    case DaffProductActionTypes.ProductLoadAction:\n      return {...state, loading: true, selectedProductId: action.payload};\n    case DaffProductActionTypes.ProductLoadSuccessAction:\n      return {...state, loading: false};\n    case DaffProductActionTypes.ProductLoadFailureAction:\n      return {...state, \n        loading: false, \n        errors: state.errors.concat(new Array(action.payload))\n      };\n    case DaffProductActionTypes.UpdateQtyAction:\n      return {...state, qty: action.payload}\n    default:\n      return state;\n  }\n}\n","import { DaffBestSellersActionTypes, DaffBestSellersActions } from '../../actions/best-sellers.actions';\nimport { DaffProduct } from '../../models/product';\nimport { DaffBestSellersReducerState } from './best-sellers-reducer-state.interface';\n\nexport const initialState: DaffBestSellersReducerState = {\n  productIds: [],\n  loading: false,\n  errors: []\n};\n\nexport const resetState: DaffBestSellersReducerState = Object.assign({}, initialState);\n\nexport function daffBestSellersReducer<T extends DaffProduct>(state = initialState, action: DaffBestSellersActions<T>): DaffBestSellersReducerState {\n  switch (action.type) {\n    case DaffBestSellersActionTypes.BestSellersLoadAction:\n      return {...state, loading: true};\n    case DaffBestSellersActionTypes.BestSellersLoadSuccessAction:\n      return {...state, loading: false, productIds: getIds<T>(action.payload)};\n    case DaffBestSellersActionTypes.BestSellersLoadFailureAction:\n      return {...state, \n        loading: false, \n        errors: state.errors.concat(new Array(action.payload))\n      };\n    case DaffBestSellersActionTypes.BestSellersResetAction:\n      return {\n        ...resetState\n      }\n    default:\n      return state;\n  }\n}\n\nfunction getIds<T extends DaffProduct>(products: T[]): string[] {\n  const ids: string[] = new Array();\n\n  products.forEach(product => {\n    ids.push(product.id)\n  });\n\n  return ids;\n}\n","import { EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport { DaffProduct } from '../../models/product';\n\n/**\n * Product Adapter for changing/overwriting entity state.\n */\nexport const daffProductEntitiesAdapter = (() => {\n\tlet cache;\n  return <T extends DaffProduct>(): EntityAdapter<T> =>\n    cache = cache || createEntityAdapter<T>();\n})();","import { EntityState } from '@ngrx/entity';\n\nimport { DaffProductGridActionTypes, DaffProductGridActions } from '../../actions/product-grid.actions';\nimport { DaffProductActionTypes, DaffProductActions } from '../../actions/product.actions';\nimport { DaffBestSellersActionTypes, DaffBestSellersActions } from '../../actions/best-sellers.actions';\nimport { daffProductEntitiesAdapter } from './product-entities-reducer-adapter';\nimport { DaffProduct } from '../../models/product';\n\n/**\n * Reducer function that catches actions and changes/overwrites product entities state.\n * \n * @param state current State of the redux store\n * @param action ProductGrid, BestSellers, or Product actions\n * @returns Product entities state\n */\nexport function daffProductEntitiesReducer<T extends DaffProduct>(\n  state = daffProductEntitiesAdapter<T>().getInitialState(), \n  action: DaffProductGridActions<T> | DaffBestSellersActions<T> | DaffProductActions<T>): EntityState<T> {\n\tconst adapter = daffProductEntitiesAdapter<T>();\n  switch (action.type) {\n    case DaffProductGridActionTypes.ProductGridLoadSuccessAction:\n      return adapter.upsertMany(action.payload, state);\n    case DaffBestSellersActionTypes.BestSellersLoadSuccessAction:\n      return adapter.upsertMany(action.payload, state);\n    case DaffProductActionTypes.ProductLoadSuccessAction:\n      return adapter.upsertOne(\n        { \n          id: action.payload.id, \n          ...action.payload\n        },\n        state\n      );\n    case DaffProductGridActionTypes.ProductGridResetAction:\n      return adapter.removeAll(state);\n    default:\n      return state;\n  }\n}\n","import { EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport { DaffConfigurableProductEntity } from './configurable-product-entity';\n\n/**\n * Configurable Product Applied Attributes Adapter for changing/overwriting entity state.\n */\nexport const daffConfigurableProductAppliedAttributesEntitiesAdapter = (() => {\n\tlet cache;\n  return (): EntityAdapter<DaffConfigurableProductEntity> =>\n    cache = cache || createEntityAdapter<DaffConfigurableProductEntity>();\n})();","import { EntityState } from '@ngrx/entity';\n\nimport { DaffProductGridActionTypes, DaffProductGridActions } from '../../actions/product-grid.actions';\nimport { DaffProductActionTypes, DaffProductActions } from '../../actions/product.actions';\nimport { DaffBestSellersActionTypes, DaffBestSellersActions } from '../../actions/best-sellers.actions';\nimport { daffConfigurableProductAppliedAttributesEntitiesAdapter } from './configurable-product-entities-reducer-adapter';\nimport { DaffProduct, DaffProductTypeEnum } from '../../models/product';\nimport { DaffConfigurableProductActions, DaffConfigurableProductActionTypes } from '../../actions/configurable-product.actions';\nimport { DaffConfigurableProduct } from '../../models/configurable-product';\nimport { DaffConfigurableProductEntity, DaffConfigurableProductEntityAttribute } from './configurable-product-entity';\n\n/**\n * Reducer function that catches actions and changes/overwrites product entities state.\n * \n * @param state current State of the redux store\n * @param action ProductGrid, BestSellers, Product, or Configurable Product actions\n * @returns Product entities state\n */\nexport function daffConfigurableProductEntitiesReducer<T extends DaffProduct, V extends DaffConfigurableProduct>(\n  state = daffConfigurableProductAppliedAttributesEntitiesAdapter().getInitialState(), \n  action: DaffProductGridActions<T> | DaffBestSellersActions<T> | DaffProductActions<T> | DaffConfigurableProductActions<V>): EntityState<DaffConfigurableProductEntity> {\n\tconst adapter = daffConfigurableProductAppliedAttributesEntitiesAdapter();\n  switch (action.type) {\n    case DaffProductGridActionTypes.ProductGridLoadSuccessAction:\n\t\tcase DaffBestSellersActionTypes.BestSellersLoadSuccessAction:\n\t\t\treturn adapter.upsertMany(\n\t\t\t\taction.payload\n\t\t\t\t\t.filter(product => product.type === DaffProductTypeEnum.Configurable)\n\t\t\t\t\t.map(buildConfigurableProductAppliedAttributesEntity), \n\t\t\t\tstate\n\t\t\t);\n    case DaffProductActionTypes.ProductLoadSuccessAction:\n\t\t\tif(action.payload.type === DaffProductTypeEnum.Configurable) {\n\t\t\t\treturn adapter.upsertOne(\n\t\t\t\t\tbuildConfigurableProductAppliedAttributesEntity(action.payload),\n\t\t\t\t\tstate\n\t\t\t\t);\n\t\t\t};\n\t\t\treturn state;\n\t\tcase DaffConfigurableProductActionTypes.ConfigurableProductApplyAttributeAction:\n\t\t\treturn adapter.upsertOne(\n\t\t\t\t{\n\t\t\t\t\tid: action.id,\n\t\t\t\t\tattributes: applyAttribute(state.entities[action.id].attributes, action.attributeId, action.attributeValue),\n\t\t\t\t},\n\t\t\t\tstate\n\t\t\t);\n\t\tcase DaffConfigurableProductActionTypes.ConfigurableProductRemoveAttributeAction:\n\t\t\treturn adapter.upsertOne(\n\t\t\t\t{\n\t\t\t\t\tid: action.id,\n\t\t\t\t\tattributes: removeAttribute(state.entities[action.id].attributes, action.attributeId)\n\t\t\t\t},\n\t\t\t\tstate\n\t\t\t);\n\t\tcase DaffConfigurableProductActionTypes.ConfigurableProductToggleAttributeAction:\n\t\t\treturn adapter.upsertOne(\n\t\t\t\t{\n\t\t\t\t\tid: action.id,\n\t\t\t\t\tattributes: isAttributeSelected(state.entities[action.id].attributes, action.attributeId, action.attributeValue) ?\n\t\t\t\t\t\tremoveAttribute(state.entities[action.id].attributes, action.attributeId) :\n\t\t\t\t\t\tapplyAttribute(state.entities[action.id].attributes, action.attributeId, action.attributeValue)\n\t\t\t\t},\n\t\t\t\tstate\n\t\t\t);\n    default:\n      return state;\n  }\n}\n\nfunction buildConfigurableProductAppliedAttributesEntity(product: DaffProduct): DaffConfigurableProductEntity {\n\treturn {\n\t\tid: product.id,\n\t\tattributes: []\n\t}\n}\n\nfunction applyAttribute(currentAttributes: DaffConfigurableProductEntityAttribute[], appliedAttributeCode: string, appliedAttributeValue: string): DaffConfigurableProductEntityAttribute[] {\n\tconst attributeIndex = currentAttributes.findIndex(attribute => attribute.code === appliedAttributeCode);\n\tconst retainedAttributes = attributeIndex > -1 ? currentAttributes.slice(0, attributeIndex) : currentAttributes;\n\n\treturn [\n\t\t...retainedAttributes,\n\t\t{\n\t\t\tcode: appliedAttributeCode,\n\t\t\tvalue: appliedAttributeValue\n\t\t}\n\t]\n}\n\nfunction removeAttribute(currentAttributes: DaffConfigurableProductEntityAttribute[], appliedAttributeCode: string): DaffConfigurableProductEntityAttribute[] {\n\tconst index = currentAttributes.findIndex(attribute => attribute.code === appliedAttributeCode);\n\n\treturn index > -1 ? currentAttributes.slice(0, index) : currentAttributes;\n}\n\nfunction isAttributeSelected(currentAttributes: DaffConfigurableProductEntityAttribute[], attributeCode: string, attributeValue: string): boolean {\n\tconst index = currentAttributes.findIndex(attribute => attribute.code === attributeCode);\n\n\treturn index > -1 && currentAttributes[index].value === attributeValue;\n}\n","import { EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport { DaffCompositeProductEntity } from './composite-product-entity';\n\n/**\n * Composite Product Item Options Adapter for changing/overwriting entity state.\n */\nexport const daffCompositeProductAppliedOptionsEntitiesAdapter = (() => {\n\tlet cache;\n  return (): EntityAdapter<DaffCompositeProductEntity> =>\n    cache = cache || createEntityAdapter<DaffCompositeProductEntity>();\n})();\n","import { EntityState } from '@ngrx/entity';\n\nimport { DaffProductGridActionTypes, DaffProductGridActions } from '../../actions/product-grid.actions';\nimport { DaffProductActionTypes, DaffProductActions } from '../../actions/product.actions';\nimport { DaffBestSellersActionTypes, DaffBestSellersActions } from '../../actions/best-sellers.actions';\nimport { daffCompositeProductAppliedOptionsEntitiesAdapter } from './composite-product-entities-reducer-adapter';\nimport { DaffProduct, DaffProductTypeEnum } from '../../models/product';\nimport { DaffCompositeProductActions, DaffCompositeProductActionTypes } from '../../actions/composite-product.actions';\nimport { DaffCompositeProduct } from '../../models/composite-product';\nimport { DaffCompositeProductEntity } from './composite-product-entity';\nimport { DaffCompositeProductItem } from '../../models/composite-product-item';\nimport { DaffCompositeConfigurationItem } from '../../models/composite-configuration-item';\n\n/**\n * Reducer function that catches actions and changes/overwrites composite product entities state.\n * \n * @param state current State of the redux store\n * @param action ProductGrid, BestSellers, Product, or Composite Product actions\n * @returns Product entities state\n */\nexport function daffCompositeProductEntitiesReducer<T extends DaffProduct, V extends DaffCompositeProduct>(\n  state = daffCompositeProductAppliedOptionsEntitiesAdapter().getInitialState(), \n  action: DaffProductGridActions<T> | DaffBestSellersActions<T> | DaffProductActions<T> | DaffCompositeProductActions<V>): EntityState<DaffCompositeProductEntity> {\n\tconst adapter = daffCompositeProductAppliedOptionsEntitiesAdapter();\n  switch (action.type) {\n    case DaffProductGridActionTypes.ProductGridLoadSuccessAction:\n\t\tcase DaffBestSellersActionTypes.BestSellersLoadSuccessAction:\n\t\t\treturn adapter.upsertMany(\n\t\t\t\taction.payload\n\t\t\t\t\t.filter(product => product.type === DaffProductTypeEnum.Composite)\n\t\t\t\t\t.map(product => buildCompositeProductAppliedOptionsEntity(<V><unknown>product)), \n\t\t\t\tstate\n\t\t\t);\n    case DaffProductActionTypes.ProductLoadSuccessAction:\n\t\t\tif(action.payload.type === DaffProductTypeEnum.Composite) {\n\t\t\t\treturn adapter.upsertOne(\n\t\t\t\t\tbuildCompositeProductAppliedOptionsEntity(<V><unknown>action.payload),\n\t\t\t\t\tstate\n\t\t\t\t);\n\t\t\t};\n\t\t\treturn state;\n\t\tcase DaffCompositeProductActionTypes.CompositeProductApplyOptionAction:\n\t\t\treturn adapter.upsertOne(\n\t\t\t\t{\n\t\t\t\t\tid: action.id,\n\t\t\t\t\titems: {\n\t\t\t\t\t\t...state.entities[action.id].items,\n\t\t\t\t\t\t[action.itemId]: {\n\t\t\t\t\t\t\tvalue: action.optionId,\n\t\t\t\t\t\t\tqty: action.qty ? action.qty : 1\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstate\n\t\t\t);\n    default:\n      return state;\n  }\n}\n\nfunction buildCompositeProductAppliedOptionsEntity(product: DaffCompositeProduct): DaffCompositeProductEntity {\n\treturn {\n\t\tid: product.id,\n\t\titems: product.items.reduce((acc, item) => ({\n\t\t\t...acc,\n\t\t\t[item.id]: getDefaultOption(item)\n\t\t}), {})\n\t}\n}\n\n/**\n * Sets the default item option to the specified default option if it is in stock.\n * Does not set a default option if a default is not specified.\n * Does not set a default option but does set a default qty if the default is out of stock.\n * @param item a DaffCompositeProductItem\n */\nfunction getDefaultOption(item: DaffCompositeProductItem): DaffCompositeConfigurationItem {\n\tconst defaultOptionIndex = item.options.findIndex(option => option.is_default);\n\n\tif(defaultOptionIndex > -1) {\n\t\treturn {\n\t\t\tvalue: item.options[defaultOptionIndex].in_stock ? item.options[defaultOptionIndex].id : null,\n\t\t\tqty: item.options[defaultOptionIndex].quantity\n\t\t}\n\t} else {\n\t\treturn { value: null, qty: null };\n\t}\n}\n","import { daffProductGridReducer } from './product-grid/product-grid.reducer';\nimport { daffProductReducer } from './product/product.reducer';\nimport { daffBestSellersReducer } from './best-sellers/best-sellers.reducer';\nimport { daffProductEntitiesReducer } from './product-entities/product-entities.reducer';\nimport { daffConfigurableProductEntitiesReducer } from './configurable-product-entities/configurable-product-entities.reducer';\nimport { daffCompositeProductEntitiesReducer } from './composite-product-entities/composite-product-entities.reducer';\n\n/**\n * Returns state values from all product related reducers.\n */\nexport const daffProductReducers = {\n\tproducts: daffProductEntitiesReducer,\n\tproductGrid: daffProductGridReducer,\n\tproduct: daffProductReducer,\n\tbestSellers: daffBestSellersReducer,\n\tconfigurableProductAttributes: daffConfigurableProductEntitiesReducer,\n\tcompositeProductOptions: daffCompositeProductEntitiesReducer\n}\n","import { Dictionary } from '@ngrx/entity';\nimport { DaffCompositeConfigurationItem } from '../../models/composite-configuration-item';\n\nexport interface DaffCompositeProductEntity {\n\tid: string;\n\titems: Dictionary<DaffCompositeConfigurationItem>;\n}\n","import { createFeatureSelector, MemoizedSelector } from '@ngrx/store';\n\nimport { DaffProductReducersState } from '../reducers/product-reducers-state.interface';\nimport { DaffProduct } from '../models/product';\n\nexport interface DaffProductFeatureMemoizedSelector<T extends DaffProduct = DaffProduct> {\n\tselectProductState: MemoizedSelector<object, DaffProductReducersState<T>>;\n}\n\nexport const getDaffProductFeatureSelector = (() => {\n\tlet cache;\n\treturn <T extends DaffProduct>(): DaffProductFeatureMemoizedSelector<T> => cache = cache \n\t\t? cache \n\t\t: { selectProductState: createFeatureSelector<DaffProductReducersState<T>>('product') };\n})();\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\n\nimport { DaffProductReducersState } from '../../reducers/product-reducers-state.interface';\nimport { getDaffProductFeatureSelector } from '../product-feature.selector';\nimport { DaffProductReducerState } from '../../reducers/product/product-reducer-state.interface';\nimport { DaffProduct } from '../../models/product';\n\nexport interface DaffProductPageMemoizedSelectors<T extends DaffProduct = DaffProduct> {\n\tselectSelectedProductState: MemoizedSelector<object, DaffProductReducerState>;\n\tselectSelectedProductId: MemoizedSelector<object, string>;\n\tselectSelectedProductQty: MemoizedSelector<object, number>;\n\tselectSelectedProductLoadingState: MemoizedSelector<object, boolean>;\n\tselectSelectedProduct: MemoizedSelector<object, T>;\n}\n\nconst createProductPageSelectors = <T extends DaffProduct>(): DaffProductPageMemoizedSelectors<T> => {\n\n\tconst {\n\t\tselectProductState\n\t} = getDaffProductFeatureSelector<T>();\n\n\t/**\n\t * Selector for product state.\n\t */\n\tconst selectSelectedProductState = createSelector(\n\t\tselectProductState,\n\t\t(state: DaffProductReducersState<T>) => state.product\n\t);\n\n\t/**\n\t * Selector for the selected product's ID.\n\t * @deprecated\n\t */\n\tconst selectSelectedProductId = createSelector(\n\t\tselectSelectedProductState,\n\t\t(state: DaffProductReducerState) => state.selectedProductId\n\t);\n\n\t/**\n\t * Selector for the quantity of the product.\n\t * @deprecated\n\t */\n\tconst selectSelectedProductQty = createSelector(\n\t\tselectSelectedProductState,\n\t\t(state: DaffProductReducerState) => state.qty\n\t);\n\n\t/**\n\t * Selector for the loading state of the selected product.\n\t */\n\tconst selectSelectedProductLoadingState = createSelector(\n\t\tselectSelectedProductState,\n\t\t(state: DaffProductReducerState) => state.loading\n\t);\n\n\t/**\n\t * Selects the selected product from product state and the selected product ID.\n\t * @deprecated use selectProduct entities selector instead.\n\t */\n\tconst selectSelectedProduct = createSelector(\n\t\tselectProductState,\n\t\tselectSelectedProductId,\n\t\t(state: DaffProductReducersState<T>, id: string) => state.products.entities[id]\n\t);\n\n\treturn { \n\t\tselectSelectedProductState,\n\t\tselectSelectedProductId,\n\t\tselectSelectedProductQty,\n\t\tselectSelectedProductLoadingState,\n\t\tselectSelectedProduct\n\t}\n}\n\nexport const getDaffProductPageSelectors = (() => {\n\tlet cache;\n\treturn <T extends DaffProduct>(): DaffProductPageMemoizedSelectors<T> => cache = cache \n\t\t? cache \n\t\t: createProductPageSelectors<T>();\n})();\n","import { createSelector, MemoizedSelector, MemoizedSelectorWithProps } from '@ngrx/store';\nimport { EntityState } from '@ngrx/entity';\nimport { daffSubtract } from '@daffodil/core';\n\nimport { daffProductEntitiesAdapter } from '../../reducers/product-entities/product-entities-reducer-adapter';\nimport { getDaffProductFeatureSelector } from '../product-feature.selector';\nimport { DaffProductReducersState } from '../../reducers/product-reducers-state.interface';\nimport { DaffProduct } from '../../models/product';\n\nexport interface DaffProductEntitiesMemoizedSelectors<T extends DaffProduct = DaffProduct> {\n\tselectProductEntitiesState: MemoizedSelector<object, EntityState<T>>;\n\tselectProductIds: MemoizedSelector<object, EntityState<T>['ids']>;\n\tselectProductEntities: MemoizedSelector<object, EntityState<T>['entities']>;\n\tselectAllProducts: MemoizedSelector<object, T[]>;\n\tselectProductTotal: MemoizedSelector<object, number>;\n\tselectProduct: MemoizedSelectorWithProps<object, object, T>;\n\tselectProductPrice: MemoizedSelectorWithProps<object, object, number>;\n\tselectProductDiscountAmount: MemoizedSelectorWithProps<object, object, number>;\n\tselectProductDiscountedPrice: MemoizedSelectorWithProps<object, object, number>;\n\tselectProductDiscountPercent: MemoizedSelectorWithProps<object, object, number>;\n\tselectProductHasDiscount: MemoizedSelectorWithProps<object, object, boolean>;\n\tselectIsProductOutOfStock: MemoizedSelectorWithProps<object, object, boolean>;\n}\n\nconst createProductEntitiesSelectors = <T extends DaffProduct>(): DaffProductEntitiesMemoizedSelectors<T> => {\n\tconst {\n\t\tselectProductState\n\t} = getDaffProductFeatureSelector<T>();\n\tconst adapterSelectors = daffProductEntitiesAdapter<T>().getSelectors();\n\t/**\n\t * Product Entities State\n\t */\n\tconst selectProductEntitiesState = createSelector(\n\t\tselectProductState,\n\t\t(state: DaffProductReducersState<T>) => state.products\n\t);\n\n\t/**\n\t * Adapters created with @ngrx/entity generate\n\t * commonly used selector functions including\n\t * getting all ids in the record set, a dictionary\n\t * of the records by id, an array of records and\n\t * the total number of records. This reduces boilerplate\n\t * in selecting records from the entity state.\n\t */\n\t/**\n\t * Selector for product IDs.\n\t */\n\tconst selectProductIds = createSelector(\n\t\tselectProductEntitiesState,\n\t\tadapterSelectors.selectIds\n\t);\n\n\t/**\n\t * Selector for all product entities (see ngrx/entity).\n\t */\n\tconst selectProductEntities = createSelector(\n\t\tselectProductEntitiesState,\n\t\tadapterSelectors.selectEntities\n\t);\n\n\t/**\n\t * Selector for all products on state.\n\t */\n\tconst selectAllProducts = createSelector(\n\t\tselectProductEntitiesState,\n\t\tadapterSelectors.selectAll\n\t);\n\n\t/**\n\t * Selector for the total number of products.\n\t */\n\tconst selectProductTotal = createSelector(\n\t\tselectProductEntitiesState,\n\t\tadapterSelectors.selectTotal\n\t);\n\n\tconst selectProduct = createSelector(\n\t\tselectProductEntities,\n\t\t(products, props) => products[props.id]\n\t);\n\n\tconst selectProductPrice = createSelector(\n\t\tselectProductEntities,\n\t\t(products, props) => {\n\t\t\tconst product = selectProduct.projector(products, { id: props.id });\n\n\t\t\t//todo: use optional chaining when possible\n\t\t\treturn product && product.price || null;\n\t\t}\n\t)\n\n\tconst selectProductDiscountAmount = createSelector(\n\t\tselectProductEntities,\n\t\t(products, props) => {\n\t\t\tconst product = selectProduct.projector(products, { id: props.id });\n\n\t\t\t//todo: use optional chaining when possible\n\t\t\treturn (product.discount && product.discount.amount) || 0;\n\t\t}\n\t);\n\n\tconst selectProductDiscountedPrice = createSelector(\n\t\tselectProductEntities,\n\t\t(products, props) => {\n\t\t\tconst price = selectProductPrice.projector(products, { id: props.id });\n\t\t\tconst discountAmount = selectProductDiscountAmount.projector(products, { id: props.id });\n\n\t\t\treturn daffSubtract(price, discountAmount);\n\t\t}\n\t)\n\n\t//todo use optional chaining when possible.\n\tconst selectProductDiscountPercent = createSelector(\n\t\tselectProductEntities,\n\t\t(products, props) => {\n\t\t\tconst product = selectProduct.projector(products, { id: props.id });\n\n\t\t\treturn (product.discount && product.discount.percent) || 0;\n\t\t}\n\t);\n\n\tconst selectProductHasDiscount = createSelector(\n\t\tselectProductEntities,\n\t\t(products, props) => {\n\t\t\tconst discountAmount = selectProductDiscountAmount.projector(products, { id: props.id });\n\n\t\t\treturn !!discountAmount;\n\t\t}\n\t);\n\n\tconst selectIsProductOutOfStock = createSelector(\n\t\tselectProductEntities,\n\t\t(products, props) => {\n\t\t\tconst product = selectProduct.projector(products, { id: props.id });\n\t\t\t\n\t\t\treturn product ? !product.in_stock : null;\n\t\t}\n\t);\n\n\treturn { \n\t\tselectProductEntitiesState,\n\t\tselectProductIds,\n\t\tselectProductEntities,\n\t\tselectAllProducts,\n\t\tselectProductTotal,\n\t\tselectProduct,\n\t\tselectProductPrice,\n\t\tselectProductDiscountAmount,\n\t\tselectProductDiscountedPrice,\n\t\tselectProductDiscountPercent,\n\t\tselectProductHasDiscount,\n\t\tselectIsProductOutOfStock\n\t}\n}\n\nexport const getDaffProductEntitiesSelectors = (() => {\n\tlet cache;\n\treturn <T extends DaffProduct>(): DaffProductEntitiesMemoizedSelectors<T> => cache = cache \n\t\t? cache \n\t\t: createProductEntitiesSelectors<T>();\n})()\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\n\nimport { getDaffProductFeatureSelector } from '../product-feature.selector';\nimport { DaffProductReducersState } from '../../reducers/product-reducers-state.interface';\nimport { DaffBestSellersReducerState } from '../../reducers/best-sellers/best-sellers-reducer-state.interface';\nimport { getDaffProductEntitiesSelectors } from '../product-entities/product-entities.selectors';\nimport { DaffProduct } from '../../models/product';\n\nexport interface DaffBestSellersMemoizedSelectors<T extends DaffProduct = DaffProduct> {\n\tselectBestSellersState: MemoizedSelector<object, DaffBestSellersReducerState>;\n\tselectBestSellersLoadingState: MemoizedSelector<object, boolean>;\n\tselectBestSellersIdsState: MemoizedSelector<object, string[]>;\n\tselectBestSellersProducts: MemoizedSelector<object, T[]>;\n}\n\nconst createBestSellersSelectors = <T extends DaffProduct>(): DaffBestSellersMemoizedSelectors<T> => {\n\tconst {\n\t\tselectAllProducts\n\t} = getDaffProductEntitiesSelectors<T>();\n\tconst {\n\t\tselectProductState\n\t} = getDaffProductFeatureSelector<T>();\n\t/**\n\t * Selector for Best Seller State\n\t */\n\tconst selectBestSellersState = createSelector(\n\t\tselectProductState,\n\t\t(state: DaffProductReducersState<T>) => state.bestSellers\n\t);\n\n\t/**\n\t * Selector for the loading state of best selling products.\n\t */\n\tconst selectBestSellersLoadingState = createSelector(\n\t\tselectBestSellersState,\n\t\t(state: DaffBestSellersReducerState) => state.loading\n\t);\n\n\t/**\n\t * Selector for the IDs of best selling products.\n\t */\n\tconst selectBestSellersIdsState = createSelector(\n\t\tselectBestSellersState,\n\t\t(state: DaffBestSellersReducerState) => state.productIds\n\t);\n\n\t/**\n\t * Selector for the best selling products.\n\t */\n\tconst selectBestSellersProducts = createSelector(\n\t\tselectBestSellersIdsState,\n\t\tselectAllProducts,\n\t\t(ids: string[], products: T[]) => products.filter(product => ids.indexOf(product.id) > -1)\n\t)\n\n\treturn { \n\t\tselectBestSellersState,\n\t\tselectBestSellersLoadingState,\n\t\tselectBestSellersIdsState,\n\t\tselectBestSellersProducts\n\t}\n}\n\nexport const getDaffBestSellersSelectors = (() => {\n\tlet cache;\n\treturn <T extends DaffProduct>(): DaffBestSellersMemoizedSelectors<T> => cache = cache \n\t\t? cache \n\t\t: createBestSellersSelectors<T>();\n})();\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\n\nimport { DaffProductGridReducerState } from '../../reducers/product-grid/product-grid-reducer-state.interface';\nimport { DaffProductReducersState } from '../../reducers/product-reducers-state.interface';\nimport { getDaffProductFeatureSelector } from '../product-feature.selector';\nimport { DaffProduct } from '../../models/product';\n\nexport interface DaffProductGridMemoizedSelectors<T extends DaffProduct = DaffProduct> {\n\tselectProductGridState: MemoizedSelector<object, DaffProductGridReducerState<T>>;\n\tselectProductGridLoadingState: MemoizedSelector<object, boolean>;\n}\n\nconst createProductGridSelectors = <T extends DaffProduct>(): DaffProductGridMemoizedSelectors<T> => {\n\tconst {\n\t\tselectProductState\n\t} = getDaffProductFeatureSelector<T>();\n\t/**\n\t * Selector for Product Grid state.\n\t */\n\tconst selectProductGridState = createSelector(\n\t\tselectProductState,\n\t\t(state: DaffProductReducersState<T>) => state.productGrid\n\t);\n\n\t/**\n\t * Selector for product grid loading state.\n\t */\n\tconst selectProductGridLoadingState = createSelector(\n\t\tselectProductGridState,\n\t\t(state: DaffProductGridReducerState<T>) => state.loading\n\t);\n\n\treturn { \n\t\tselectProductGridState,\n\t\tselectProductGridLoadingState\n\t}\n}\n\nexport const getDaffProductGridSelectors = (() => {\n\tlet cache;\n\treturn <T extends DaffProduct>(): DaffProductGridMemoizedSelectors<T> => cache = cache \n\t\t? cache \n\t\t: createProductGridSelectors<T>();\n})();\n","import { createSelector, MemoizedSelector, MemoizedSelectorWithProps } from '@ngrx/store';\nimport { EntityState, Dictionary } from '@ngrx/entity';\n\nimport { getDaffProductFeatureSelector } from '../product-feature.selector';\nimport { DaffProductReducersState } from '../../reducers/product-reducers-state.interface';\nimport { DaffProduct } from '../../models/product';\nimport { daffConfigurableProductAppliedAttributesEntitiesAdapter } from '../../reducers/configurable-product-entities/configurable-product-entities-reducer-adapter';\nimport { DaffConfigurableProductEntity, DaffConfigurableProductEntityAttribute } from '../../reducers/configurable-product-entities/configurable-product-entity';\n\nexport interface DaffConfigurableProductEntitiesMemoizedSelectors {\n\tselectConfigurableProductAppliedAttributesEntitiesState: MemoizedSelector<object, EntityState<DaffConfigurableProductEntity>>;\n\tselectConfigurableProductIds: MemoizedSelector<object, EntityState<DaffConfigurableProductEntity>['ids']>;\n\tselectConfigurableProductAppliedAttributesEntities: MemoizedSelector<object, EntityState<DaffConfigurableProductEntity>['entities']>;\n\tselectConfigurableProductTotal: MemoizedSelector<object, number>;\n\tselectConfigurableProductAppliedAttributes: MemoizedSelectorWithProps<object, object, DaffConfigurableProductEntityAttribute[]>;\n\tselectConfigurableProductAppliedAttributesAsDictionary: MemoizedSelectorWithProps<object, object, Dictionary<string>>;\n}\n\nconst createConfigurableProductAppliedAttributesEntitiesSelectors = <T extends DaffProduct>(): DaffConfigurableProductEntitiesMemoizedSelectors => {\n\tconst {\n\t\tselectProductState\n\t} = getDaffProductFeatureSelector<T>();\n\tconst adapterSelectors = daffConfigurableProductAppliedAttributesEntitiesAdapter().getSelectors();\n\t/**\n\t * Configurable Product Entities State\n\t */\n\tconst selectConfigurableProductAppliedAttributesEntitiesState = createSelector(\n\t\tselectProductState,\n\t\t(state: DaffProductReducersState<T>) => state.configurableProductAttributes\n\t);\n\n\t/**\n\t * Selector for configurable product IDs.\n\t */\n\tconst selectConfigurableProductIds = createSelector(\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\tadapterSelectors.selectIds\n\t);\n\n\t/**\n\t * Selector for all configurable product applied attributes as entities (see ngrx/entity).\n\t */\n\tconst selectConfigurableProductAppliedAttributesEntities = createSelector(\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\tadapterSelectors.selectEntities\n\t);\n\n\t/**\n\t * Selector for the total number of configurable products.\n\t */\n\tconst selectConfigurableProductTotal = createSelector(\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\tadapterSelectors.selectTotal\n\t);\n\n\t/**\n\t * Selector for the applied attributes of a particular configurable product.\n\t */\n\tconst selectConfigurableProductAppliedAttributes = createSelector(\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\t(products, props) => products.entities[props.id].attributes\n\t);\n\n\tconst selectConfigurableProductAppliedAttributesAsDictionary = createSelector(\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\t(products, props) => selectConfigurableProductAppliedAttributes.projector(products, { id: props.id }).reduce((acc, attribute) => ({\n\t\t\t...acc,\n\t\t\t[attribute.code]: attribute.value\n\t\t}), {})\n\t)\n\n\treturn { \n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\tselectConfigurableProductIds,\n\t\tselectConfigurableProductAppliedAttributesEntities,\n\t\tselectConfigurableProductTotal,\n\t\tselectConfigurableProductAppliedAttributes,\n\t\tselectConfigurableProductAppliedAttributesAsDictionary\n\t}\n}\n\nexport const getDaffConfigurableProductEntitiesSelectors = (() => {\n\tlet cache;\n\treturn <T extends DaffProduct>(): DaffConfigurableProductEntitiesMemoizedSelectors => cache = cache \n\t\t? cache \n\t\t: createConfigurableProductAppliedAttributesEntitiesSelectors<T>();\n})()\n","import { createSelector, MemoizedSelectorWithProps } from '@ngrx/store';\n\nimport { daffSubtract } from '@daffodil/core';\n\nimport { DaffProductTypeEnum } from '../../models/product';\nimport { Dictionary } from '@ngrx/entity';\nimport { getDaffConfigurableProductEntitiesSelectors } from '../configurable-product-entities/configurable-product-entities.selectors';\nimport { getDaffProductEntitiesSelectors } from '../product-entities/product-entities.selectors';\nimport { DaffConfigurableProductVariant, DaffConfigurableProduct, DaffConfigurableProductAttribute } from '../../models/configurable-product';\nimport { DaffConfigurableProductEntityAttribute } from '../../reducers/configurable-product-entities/configurable-product-entity';\n\nexport interface DaffConfigurableProductMemoizedSelectors {\n\tselectAllConfigurableProductAttributes: MemoizedSelectorWithProps<object, object, Dictionary<string[]>>;\n\tselectAllConfigurableProductVariants: MemoizedSelectorWithProps<object, object, DaffConfigurableProductVariant[]>;\n\tselectMatchingConfigurableProductVariants: MemoizedSelectorWithProps<object, object, DaffConfigurableProductVariant[]>;\n\tselectConfigurableProductPrices: MemoizedSelectorWithProps<object, object, number[]>;\n\tselectConfigurableProductDiscountedPrices: MemoizedSelectorWithProps<object, object, number[]>;\n\tselectConfigurableProductPercentDiscounts: MemoizedSelectorWithProps<object, object, number[]>;\n\tselectConfigurableProductHasDiscount: MemoizedSelectorWithProps<object, object, boolean>;\n\tselectConfigurableProductMinimumPrice: MemoizedSelectorWithProps<object, object, number>;\n\tselectConfigurableProductMaximumPrice: MemoizedSelectorWithProps<object, object, number>;\n\tselectConfigurableProductMinimumDiscountedPrice: MemoizedSelectorWithProps<object, object, number>;\n\tselectConfigurableProductMaximumDiscountedPrice: MemoizedSelectorWithProps<object, object, number>;\n\tselectConfigurableProductMinimumPercentDiscount: MemoizedSelectorWithProps<object, object, number>;\n\tselectConfigurableProductMaximumPercentDiscount: MemoizedSelectorWithProps<object, object, number>;\n\tisConfigurablePriceRanged: MemoizedSelectorWithProps<object, object, boolean>;\n\tselectSelectableConfigurableProductAttributes: MemoizedSelectorWithProps<object, object, Dictionary<string[]>>;\n}\n\nconst createConfigurableProductSelectors = (): DaffConfigurableProductMemoizedSelectors => {\n\n\tconst {\n\t\tselectConfigurableProductAppliedAttributes,\n\t\tselectConfigurableProductAppliedAttributesEntitiesState\n\t} = getDaffConfigurableProductEntitiesSelectors();\n\n\tconst {\n\t\tselectProductEntities,\n\t\tselectProduct\n\t} = getDaffProductEntitiesSelectors();\n\n\t/**\n\t * Selector for all variants of the product.\n\t */\n\tconst selectAllConfigurableProductVariants = createSelector(\n\t\tselectProductEntities,\n\t\t(products, props) => {\n\t\t\tconst product = <DaffConfigurableProduct>selectProduct.projector(products, { id: props.id });\n\t\t\tif(!product || product.type !== DaffProductTypeEnum.Configurable) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\treturn product.variants;\n\t\t}\n\t);\n\n\t/**\n\t * Selector for the variants of the product that match the currently applied attributes.\n\t */\n\tconst selectMatchingConfigurableProductVariants = createSelector(\n\t\tselectProductEntities,\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\t(products, appliedAttributesEntities, props) => {\n\t\t\tconst product = <DaffConfigurableProduct>selectProduct.projector(products, { id: props.id });\n\t\t\tif(!product || product.type !== DaffProductTypeEnum.Configurable) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tconst appliedAttributes = selectConfigurableProductAppliedAttributes.projector(appliedAttributesEntities, { id: props.id });\n\t\t\treturn product.variants.filter(variant => isVariantAvailable(appliedAttributes, variant))\n\t\t}\n\t);\n\n\t/**\n\t * Selector for the range of price for current configuration of the configurable product.\n\t */\n\tconst selectConfigurableProductPrices = createSelector(\n\t\tselectProductEntities,\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\t(products, appliedAttributesEntities, props) => {\n\t\t\treturn selectMatchingConfigurableProductVariants.projector(products, appliedAttributesEntities, { id: props.id })\n\t\t\t\t.map(variant => variant.price);\n\t\t}\n\t);\n\n\t/**\n\t * Selector for the range of discounts for current configuration of the configurable product.\n\t */\n\tconst selectConfigurableProductDiscountedPrices = createSelector(\n\t\tselectProductEntities,\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\t(products, appliedAttributesEntities, props) => {\n\t\t\treturn selectMatchingConfigurableProductVariants.projector(products, appliedAttributesEntities, { id: props.id })\n\t\t\t\t.map(variant => variant.discount ? daffSubtract(variant.price, variant.discount.amount) : variant.price);\n\t\t}\n\t);\n\n\t/**\n\t * Selector for the range of percent discounts for current configuration of the configurable product.\n\t */\n\tconst selectConfigurableProductPercentDiscounts = createSelector(\n\t\tselectProductEntities,\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\t(products, appliedAttributesEntities, props) => {\n\t\t\treturn selectMatchingConfigurableProductVariants.projector(products, appliedAttributesEntities, { id: props.id })\n\t\t\t\t.map(variant => variant.discount && variant.discount.percent);\n\t\t}\n\t);\n\n\t/**\n\t * Selector that determines whether any of the variants for the current configuration of the configurable product has a discount.\n\t */\n\tconst selectConfigurableProductHasDiscount = createSelector(\n\t\tselectProductEntities,\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\t(products, appliedAttributesEntities, props) => {\n\t\t\treturn selectMatchingConfigurableProductVariants.projector(products, appliedAttributesEntities, { id: props.id })\n\t\t\t\t.reduce((acc, variant) => acc || (variant.discount && variant.discount.amount > 0), false);\n\t\t}\n\t)\n\n\t/**\n\t * Selector for the minimum price in the range of configurable product variant prices.\n\t */\n\tconst selectConfigurableProductMinimumPrice = createSelector(\n\t\tselectProductEntities,\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\t(products, appliedAttributesEntities, props) => getMinimumPrice(\n\t\t\tselectConfigurableProductPrices.projector(products, appliedAttributesEntities, { id: props.id })\n\t\t)\n\t)\n\n\t/**\n\t * Selector for the maximum price in the range of configurable product variant prices.\n\t */\n\tconst selectConfigurableProductMaximumPrice = createSelector(\n\t\tselectProductEntities,\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\t(products, appliedAttributesEntities, props) => getMaximumPrice(\n\t\t\tselectConfigurableProductPrices.projector(products, appliedAttributesEntities, { id: props.id })\n\t\t)\n\t)\n\n\t/**\n\t * Selector for the minimum discounted price in the range of configurable product variants.\n\t */\n\tconst selectConfigurableProductMinimumDiscountedPrice = createSelector(\n\t\tselectProductEntities,\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\t(products, appliedAttributesEntities, props) => getMinimumPrice(\n\t\t\tselectConfigurableProductDiscountedPrices.projector(products, appliedAttributesEntities, { id: props.id })\n\t\t)\n\t)\n\n\t/**\n\t * Selector for the maximum discounted price in the range of configurable product variants.\n\t */\n\tconst selectConfigurableProductMaximumDiscountedPrice = createSelector(\n\t\tselectProductEntities,\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\t(products, appliedAttributesEntities, props) => getMaximumPrice(\n\t\t\tselectConfigurableProductDiscountedPrices.projector(products, appliedAttributesEntities, { id: props.id })\n\t\t)\n\t)\n\n\t/**\n\t * Selector for the minimum percent discount in the range of configurable product variants.\n\t */\n\tconst selectConfigurableProductMinimumPercentDiscount = createSelector(\n\t\tselectProductEntities,\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\t(products, appliedAttributesEntities, props) => getMinimumPrice(\n\t\t\tselectConfigurableProductPercentDiscounts.projector(products, appliedAttributesEntities, { id: props.id })\n\t\t)\n\t)\n\n\t/**\n\t * Selector for the maximum percent discount in the range of configurable product variants.\n\t */\n\tconst selectConfigurableProductMaximumPercentDiscount = createSelector(\n\t\tselectProductEntities,\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\t(products, appliedAttributesEntities, props) => getMaximumPrice(\n\t\t\tselectConfigurableProductPercentDiscounts.projector(products, appliedAttributesEntities, { id: props.id })\n\t\t)\n\t)\n\n\t/**\n\t * Selector for whether the configurable product variant prices have been narrowed to a single price.\n\t */\n\tconst isConfigurablePriceRanged = createSelector(\n\t\tselectProductEntities,\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\t(products, appliedAttributesEntities, props) => {\n\t\t\tconst minPrice = selectConfigurableProductMinimumPrice.projector(products, appliedAttributesEntities, { id: props.id });\n\t\t\tconst maxPrice = selectConfigurableProductMaximumPrice.projector(products, appliedAttributesEntities, { id: props.id });\n\t\t\treturn minPrice !== maxPrice;\n\t\t}\n\t)\n\n\tconst selectAllConfigurableProductAttributes = createSelector(\n\t\tselectProductEntities,\n\t\t(products, props) => {\n\t\t\tconst product = <DaffConfigurableProduct>selectProduct.projector(products, { id: props.id });\n\t\t\tif(product.type !== DaffProductTypeEnum.Configurable) {\n\t\t\t\treturn {};\n\t\t\t}\n\t\t\treturn product.configurableAttributes.reduce((acc, attribute) => ({\n\t\t\t\t...acc,\n\t\t\t\t[attribute.code]: attribute.values.map(value => value.value)\n\t\t\t}), {});\n\t\t}\n\t);\n\n\t/**\n\t * Selector for selectable configurable product attributes derived from the remaining variants and the order of currently applied attributes.\n\t * The remaining variants of the product are derived from the currently applied attributes.\n\t */\n\tconst selectSelectableConfigurableProductAttributes = createSelector(\n\t\tselectProductEntities,\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\t(products, appliedAttributesEntities, props) => {\n\t\t\tconst product = <DaffConfigurableProduct>selectProduct.projector(products, { id: props.id });\n\t\t\tif(product.type !== DaffProductTypeEnum.Configurable) {\n\t\t\t\treturn {};\n\t\t\t}\n\t\t\tconst appliedAttributes: DaffConfigurableProductEntityAttribute[] = selectConfigurableProductAppliedAttributes.projector(appliedAttributesEntities, { id: props.id });\n\t\t\t\n\t\t\tconst selectableAttributes = initializeSelectableAttributes(product.configurableAttributes);\n\n\t\t\t// Set which values of applied attribute codes should be set as selectable based on the order that they were selected\n\t\t\tconst matchedVariants = appliedAttributes.reduce((matchingVariants, appliedAttribute, i) => {\n\t\t\t\tconst filteredVariants = matchingVariants.filter(variant => isVariantAvailable(appliedAttributes.slice(0, i), variant));\n\n\t\t\t\tselectableAttributes[appliedAttribute.code] = getSelectableAttributesFromVariants(selectableAttributes, filteredVariants, appliedAttribute.code);\n\n\t\t\t\treturn filteredVariants\n\t\t\t}, product.variants).filter(variant =>\n\t\t\t\tisVariantAvailable(appliedAttributes, variant)\n\t\t\t);\n\n\t\t\t// Set which values of the unapplied attribute codes should be set as selectable based on the matching variants of all\n\t\t\t// applied attributes.\n\t\t\tproduct.configurableAttributes.forEach(attribute => {\n\t\t\t\tif (!selectableAttributes[attribute.code].length) {\n\t\t\t\t\tselectableAttributes[attribute.code] = getSelectableAttributesFromVariants(selectableAttributes, matchedVariants, attribute.code);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\treturn selectableAttributes;\n\t\t}\n\t);\n\n\treturn { \n\t\tselectAllConfigurableProductAttributes,\n\t\tselectAllConfigurableProductVariants,\n\t\tselectConfigurableProductPrices,\n\t\tselectConfigurableProductDiscountedPrices,\n\t\tselectConfigurableProductPercentDiscounts,\n\t\tselectConfigurableProductHasDiscount,\n\t\tselectConfigurableProductMinimumPrice,\n\t\tselectConfigurableProductMaximumPrice,\n\t\tselectConfigurableProductMinimumDiscountedPrice,\n\t\tselectConfigurableProductMaximumDiscountedPrice,\n\t\tselectConfigurableProductMinimumPercentDiscount,\n\t\tselectConfigurableProductMaximumPercentDiscount,\n\t\tisConfigurablePriceRanged,\n\t\tselectMatchingConfigurableProductVariants,\n\t\tselectSelectableConfigurableProductAttributes\n\t}\n}\n\nfunction getSelectableAttributesFromVariants(selectableAttributes: Dictionary<string[]>, variants: DaffConfigurableProductVariant[], code: string) {\n  return variants.reduce((selectedAttributes, variant) =>\n    isVariantAttributeMarkedAsSelectable(selectedAttributes, variant.appliedAttributes[code])\n      ? selectedAttributes\n      : [\n        ...selectedAttributes,\n        variant.appliedAttributes[code]\n      ],\n    selectableAttributes[code]\n  )\n}\n\nexport const getDaffConfigurableProductSelectors = (() => {\n\tlet cache;\n\treturn (): DaffConfigurableProductMemoizedSelectors => cache = cache \n\t\t? cache \n\t\t: createConfigurableProductSelectors();\n})();\n\nfunction isVariantAvailable(\n\tappliedAttributes: DaffConfigurableProductEntityAttribute[], \n\tvariant: DaffConfigurableProductVariant\n): boolean {\n\treturn variant.in_stock && \n\t\tappliedAttributes.reduce((acc, attribute) => \n\t\t\tacc && attribute.value === variant.appliedAttributes[attribute.code],\n\t\t\ttrue\n\t\t)\n}\n\nfunction getMinimumPrice(prices: number[]): number {\n\treturn prices.reduce(\n\t\t(acc, price) => price < acc ? price : acc,\n\t\tprices[0]\n\t);\n}\n\nfunction getMaximumPrice(prices: number[]): number {\n\treturn prices.reduce(\n\t\t(acc, price) => price > acc ? price : acc,\n\t\tprices[0]\n\t);\n}\n\nfunction initializeSelectableAttributes(attributes: DaffConfigurableProductAttribute[]): Dictionary<string[]> {\n\treturn attributes.reduce((acc, attribute) => ({\n\t\t...acc,\n\t\t[attribute.code]: []\n\t}), {});\n}\n\nfunction isVariantAttributeMarkedAsSelectable(attributeArray: string[], variantValue: string) {\n\treturn attributeArray.indexOf(variantValue) > -1\n}\n","import { createSelector, MemoizedSelector, MemoizedSelectorWithProps } from '@ngrx/store';\nimport { EntityState, Dictionary } from '@ngrx/entity';\n\nimport { getDaffProductFeatureSelector } from '../product-feature.selector';\nimport { DaffProductReducersState } from '../../reducers/product-reducers-state.interface';\nimport { DaffProduct, DaffProductTypeEnum } from '../../models/product';\nimport { daffCompositeProductAppliedOptionsEntitiesAdapter } from '../../reducers/composite-product-entities/composite-product-entities-reducer-adapter';\nimport { DaffCompositeProductEntity } from '../../reducers/composite-product-entities/composite-product-entity';\nimport { getDaffProductEntitiesSelectors } from '../product-entities/product-entities.selectors';\nimport { DaffCompositeProduct } from '../../models/composite-product';\nimport { DaffCompositeProductItemOption, DaffCompositeProductItem } from '../../models/composite-product-item';\n\nexport interface DaffCompositeProductEntitiesMemoizedSelectors {\n\tselectCompositeProductAppliedOptionsEntitiesState: MemoizedSelector<object, EntityState<DaffCompositeProductEntity>>;\n\tselectCompositeProductIds: MemoizedSelector<object, EntityState<DaffCompositeProductEntity>['ids']>;\n\tselectCompositeProductAppliedOptionsEntities: MemoizedSelector<object, EntityState<DaffCompositeProductEntity>['entities']>;\n\tselectCompositeProductTotal: MemoizedSelector<object, number>;\n\tselectCompositeProductAppliedOptions: MemoizedSelectorWithProps<object, object, Dictionary<DaffCompositeProductItemOption>>;\n\tselectIsCompositeProductItemRequired: MemoizedSelectorWithProps<object, { id: DaffCompositeProduct['id'], item_id: DaffCompositeProductItem['id']}, boolean>;\n}\n\nconst createCompositeProductAppliedOptionsEntitiesSelectors = <T extends DaffProduct>(): DaffCompositeProductEntitiesMemoizedSelectors => {\n\tconst {\n\t\tselectProductState\n\t} = getDaffProductFeatureSelector<T>();\n\tconst {\n\t\tselectProductEntities,\n\t\tselectProduct,\n\t} = getDaffProductEntitiesSelectors();\n\tconst adapterSelectors = daffCompositeProductAppliedOptionsEntitiesAdapter().getSelectors();\n\t/**\n\t * Composite Product Entities State\n\t */\n\tconst selectCompositeProductAppliedOptionsEntitiesState = createSelector(\n\t\tselectProductState,\n\t\t(state: DaffProductReducersState<T>) => state.compositeProductOptions\n\t);\n\n\t/**\n\t * Selector for composite product IDs.\n\t */\n\tconst selectCompositeProductIds = createSelector(\n\t\tselectCompositeProductAppliedOptionsEntitiesState,\n\t\tadapterSelectors.selectIds\n\t);\n\n\t/**\n\t * Selector for all composite product applied attributes as entities (see ngrx/entity).\n\t */\n\tconst selectCompositeProductAppliedOptionsEntities = createSelector(\n\t\tselectCompositeProductAppliedOptionsEntitiesState,\n\t\tadapterSelectors.selectEntities\n\t);\n\n\t/**\n\t * Selector for the total number of composite products.\n\t */\n\tconst selectCompositeProductTotal = createSelector(\n\t\tselectCompositeProductAppliedOptionsEntitiesState,\n\t\tadapterSelectors.selectTotal\n\t);\n\n\t/**\n\t * Selector for the applied attributes of a particular composite product.\n\t */\n\tconst selectCompositeProductAppliedOptions = createSelector(\n\t\tselectProductEntities,\n\t\tselectCompositeProductAppliedOptionsEntitiesState,\n\t\t(products, appliedOptions, props) => {\n\t\t\tconst product = selectProduct.projector(products, { id: props.id });\n\t\t\tif(product.type !== DaffProductTypeEnum.Composite) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn (<DaffCompositeProduct>product).items.reduce((acc, item) => ({\n\t\t\t\t\t...acc,\n\t\t\t\t\t[item.id]: appliedOptions.entities[product.id].items[item.id].value ? {\n\t\t\t\t\t\t...item.options.find(option => option.id === appliedOptions.entities[product.id].items[item.id].value),\n\t\t\t\t\t\tquantity: appliedOptions.entities[product.id].items[item.id].qty\n\t\t\t\t\t} : null\n\t\t\t}), {})\n\t\t}\n\t);\n\n\tconst selectIsCompositeProductItemRequired = createSelector(\n\t\tselectProductEntities,\n\t\t(products, props) => {\n\t\t\tconst product = selectProduct.projector(products, { id: props.id });\n\t\t\tif(product.type !== DaffProductTypeEnum.Composite) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tconst productItem = (<DaffCompositeProduct>product).items.find(item => item.id === props.item_id);\n\n\t\t\treturn productItem ? productItem.required : null\n\t\t}\n\t)\n\n\treturn { \n\t\tselectCompositeProductAppliedOptionsEntitiesState,\n\t\tselectCompositeProductIds,\n\t\tselectCompositeProductAppliedOptionsEntities,\n\t\tselectCompositeProductTotal,\n\t\tselectCompositeProductAppliedOptions,\n\t\tselectIsCompositeProductItemRequired\n\t}\n}\n\nexport const getDaffCompositeProductEntitiesSelectors = (() => {\n\tlet cache;\n\treturn <T extends DaffProduct>(): DaffCompositeProductEntitiesMemoizedSelectors => cache = cache \n\t\t? cache \n\t\t: createCompositeProductAppliedOptionsEntitiesSelectors<T>();\n})()\n","import { createSelector, MemoizedSelectorWithProps } from '@ngrx/store';\nimport { Dictionary } from '@ngrx/entity';\n\nimport { daffAdd, daffMultiply, daffSubtract } from '@daffodil/core';\n\nimport { DaffProduct, DaffProductTypeEnum } from '../../models/product';\nimport { getDaffCompositeProductEntitiesSelectors } from '../composite-product-entities/composite-product-entities.selectors';\nimport { getDaffProductEntitiesSelectors } from '../product-entities/product-entities.selectors';\nimport { DaffCompositeProduct } from '../../models/composite-product';\nimport { DaffCompositeProductItem, DaffCompositeProductItemOption } from '../../models/composite-product-item';\nimport { DaffProductPrices, DaffPriceRange } from '../../models/prices';\nimport { DaffCompositeConfigurationItem } from '../../models/composite-configuration-item';\n\nexport interface DaffCompositeProductMemoizedSelectors {\n\t/**\n\t * Get a DaffPriceRange for a composite product based on the configuration provided excluding unselected, optional item prices.\n\t */\n\tselectCompositeProductRequiredItemPricesForConfiguration: MemoizedSelectorWithProps<object, { id: string, configuration?: Dictionary<DaffCompositeConfigurationItem> }, DaffPriceRange>;\n\t/**\n\t * Get the broadest possible DaffPriceRange for a composite product based on the configuration provided including optional item prices.\n\t */\n\tselectCompositeProductOptionalItemPricesForConfiguration: MemoizedSelectorWithProps<object, { id: string, configuration?: Dictionary<DaffCompositeConfigurationItem> }, DaffPriceRange>;\n\t/**\n\t * Get the DaffPriceRange for a composite product based on the current configuration of selected item options in redux state and\n\t * excluding unselected, optional item prices.\n\t */\n\tselectCompositeProductPricesAsCurrentlyConfigured: MemoizedSelectorWithProps<object, { id: string }, DaffPriceRange>;\n}\n\nconst createCompositeProductSelectors = (): DaffCompositeProductMemoizedSelectors => {\n\n\tconst {\n\t\tselectProductEntities,\n\t\tselectProduct\n\t} = getDaffProductEntitiesSelectors();\n\n\tconst {\n\t\tselectCompositeProductAppliedOptionsEntitiesState\n\t} = getDaffCompositeProductEntitiesSelectors();\n\n\tconst selectCompositeProductRequiredItemPricesForConfiguration = createSelector(\n\t\tselectProductEntities,\n\t\t(products, props) => {\n\t\t\tconst product = selectProduct.projector(products, { id: props.id });\n\t\t\tif(product.type !== DaffProductTypeEnum.Composite) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst appliedOptions = props.configuration ? getAppliedOptionsForConfiguration(<DaffCompositeProduct>product, props.configuration) : {};\n\t\t\treturn {\n\t\t\t\tminPrice: getMinPricesForConfiguration(<DaffCompositeProduct>product, appliedOptions),\n\t\t\t\tmaxPrice: getMaxPricesForConfiguration(<DaffCompositeProduct>product, appliedOptions)\n\t\t\t}\n\t\t}\n\t);\n\n\tconst selectCompositeProductOptionalItemPricesForConfiguration = createSelector(\n\t\tselectProductEntities,\n\t\t(products, props) => {\n\t\t\tconst product = selectProduct.projector(products, { id: props.id });\n\t\t\tif(product.type !== DaffProductTypeEnum.Composite) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst appliedOptions = props.configuration ? getAppliedOptionsForConfiguration(<DaffCompositeProduct>product, props.configuration) : {};\n\t\t\treturn {\n\t\t\t\tminPrice: getMinPricesForConfiguration(<DaffCompositeProduct>product, appliedOptions),\n\t\t\t\tmaxPrice: getMaxPricesForConfigurationIncludingOptionalItems(<DaffCompositeProduct>product, appliedOptions)\n\t\t\t}\n\t\t}\n\t);\n\n\tconst selectCompositeProductPricesAsCurrentlyConfigured = createSelector(\n\t\tselectProductEntities,\n\t\tselectCompositeProductAppliedOptionsEntitiesState,\n\t\t//todo use optional chaining when possible\n\t\t(products, appliedOptionsEntities, props) => selectCompositeProductRequiredItemPricesForConfiguration.projector(products, {\n\t\t\tid: props.id, \n\t\t\tconfiguration: appliedOptionsEntities.entities[props.id] ? appliedOptionsEntities.entities[props.id].items : null\n\t\t})\n\t);\n\n\treturn { \n\t\tselectCompositeProductRequiredItemPricesForConfiguration,\n\t\tselectCompositeProductOptionalItemPricesForConfiguration,\n\t\tselectCompositeProductPricesAsCurrentlyConfigured\n\t}\n}\n\nexport const getDaffCompositeProductSelectors = (() => {\n\tlet cache;\n\treturn (): DaffCompositeProductMemoizedSelectors => cache = cache \n\t\t? cache \n\t\t: createCompositeProductSelectors();\n})();\n\n/**\n * The minimum price of an item is zero if the item is optional.\n * @param item DaffCompositeProductItem\n */\nfunction getMinimumRequiredCompositeItemPrice(item: DaffCompositeProductItem, qty: number): number {\n\treturn item.required ? daffMultiply(Math.min(...item.options.map(option => option.price)), qty) : 0;\n}\n\n/**\n * The maximum price for an item is zero if the item is optional.\n * @param item DaffCompositeProductItem\n */\nfunction getMaximumRequiredCompositeItemPrice(item: DaffCompositeProductItem, qty: number): number {\n\treturn item.required ? daffMultiply(Math.max(...item.options.map(option => option.price)), qty) : 0;\n}\n\n/**\n * The minimum discounted price of an item is zero if the item is optional.\n * @param item DaffCompositeProductItem\n */\n//todo use optional chaining when possible\nfunction getMinimumRequiredCompositeItemDiscountedPrice(item: DaffCompositeProductItem, qty: number): number {\n\treturn item.required ? daffMultiply(Math.min(...item.options.map(getDiscountedPrice)), qty) : 0;\n}\n/**\n * The maximum discounted price of an item is zero if the item is optional.\n * @param item DaffCompositeProductItem\n */\n//todo use optional chaining when possible\nfunction getMaximumRequiredCompositeItemDiscountedPrice(item: DaffCompositeProductItem, qty: number): number {\n\treturn item.required ? daffMultiply(Math.max(...item.options.map(getDiscountedPrice)), qty) : 0;\n}\n\n/**\n * Gets the minimum prices of a composite product for the configuration provided excluding unselected, optional item prices.\n * @param product a DaffCompositeProduct\n * @param appliedOptions a Dictionary<DaffCompositeProductItemOption> that determines the current configuration of the composite product.\n */\nfunction getMinPricesForConfiguration(product: DaffCompositeProduct, appliedOptions: Dictionary<DaffCompositeProductItemOption>): DaffProductPrices {\n\treturn {\n\t\tdiscountedPrice: product.items.reduce((acc, item) => daffAdd(\n\t\t\tacc, \n\t\t\tappliedOptionHasId(appliedOptions[item.id]) ? \n\t\t\t\tdaffMultiply(getDiscountedPrice(appliedOptions[item.id]), appliedOptions[item.id].quantity) : \n\t\t\t\tgetMinimumRequiredCompositeItemDiscountedPrice(item, getOptionQty(appliedOptions[item.id]))\n\t\t), getDiscountedPrice(product)),\n\t\tdiscount: { amount: null, percent: null },\n\t\toriginalPrice: product.items.reduce((acc, item) => daffAdd(\n\t\t\tacc, \n\t\t\tappliedOptionHasId(appliedOptions[item.id]) ? \n\t\t\t\tdaffMultiply(appliedOptions[item.id].price, appliedOptions[item.id].quantity) : \n\t\t\t\tgetMinimumRequiredCompositeItemPrice(item, getOptionQty(appliedOptions[item.id]))\n\t\t), product.price)\n\t}\n}\n\n/**\n * Gets the maximum prices of a composite product for the configuration provided excluding unselected, optional item prices.\n * @param product a DaffCompositeProduct\n * @param appliedOptions a Dictionary<DaffCompositeProductItemOption> that determines the current configuration of the composite product.\n */\nfunction getMaxPricesForConfiguration(product: DaffCompositeProduct, appliedOptions: Dictionary<DaffCompositeProductItemOption>): DaffProductPrices {\n\treturn {\n\t\tdiscountedPrice: product.items.reduce((acc, item) => daffAdd(\n\t\t\tacc, \n\t\t\tappliedOptionHasId(appliedOptions[item.id]) ? \n\t\t\t\tdaffMultiply(getDiscountedPrice(appliedOptions[item.id]), appliedOptions[item.id].quantity) : \n\t\t\t\tgetMaximumRequiredCompositeItemDiscountedPrice(item, getOptionQty(appliedOptions[item.id]))\n\t\t), getDiscountedPrice(product)),\n\t\tdiscount: { amount: null, percent: null },\n\t\toriginalPrice: product.items.reduce((acc, item) => daffAdd(\n\t\t\tacc,\n\t\t\tappliedOptionHasId(appliedOptions[item.id]) ? \n\t\t\t\tdaffMultiply(appliedOptions[item.id].price, appliedOptions[item.id].quantity) : \n\t\t\t\tgetMaximumRequiredCompositeItemPrice(item, getOptionQty(appliedOptions[item.id]))\n\t\t), product.price)\n\t}\n}\n\nfunction getDiscountedPrice(product: DaffProduct): number {\n  return product.discount ? daffSubtract(product.price, product.discount.amount) : product.price\n}\n\n/**\n * Gets the maximum prices of a composite product including optional item prices.\n * @param product a DaffCompositeProduct\n */\nfunction getMaxPricesForConfigurationIncludingOptionalItems(product: DaffCompositeProduct, appliedOptions: Dictionary<DaffCompositeProductItemOption>): DaffProductPrices {\n\treturn {\n\t\tdiscountedPrice: (<DaffCompositeProduct>product).items.reduce((acc, item) => daffAdd(\n\t\t\tacc, \n\t\t\tappliedOptionHasId(appliedOptions[item.id]) ? \n\t\t\t\tdaffMultiply(getDiscountedPrice(appliedOptions[item.id]), appliedOptions[item.id].quantity) :\n\t\t\t\tappliedOptionHasQty(appliedOptions[item.id]) ?\n\t\t\t\t\tdaffMultiply(Math.max(...item.options.map(getDiscountedPrice)), appliedOptions[item.id].quantity) : \n\t\t\t\t\tMath.max(...item.options.map(getDiscountedPrice))\n\t\t), getDiscountedPrice(product)),\n\t\tdiscount: { amount: null, percent: null },\n\t\toriginalPrice: (<DaffCompositeProduct>product).items.reduce((acc, item) => daffAdd(\n\t\t\tacc,\n\t\t\tappliedOptionHasId(appliedOptions[item.id]) ? \n\t\t\t\tdaffMultiply(appliedOptions[item.id].price, appliedOptions[item.id].quantity) : \n\t\t\t\tappliedOptionHasQty(appliedOptions[item.id]) ?\n\t\t\t\t\tdaffMultiply(Math.max(...item.options.map(option => option.price)), appliedOptions[item.id].quantity) : \n\t\t\t\t\tMath.max(...item.options.map(option => option.price))\n\t\t), product.price)\n\t}\n}\n\n/**\n * Takes a product and a set of option configurations and convert it into a dictionary of the full option objects.\n * @param product a DaffCompositeProduct\n * @param configuration a Dictionary<DaffCompositeConfigurationItem> used to build the appliedOptions object.\n */\nfunction getAppliedOptionsForConfiguration(product: DaffCompositeProduct, configuration: Dictionary<DaffCompositeConfigurationItem>): Dictionary<DaffCompositeProductItemOption> {\n\treturn (<DaffCompositeProduct>product).items.reduce((acc, item) => ({\n\t\t...acc,\n\t\t[item.id]: configuration[item.id] ? {\n\t\t\t...item.options.find(option => option.id === configuration[item.id].value),\n\t\t\tquantity: (configuration[item.id].qty === null || configuration[item.id].qty === undefined) ? 1 : configuration[item.id].qty\n\t\t} : null\n}), {})\n}\n\n//todo: use optional chaining when possible\nfunction appliedOptionHasId(appliedOption: DaffCompositeProductItemOption): boolean {\n\treturn appliedOption && !!appliedOption.id;\n}\n\nfunction getOptionQty(appliedOption: DaffCompositeProductItemOption): number {\n\treturn appliedOptionHasQty(appliedOption) ? appliedOption.quantity : 1;\n}\n\n//todo: use optional chaining when possible\nfunction appliedOptionHasQty(appliedOption: DaffCompositeProductItemOption): boolean {\n\treturn appliedOption && appliedOption.quantity !== null;\n}\n","import { DaffProduct } from '../models/product';\nimport { DaffProductPageMemoizedSelectors, getDaffProductPageSelectors } from './product/product.selectors';\nimport { DaffBestSellersMemoizedSelectors, getDaffBestSellersSelectors } from './best-sellers/best-sellers.selectors';\nimport { DaffProductEntitiesMemoizedSelectors, getDaffProductEntitiesSelectors } from './product-entities/product-entities.selectors';\nimport { DaffProductGridMemoizedSelectors, getDaffProductGridSelectors } from './product-grid/product-grid.selectors';\nimport { DaffProductFeatureMemoizedSelector, getDaffProductFeatureSelector } from './product-feature.selector';\nimport { DaffConfigurableProductEntitiesMemoizedSelectors, getDaffConfigurableProductEntitiesSelectors } from './configurable-product-entities/configurable-product-entities.selectors';\nimport { DaffConfigurableProductMemoizedSelectors, getDaffConfigurableProductSelectors } from './configurable-product/configurable-product.selectors';\nimport { DaffCompositeProductEntitiesMemoizedSelectors, getDaffCompositeProductEntitiesSelectors } from './composite-product-entities/composite-product-entities.selectors';\nimport { DaffCompositeProductMemoizedSelectors, getDaffCompositeProductSelectors } from './composite-product/composite-product.selectors';\n\nexport interface DaffProductAllSelectors<T extends DaffProduct = DaffProduct> extends \n\tDaffProductPageMemoizedSelectors<T>, \n\tDaffBestSellersMemoizedSelectors<T>, \n\tDaffProductEntitiesMemoizedSelectors<T>, \n\tDaffProductGridMemoizedSelectors<T>,\n\tDaffProductFeatureMemoizedSelector<T>,\n\tDaffConfigurableProductEntitiesMemoizedSelectors,\n\tDaffConfigurableProductMemoizedSelectors,\n\tDaffCompositeProductEntitiesMemoizedSelectors,\n\tDaffCompositeProductMemoizedSelectors { }\n\nexport const getDaffProductSelectors = <T extends DaffProduct = DaffProduct>(): DaffProductAllSelectors<T> => {\n\treturn {\n\t\t...getDaffBestSellersSelectors<T>(),\n\t\t...getDaffProductPageSelectors<T>(),\n\t\t...getDaffProductGridSelectors<T>(),\n\t\t...getDaffProductEntitiesSelectors<T>(),\n\t\t...getDaffProductFeatureSelector<T>(),\n\t\t...getDaffConfigurableProductEntitiesSelectors(),\n\t\t...getDaffConfigurableProductSelectors(),\n\t\t...getDaffCompositeProductEntitiesSelectors(),\n\t\t...getDaffCompositeProductSelectors()\n\t}\n};","import { InjectionToken } from '@angular/core';\nimport { DaffProductServiceInterface } from '../interfaces/product-service.interface';\n\n/**\n * Injection token that serves as a placeholder for any service that implements the DaffProductServiceInterface.\n */\nexport const DaffProductDriver = \n    new InjectionToken<DaffProductServiceInterface<any>>('DaffProductDriver');\n","import { Injectable, Inject } from '@angular/core';\nimport { switchMap, map, catchError } from 'rxjs/operators';\nimport { of ,  Observable } from 'rxjs';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\n\nimport { \n  DaffProductGridActionTypes, \n  DaffProductGridLoad, \n  DaffProductGridLoadSuccess, \n  DaffProductGridLoadFailure } from '../actions/product-grid.actions';\nimport { DaffProductServiceInterface } from '../drivers/interfaces/product-service.interface';\nimport { DaffProductDriver } from '../drivers/injection-tokens/product-driver.token';\n\nimport { DaffProduct } from '../models/product';\n\n/**\n * Effects for handling product grid actions and for triggering corresponding service requests.\n * \n * @param action$ - Redux action object\n * @param driver - A product service driver\n */\n@Injectable()\nexport class DaffProductGridEffects<T extends DaffProduct> {\n\n  constructor(\n    private actions$: Actions,\n    @Inject(DaffProductDriver) private driver: DaffProductServiceInterface<T>){}\n  \n  /**\n   * Handles ProductGridLoadAction by making a service call for products and returning a success or failure action\n   * to the action stream.\n   * \n   * @returns An Observable of a DaffProductGridAction\n   */\n  @Effect()\n  loadAll$ : Observable<any> = this.actions$.pipe(\n    ofType(DaffProductGridActionTypes.ProductGridLoadAction),\n    switchMap((action: DaffProductGridLoad) =>\n      this.driver.getAll()\n        .pipe(\n          map((resp) => {\n            return new DaffProductGridLoadSuccess(resp);\n          }),\n          catchError(error => {\n            return of(new DaffProductGridLoadFailure('Failed to load product grid'));\n          })\n        )\n    )\n  )\n}\n","import { Injectable, Inject } from '@angular/core';\n\nimport { Actions, Effect, ofType } from '@ngrx/effects';\n\nimport { switchMap, map, catchError } from 'rxjs/operators';\nimport { of ,  Observable } from 'rxjs';\n\nimport { \n  DaffProductActionTypes, \n  DaffProductLoad, \n  DaffProductLoadSuccess, \n  DaffProductLoadFailure } from '../actions/product.actions';\nimport { DaffProductDriver } from '../drivers/injection-tokens/product-driver.token';\nimport { DaffProductServiceInterface } from '../drivers/interfaces/product-service.interface';\nimport { DaffProduct } from '../models/product';\n\n/**\n * Effects for handling product actions and for triggering corresponding service requests.\n * \n * @param action$ - Redux action object\n * @param driver - A product service driver\n */\n@Injectable()\nexport class DaffProductEffects<T extends DaffProduct> {\n\n  constructor(\n    private actions$: Actions,\n    @Inject(DaffProductDriver) private driver: DaffProductServiceInterface<T>){}\n\n  /**\n  * Handles ProductLoadAction by making a service call for a product and returning a success or \n  * failure action to the action stream.\n  * \n  * @returns An Observable of a ProductLoadAction\n  */\n  @Effect()\n  load$ : Observable<any> = this.actions$.pipe(\n    ofType(DaffProductActionTypes.ProductLoadAction),\n    switchMap((action: DaffProductLoad) =>\n      this.driver.get(action.payload)\n        .pipe(\n          map((resp) => {\n            return new DaffProductLoadSuccess(resp);\n          }),\n          catchError(error => {\n            return of(new DaffProductLoadFailure('Failed to load product'));\n          })\n        )\n    )\n  )\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { Observable ,  of } from 'rxjs';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { switchMap, map, catchError } from 'rxjs/operators';\n\nimport { \n  DaffBestSellersActionTypes, \n  DaffBestSellersLoad, \n  DaffBestSellersLoadSuccess, \n  DaffBestSellersLoadFailure } from '../actions/best-sellers.actions';\nimport { DaffProductDriver } from '../drivers/injection-tokens/product-driver.token';\nimport { DaffProductServiceInterface } from '../drivers/interfaces/product-service.interface';\nimport { DaffProduct } from '../models/product';\n\n/**\n * Effects for handling best seller actions and best seller service requests.\n * \n * @param action$ - Redux action object\n * @param driver - A product service driver\n */\n@Injectable()\nexport class DaffBestSellersEffects<T extends DaffProduct> {\n\n  constructor(\n    private actions$: Actions,\n    @Inject(DaffProductDriver) private driver: DaffProductServiceInterface<T>){}\n\n  /**\n   * Handles BestSellersLoadAction by making a service call for best selling products and returning a success or failure action\n   * to the action stream.\n   * \n   * @returns An Observable of a BestSellersLoad action\n   */\n  @Effect()\n  loadBestSellers$ : Observable<any> = this.actions$.pipe(\n    ofType(DaffBestSellersActionTypes.BestSellersLoadAction),\n    switchMap((action: DaffBestSellersLoad) =>\n      this.driver.getBestSellers()\n        .pipe(\n          map((resp) => {\n            return new DaffBestSellersLoadSuccess(resp);\n          }),\n          catchError(error => {\n            return of(new DaffBestSellersLoadFailure('Failed to load best selling products'));\n          })\n        )\n    )\n  )\n}\n","import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { DaffProductGridEffects } from './effects/product-grid.effects';\nimport { DaffProductEffects } from './effects/product.effects';\nimport { DaffBestSellersEffects } from './effects/best-seller.effects';\nimport { daffProductReducers } from './reducers/product-reducers';\n\n@NgModule({\n  imports: [\n      StoreModule.forFeature('product', daffProductReducers),\n      EffectsModule.forFeature([\n        DaffProductGridEffects,\n        DaffProductEffects,\n        DaffBestSellersEffects\n      ]),\n  ]\n})\nexport class DaffProductStateModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DaffProductStateModule } from './product-state.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    /**\n     * Ngrx/store\n     */\n    DaffProductStateModule,\n  ]\n})\nexport class DaffProductModule { }\n","import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Apollo } from 'apollo-angular';\nimport gql from 'graphql-tag';\n\nimport { DaffProduct } from '../../models/product';\nimport { DaffProductServiceInterface } from '../interfaces/product-service.interface';\n\ninterface GetAllProductsResponse {\n  shop?: ShopGraph\n}\n\ninterface GetAProductResponse {\n  node: ProductNode\n}\n\ninterface ShopGraph {\n  products?: ProductGraph\n}\n\ninterface ProductGraph {\n  edges: ProductEdge[]\n}\n\ninterface ProductEdge {\n  node: ProductNode\n}\n\ninterface ProductNode {\n  id: string;\n  title?: string;\n  price?: string;\n}\n\ninterface Variables {\n  first: number\n};\n\n\n/**\n * GraphQL query object for getting all products.\n */\nexport const GetAllProductsQuery = gql`\n  query GetAllProducts($length: Int) {\n    shop {\n      products(first: $length)  {\n        edges {\n          node {\n            id\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n\n/**\n * GraphQL query object for getting a product by ID.\n */\nexport const GetAProduct = gql`\n  query GetAProduct($id: ID!){\n    node(id: $id) {\n      id\n      ... on Product {\n        title\n      }\n    }\n  }\n`;\n\n/**\n * Transforms a ProductNode into a different object.\n * \n * @param node - ProductNode object\n * @returns A Product object\n */\nexport const DaffShopifyProductTransformer = (node: ProductNode) : DaffProduct => {\n  return {\n    id: node.id,\n\t\tname: node.title,\n\t\timages: []\n  }\n}\n\n/**\n * A service for getting DaffProducts from apollo shopify product requests.\n * \n * @Param apollo\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffShopifyProductService implements DaffProductServiceInterface {\n\n  defaultLength = 20;\n  \n  constructor(private apollo: Apollo) {}\n\n  /**\n   * A query for retrieving all Products as an Observable<DaffProduct[]>.\n   * \n   * @returns Observable<Product[]>\n   */\n  getAll(): Observable<DaffProduct[]> {\n    return this.apollo.query<GetAllProductsResponse>({\n      query: GetAllProductsQuery,\n      variables: {\n        length: this.defaultLength\n      }\n    }).pipe(\n      map(result => {\n        return result.data.shop.products.edges.map(edge => DaffShopifyProductTransformer(edge.node))\n      })\n    );\n  }\n\n  //todo: add actual getBestSellers apollo call. Right now, it just makes the getAll() call\n  getBestSellers(): Observable<DaffProduct[]> {\n    return this.apollo.query<GetAllProductsResponse>({\n      query: GetAllProductsQuery,\n      variables: {\n        length: this.defaultLength\n      }\n    }).pipe(\n      map(result => {\n        return result.data.shop.products.edges.map(edge => DaffShopifyProductTransformer(edge.node))\n      })\n    );\n  }\n\n  /**\n   * A query for retrieving a particular product as an Observable<DaffProduct>.\n   * \n   * @param productId - A product ID\n   * @returns Observable<Product>\n   */\n  get(productId: string): Observable<DaffProduct> {\n    return this.apollo.query<GetAProductResponse>({\n      query: GetAProduct,\n      variables: {\n        id: productId\n      }\n    }).pipe(\n      map(result => DaffShopifyProductTransformer(result.data.node))\n    );\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DaffProductDriver } from '../injection-tokens/product-driver.token';\nimport { DaffShopifyProductService } from './product.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ]\n})\nexport class DaffProductShopifyDriverModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DaffProductShopifyDriverModule,\n      providers: [\n        {\n          provide: DaffProductDriver,\n          useExisting: DaffShopifyProductService\n        }\n      ]\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store, select, Action } from '@ngrx/store';\n\nimport { DaffProductModule } from '../../product.module';\nimport { DaffProductReducersState } from '../../reducers/product-reducers-state.interface';\nimport { DaffProduct } from '../../models/product';\nimport { getDaffProductSelectors } from '../../selectors/public_api';\nimport { DaffProductGridFacadeInterface } from './product-grid-facade.interface';\n\n/**\n * A facade for accessing state for a list of products from an application component.\n */\n@Injectable({\n  providedIn: DaffProductModule\n})\nexport class DaffProductGridFacade<T extends DaffProduct = DaffProduct> implements DaffProductGridFacadeInterface<T> {\n  /**\n   * The loading state for retrieving a list of products.\n   */\n  loading$: Observable<boolean>;\n  /**\n   * The state for a list of products.\n   */\n  products$: Observable<T[]>;\n\n  constructor(private store: Store<DaffProductReducersState<T>>) {\n\t\tconst {\n\t\t\tselectProductGridLoadingState,\n\t\t\tselectAllProducts\n\t\t} = getDaffProductSelectors<T>();\n\n    this.loading$ = this.store.pipe(select(selectProductGridLoadingState));\n    this.products$ = this.store.pipe(select(selectAllProducts));\n  }\n\n  /**\n   * Dispatches an action to the rxjs action stream.\n   */\n  dispatch(action: Action) {\n    this.store.dispatch(action);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Store, select, Action } from '@ngrx/store';\n\nimport { DaffProductModule } from '../../product.module';\nimport { DaffProductReducersState } from '../../reducers/product-reducers-state.interface';\nimport { DaffProduct } from '../../models/product';\nimport { getDaffProductSelectors } from '../../selectors/public_api';\nimport { DaffProductFacadeInterface } from './product-facade.interface';\n\n/**\n * A facade for getting state about a particular product.\n * \n * See the <a href=\"docs/api/product/DaffProductFacadeInterface\">DaffProductFacadeInterface docs</a> for more details.\n */\n@Injectable({\n  providedIn: DaffProductModule\n})\nexport class DaffProductFacade<T extends DaffProduct = DaffProduct> implements DaffProductFacadeInterface<T> {\n  loading$: Observable<boolean>;\n  product$: Observable<T>;\n\n\tprivate selectors = getDaffProductSelectors<T>();\n\n  constructor(private store: Store<DaffProductReducersState<T>>) {\n    this.loading$ = this.store.pipe(select(this.selectors.selectSelectedProductLoadingState));\n\t\tthis.product$ = this.store.pipe(select(this.selectors.selectSelectedProduct));\n\t}\n\n\tgetProduct(id: string): Observable<T> {\n\t\treturn this.store.pipe(select(this.selectors.selectProduct, { id }));\n\t}\n\n\tgetPrice(id: string): Observable<number> {\n\t\treturn this.store.pipe(select(this.selectors.selectProductPrice, { id }));\n\t}\n\n\thasDiscount(id: string): Observable<boolean> {\n\t\treturn this.store.pipe(select(this.selectors.selectProductHasDiscount, { id }));\n\t}\n\n\tgetDiscountAmount(id: string): Observable<number> {\n\t\treturn this.store.pipe(select(this.selectors.selectProductDiscountAmount, { id }));\n\t}\n\n\tgetDiscountedPrice(id: string): Observable<number> {\n\t\treturn this.store.pipe(select(this.selectors.selectProductDiscountedPrice, { id }));\n\t}\n\n\tgetDiscountPercent(id: string): Observable<number> {\n\t\treturn this.store.pipe(select(this.selectors.selectProductDiscountPercent, { id }));\n\t}\n\n\tisOutOfStock(id: string): Observable<boolean> {\n\t\treturn this.store.pipe(select(this.selectors.selectIsProductOutOfStock, { id }));\n\t}\n\n  /**\n   * Dispatches an action to the rxjs action stream.\n   */\n  dispatch(action: Action) {\n    this.store.dispatch(action);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store, select, Action } from '@ngrx/store';\nimport { Dictionary } from '@ngrx/entity';\n\nimport { DaffProductModule } from '../../product.module';\nimport { DaffProductReducersState } from '../../reducers/product-reducers-state.interface';\nimport { DaffProduct } from '../../models/product';\nimport { getDaffProductSelectors } from '../../selectors/public_api';\nimport { DaffConfigurableProductFacadeInterface } from './configurable-product-facade.interface';\nimport { DaffConfigurableProductVariant } from '../../models/configurable-product';\n\n/**\n * A facade for interacting with the configurable product state.\n * Exposes many parts of the state for easy access and allows dispatching of actions.\n * \n * See the <a href=\"docs/api/product/DaffConfigurableProductFacadeInterface\">DaffConfigurableProductFacadeInterface docs</a> for more details.\n */\n@Injectable({\n  providedIn: DaffProductModule\n})\nexport class DaffConfigurableProductFacade<T extends DaffProduct = DaffProduct> implements DaffConfigurableProductFacadeInterface {\n\n\tselectors = getDaffProductSelectors<T>();\n\t\n\tconstructor(private store: Store<DaffProductReducersState<T>>) {}\n\t\n\tgetAllAttributes(id: string): Observable<Dictionary<string[]>> {\n\t\treturn this.store.pipe(select(this.selectors.selectAllConfigurableProductAttributes, { id }));\n\t}\n\t\n\tgetAllVariants(id: string): Observable<DaffConfigurableProductVariant[]> {\n\t\treturn this.store.pipe(select(this.selectors.selectAllConfigurableProductVariants, { id }));\n\t}\n\t\n\tgetAppliedAttributes(id: string): Observable<Dictionary<string>> {\n\t\treturn this.store.pipe(select(this.selectors.selectConfigurableProductAppliedAttributesAsDictionary, { id }));\n\t}\n\n\tgetMinimumPrice(id: string): Observable<number> {\n\t\treturn this.store.pipe(select(this.selectors.selectConfigurableProductMinimumPrice, { id }));\n\t}\n\n\tgetMaximumPrice(id: string): Observable<number> {\n\t\treturn this.store.pipe(select(this.selectors.selectConfigurableProductMaximumPrice, { id }));\n\t}\n\n\tgetMinimumDiscountedPrice(id: string): Observable<number> {\n\t\treturn this.store.pipe(select(this.selectors.selectConfigurableProductMinimumDiscountedPrice, { id }));\n\t}\n\n\tgetMaximumDiscountedPrice(id: string): Observable<number> {\n\t\treturn this.store.pipe(select(this.selectors.selectConfigurableProductMaximumDiscountedPrice, { id }));\n\t}\n\n\tgetMinimumPercentDiscount(id: string): Observable<number> {\n\t\treturn this.store.pipe(select(this.selectors.selectConfigurableProductMinimumPercentDiscount, { id }));\n\t}\n\n\tgetMaximumPercentDiscount(id: string): Observable<number> {\n\t\treturn this.store.pipe(select(this.selectors.selectConfigurableProductMaximumPercentDiscount, { id }));\n\t}\n\n\tisPriceRanged(id: string): Observable<boolean> {\n\t\treturn this.store.pipe(select(this.selectors.isConfigurablePriceRanged, { id }));\n\t}\n\n\thasDiscount(id: string): Observable<boolean> {\n\t\treturn this.store.pipe(select(this.selectors.selectConfigurableProductHasDiscount, { id }));\n\t}\n\n\tgetSelectableAttributes(id: string): Observable<Dictionary<string[]>> {\n\t\treturn this.store.pipe(select(this.selectors.selectSelectableConfigurableProductAttributes, { id }));\n\t}\n\n\tgetMatchingVariants(id: string): Observable<DaffConfigurableProductVariant[]> {\n\t\treturn this.store.pipe(select(this.selectors.selectMatchingConfigurableProductVariants, { id }));\n\t}\n\n  /**\n   * Dispatches an action to the rxjs action stream.\n   */\n  dispatch(action: Action) {\n    this.store.dispatch(action);\n  }\n}\n","import { DaffPriceRange } from '../models/prices';\n\n/**\n * Returns whether a DaffPriceRange has a discount.\n * @param priceRange a DaffPriceRange\n */\nexport const productPriceRangeHasDiscount = (priceRange: DaffPriceRange): boolean => {\n\treturn priceRange.minPrice.originalPrice !== priceRange.minPrice.discountedPrice ||\n\t\tpriceRange.maxPrice.originalPrice !== priceRange.maxPrice.discountedPrice;\n}\n\n/**\n * Returns whether the min and max prices of a DaffPriceRange are different.\n * @param priceRange a DaffPriceRange\n */\nexport const productPriceRangeHasPriceRange = (priceRange: DaffPriceRange): boolean => {\n\treturn priceRange.minPrice.originalPrice !== priceRange.maxPrice.originalPrice ||\n\t\tpriceRange.minPrice.discountedPrice !== priceRange.maxPrice.discountedPrice;\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store, select, Action } from '@ngrx/store';\nimport { Dictionary } from '@ngrx/entity';\n\nimport { DaffProductModule } from '../../product.module';\nimport { DaffProductReducersState } from '../../reducers/product-reducers-state.interface';\nimport { DaffProduct } from '../../models/product';\nimport { getDaffProductSelectors } from '../../selectors/public_api';\nimport { DaffCompositeProductFacadeInterface } from './composite-product-facade.interface';\nimport { DaffCompositeProductItemOption, DaffCompositeProductItem } from '../../models/composite-product-item';\nimport { DaffCompositeProduct } from '../../models/composite-product';\nimport { DaffPriceRange } from '../../models/prices';\nimport { DaffCompositeConfigurationItem } from '../../models/composite-configuration-item';\nimport { productPriceRangeHasDiscount, productPriceRangeHasPriceRange } from '../helpers';\n\n/**\n * A facade for interacting with the composite product state.\n * Exposes many parts of the state for easy access and allows dispatching of actions.\n * \n * See the <a href=\"docs/api/product/DaffCompositeProductFacadeInterface\">DaffCompositeProductFacadeInterface docs</a> for more details.\n */\n@Injectable({\n  providedIn: DaffProductModule\n})\nexport class DaffCompositeProductFacade<T extends DaffProduct = DaffProduct> implements DaffCompositeProductFacadeInterface {\n\t\n\tconstructor(private store: Store<DaffProductReducersState<T>>) {}\n\n\tselectors = getDaffProductSelectors<T>();\n\n\t/**\n\t * Returns whether a DaffPriceRange has a discount.\n\t * @param priceRange a DaffPriceRange\n\t */\n\thasDiscount = productPriceRangeHasDiscount;\n\n\t/**\n\t * Returns whether the min and max prices of a DaffPriceRange are different.\n\t * @param priceRange a DaffPriceRange\n\t */\n\thasPriceRange = productPriceRangeHasPriceRange;\n\n\tgetRequiredItemPricesForConfiguration(id: string, configuration?: Dictionary<DaffCompositeConfigurationItem>): Observable<DaffPriceRange> {\n\t\treturn this.store.pipe(select(this.selectors.selectCompositeProductRequiredItemPricesForConfiguration, { id, configuration }));\n\t}\n\n\tgetOptionalItemPricesForConfiguration(id: string, configuration?: Dictionary<DaffCompositeConfigurationItem>): Observable<DaffPriceRange> {\n\t\treturn this.store.pipe(select(this.selectors.selectCompositeProductOptionalItemPricesForConfiguration, { id, configuration }));\n\t}\n\n\tgetPricesAsCurrentlyConfigured(id: string): Observable<DaffPriceRange> {\n\t\treturn this.store.pipe(select(this.selectors.selectCompositeProductPricesAsCurrentlyConfigured, { id }));\n\t}\n\n\tgetAppliedOptions(id: string): Observable<Dictionary<DaffCompositeProductItemOption>> {\n\t\treturn this.store.pipe(select(this.selectors.selectCompositeProductAppliedOptions, { id }));\n\t}\n\n\tisItemRequired(id: DaffCompositeProduct['id'], item_id: DaffCompositeProductItem['id']) {\n\t\treturn this.store.pipe(select(this.selectors.selectIsCompositeProductItemRequired, { id, item_id }));\n\t}\n\n  /**\n   * Dispatches an action to the rxjs action stream.\n   */\n  dispatch(action: Action) {\n    this.store.dispatch(action);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store, select, Action } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport { DaffStoreFacade } from '@daffodil/core/state';\n\nimport { DaffProduct } from '../../models/product';\nimport { DaffProductModule } from '../../product.module';\nimport { DaffProductReducersState } from '../../reducers/product-reducers-state.interface';\nimport { getDaffProductSelectors } from '../../selectors/public_api';\n\n/**\n * A facade for accessing best sellers state from an application component.\n */\n@Injectable({\n  providedIn: DaffProductModule\n})\nexport class DaffBestSellersFacade<T extends DaffProduct = DaffProduct> implements DaffStoreFacade<Action> {\n  /**\n   * The loading state for getting best selling products.\n   */\n  loading$: Observable<boolean>;\n  /**\n   * Best selling products.\n   */\n  bestSellers$: Observable<DaffProduct[]>;\n\n  constructor(private store: Store<DaffProductReducersState<T>>) {\n\t\tconst {\n\t\t\tselectBestSellersProducts,\n\t\t\tselectBestSellersLoadingState\n\t\t} = getDaffProductSelectors<T>();\n\n    this.loading$ = this.store.pipe(select(selectBestSellersLoadingState));\n    this.bestSellers$ = this.store.pipe(select(selectBestSellersProducts));\n  }\n\n  /**\n   * Dispatches an action to the rxjs action stream.\n   * @param action\n   */\n  dispatch(action: Action) {\n    this.store.dispatch(action);\n  }\n}\n","export enum MagentoProductTypeEnum {\n\tBundledProduct = 'BundleProduct',\n\tConfigurableProduct = 'ConfigurableProduct',\n\tSimpleProduct = 'SimpleProduct'\n}\n\nexport enum MagentoProductStockStatusEnum {\n\tInStock = 'IN_STOCK',\n\tOutOfStock = 'OUT_OF_STOCK'\n}\n\n/**\n * An object for defining what the product service requests and retrieves from a magento backend.\n */\nexport interface MagentoProduct {\n\t__typename: string;\n  id: number;\n  name: string;\n  sku: string;\n  url_key: string;\n  image: {\n\t\turl: string,\n\t\tlabel: string\n  };\n  thumbnail: {\n\t\turl: string,\n\t\tlabel: string\n\t};\n  price_range: {\n\t\tmaximum_price: {\n\t\t\tregular_price: {\n\t\t\t\tvalue: number,\n\t\t\t\tcurrency: any\n\t\t\t}\n\t\t\tdiscount: {\n\t\t\t\tamount_off: number,\n\t\t\t\tpercent_off: number\n\t\t\t}\n\t\t}\n\t};\n\tstock_status?: MagentoProductStockStatusEnum;\n  media_gallery_entries?: {\n\t\tlabel: string,\n\t\tfile: string,\n\t\tposition: number,\n\t\tdisabled: boolean,\n\t\tid: number\n\t}[];\n  short_description?: {\n\t\thtml: string;\n\t};\n  description?: {\n\t\thtml: string;\n\t};\n}\n","import { MagentoProduct } from './magento-product';\nimport { MagentoSimpleProduct } from './simple-product';\n\nexport enum MagentoPriceTypeEnum {\n\tfixed = 'FIXED',\n\tpercent = 'PERCENT',\n\tdynamic = 'DYNAMIC'\n}\n\nexport interface MagentoBundledProduct extends MagentoProduct {\n\titems: MagentoBundledProductItem[];\n}\n\nexport interface MagentoBundledProductItem {\n\trequired: boolean;\n\tsku: string;\n\ttitle: string;\n\ttype: string;\n\toptions: MagentoBundledProductItemOption[];\n\toption_id?: number;\n\tposition?: number;\n}\n\nexport interface MagentoBundledProductItemOption {\n\tid: number;\n\tlabel: string;\n\tprice: number;\n\tquantity: number;\n\tcan_change_quantity?: boolean;\n\tis_default: boolean;\n\tposition?: number;\n\tprice_type?: MagentoPriceTypeEnum;\n\tproduct?: MagentoSimpleProduct;\n}\n","import { MagentoProduct } from './magento-product';\nimport { MagentoSimpleProduct } from './simple-product';\n\nexport interface MagentoConfigurableProduct extends MagentoProduct {\n\tconfigurable_options: MagentoConfigurableProductOption[];\n\tvariants: MagentoConfigurableProductVariant[];\n}\n\nexport interface MagentoConfigurableProductOption {\n\tattribute_code:\tstring;\n\tattribute_id:\tstring;\n\tid:\tnumber;\n\tlabel: string;\n\tposition:\tnumber;\n\tproduct_id:\tnumber;\n\tvalues:\tMagentoConfigurableProductOptionsValue[];\n}\n\nexport interface MagentoConfigurableProductOptionsValue {\n\tlabel: string;\n\tswatch_data?: MagentoSwatchDataInterface;\n\tvalue_index: number;\n}\n\nexport interface MagentoSwatchDataInterface {\n\tvalue: string;\n\tthumbnail: string;\n}\n\nexport interface MagentoConfigurableProductVariant {\n\tattributes: MagentoConfigurableAttributeOption[];\n\tproduct: MagentoSimpleProduct;\n}\n\nexport interface MagentoConfigurableAttributeOption {\n\tcode:\tstring;\n\tlabel: string;\n\tvalue_index: number;\n}\n","import gql from 'graphql-tag';\n\nexport const magentoBundledProductFragment = gql`\n  fragment magentoBundledProduct on BundleProduct {\n\t\titems {\n\t\t\toption_id\n\t\t\tposition\n\t\t\trequired\n\t\t\tsku\n\t\t\ttitle\n\t\t\ttype\n\t\t\toptions {\n\t\t\t\tcan_change_quantity\n\t\t\t\tid\n\t\t\t\tis_default\n\t\t\t\tlabel\n\t\t\t\tposition\n\t\t\t\tprice_type\n\t\t\t\tprice\n\t\t\t\tquantity\n\t\t\t\tproduct {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\tsku\n\t\t\t\t\tstock_status\n\t\t\t\t\tprice_range {\n\t\t\t\t\t\tmaximum_price {\n\t\t\t\t\t\t\tregular_price {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\tcurrency\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdiscount {\n\t\t\t\t\t\t\t\tamount_off\n\t\t\t\t\t\t\t\tpercent_off\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const magentoSimpleProductFragment = gql`\n  fragment magentoSimpleProduct on SimpleProduct {\n    name\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const magentoConfigurableProductFragment = gql`\n  fragment magentoConfigurableProduct on ConfigurableProduct {\n\t\tconfigurable_options {\n\t\t\tattribute_code\n\t\t\tattribute_id\n\t\t\tid\n\t\t\tlabel\n\t\t\tposition\n\t\t\tproduct_id\n\t\t\tvalues {\n\t\t\t\tlabel\n\t\t\t\tvalue_index\n\t\t\t}\n\t\t}\n\t\tvariants {\n\t\t\tattributes {\n\t\t\t\tcode\n\t\t\t\tlabel\n\t\t\t\tvalue_index\n\t\t\t}\n\t\t\tproduct {\n\t\t\t\tsku\n\t\t\t\tprice_range {\n\t\t\t\t\tmaximum_price {\n\t\t\t\t\t\tregular_price {\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\tcurrency\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdiscount {\n\t\t\t\t\t\t\tamount_off\n\t\t\t\t\t\t\tpercent_off\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstock_status\n\t\t\t\timage {\n\t\t\t\t\turl\n\t\t\t\t\tlabel\n\t\t\t\t}\n\t\t\t}\n\t\t}\n  }\n`;\n","import gql from 'graphql-tag';\nimport { magentoBundledProductFragment } from './bundled-product';\nimport { magentoSimpleProductFragment } from './simple-product';\nimport { magentoConfigurableProductFragment } from './configurable-product';\n\nexport const magentoProductFragment = gql`\n  fragment product on ProductInterface {\n\t\t__typename\n\t\tid\n\t\turl_key\n\t\tname\n\t\tsku\n\t\tstock_status\n\t\tprice_range {\n\t\t\tmaximum_price {\n\t\t\t\tregular_price {\n\t\t\t\t\tvalue\n\t\t\t\t\tcurrency\n\t\t\t\t}\n\t\t\t\tdiscount {\n\t\t\t\t\tamount_off\n\t\t\t\t\tpercent_off\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\timage {\n\t\t\turl\n\t\t\tlabel\n\t\t}\n    thumbnail {\n\t\t\turl\n\t\t\tlabel\n\t\t}\n\t\tmedia_gallery_entries {\n\t\t\tlabel\n\t\t\tfile\n\t\t\tposition\n\t\t\tdisabled\n\t\t\tid\n\t\t}\n\t\tshort_description {\n\t\t\thtml\n\t\t}\n\t\tdescription {\n\t\t\thtml\n\t\t}\n\t\t...magentoBundledProduct\n\t\t...magentoSimpleProduct\n\t\t...magentoConfigurableProduct\n\t}\n\t${magentoBundledProductFragment}\n\t${magentoSimpleProductFragment}\n\t${magentoConfigurableProductFragment}\n`;\n","import gql from 'graphql-tag';\nimport { magentoProductFragment } from './fragments/product';\n\nexport const GetProductQuery = gql`\nquery GetAProduct($sku: String!){\n\tstoreConfig {\n\t\tsecure_base_media_url\n\t}\n\tproducts(filter: {\n\t\tsku: {\n\t\t\teq: $sku\n\t\t}\n\t}){\n\t\titems {\n\t\t\t...product\n\t\t}\n\t}\n}\n${magentoProductFragment}\n`\n","import gql from 'graphql-tag';\nimport { magentoProductFragment } from './fragments/product';\n\nexport const GetAllProductsQuery = gql`\nquery GetAllProducts($pageSize: Int)\n{\n\tproducts(search: \"Shirt\", pageSize: $pageSize)\n\t{\n\t\ttotal_count\n\t\titems {\n\t\t\t...product\n\t\t}\n\t\tpage_info {\n\t\t\tpage_size\n\t\t\tcurrent_page\n\t\t}\n\t}\n}\n${magentoProductFragment}\n`\n","import { DaffProduct, DaffProductTypeEnum, DaffProductDiscount } from '../../../models/product';\nimport { MagentoProduct, MagentoProductStockStatusEnum } from '../models/magento-product';\n\n/**\n * Transforms the magento MagentoProduct from the magento product query into a DaffProduct. \n * @param product a magento product\n */\nexport function transformMagentoSimpleProduct(product: MagentoProduct, mediaUrl: string): DaffProduct {\n\treturn {\n\t\ttype: DaffProductTypeEnum.Simple,\n\t\tid: product.sku,\n\t\turl: product.url_key,\n\t\tname: product.name,\n\t\tprice: getPrice(product),\n\t\tdiscount: getDiscount(product),\n\t\tin_stock: product.stock_status === MagentoProductStockStatusEnum.InStock,\n\t\timages: [\n\t\t\t{ url: product.image.url, id: '0', label: product.image.label},\n\t\t\t...transformMediaGalleryEntries(product, mediaUrl)\n\t\t],\n\t\tdescription: product.description.html\n\t}\n}\n\n/**\n * A function for null checking an object.\n */\nfunction getPrice(product: MagentoProduct): number {\n\treturn product.price_range && \n\t\tproduct.price_range.maximum_price && \n\t\tproduct.price_range.maximum_price.regular_price && \n\t\tproduct.price_range.maximum_price.regular_price.value !== null\n\t? product.price_range.maximum_price.regular_price.value : null;\n}\n\nfunction getDiscount(product: MagentoProduct): DaffProductDiscount {\n\treturn product.price_range && \n\t\tproduct.price_range.maximum_price && \n\t\tproduct.price_range.maximum_price.discount \n\t\t? { \n\t\t\tamount: product.price_range.maximum_price.discount.amount_off,\n\t\t\tpercent: product.price_range.maximum_price.discount.percent_off\n\t\t} : { amount: null, percent: null }\n}\n\nfunction transformMediaGalleryEntries(product: MagentoProduct, mediaUrl: string) {\n\treturn product.media_gallery_entries ? product.media_gallery_entries.map(image => {\n\t\treturn {\n\t\t\turl: mediaUrl + 'catalog/product' + image.file,\n\t\t\tlabel: image.label,\n\t\t\tid: image.id.toString()\n\t\t}\n\t}) : []\n}\n","import { MagentoBundledProduct, MagentoBundledProductItem, MagentoBundledProductItemOption } from '../models/bundled-product';\nimport { DaffProductDiscount, DaffProductTypeEnum } from '../../../models/product';\nimport { DaffCompositeProduct } from '../../../models/composite-product';\nimport { \n\tDaffCompositeProductItemOption, \n\tDaffCompositeProductItem, \n\tDaffCompositeProductItemInputEnum \n} from '../../../models/composite-product-item';\nimport { transformMagentoSimpleProduct } from './simple-product-transformers';\nimport { MagentoProduct, MagentoProductStockStatusEnum } from '../models/magento-product';\n\n/**\n * Transforms the magento MagentoProduct from the magento product query into a DaffProduct. \n * @param response the response from a magento product query.\n */\nexport function transformMagentoBundledProduct(product: MagentoBundledProduct, mediaUrl: string): DaffCompositeProduct {\n\treturn {\n\t\t...transformMagentoSimpleProduct(product, mediaUrl),\n\t\tprice: 0,\n\t\tdiscount: {\n\t\t\tamount: 0,\n\t\t\tpercent: 0\n\t\t},\n\t\ttype: DaffProductTypeEnum.Composite,\n\t\titems: product.items.map(transformMagentoBundledProductItem)\n\t}\n}\n\nfunction transformMagentoBundledProductItem(item: MagentoBundledProductItem): DaffCompositeProductItem {\n\treturn {\n\t\tid: item.option_id.toString(),\n\t\trequired: item.required,\n\t\ttitle: item.title,\n\t\tinput_type: <DaffCompositeProductItemInputEnum>item.type,\n\t\toptions: item.options.map(transformMagentoBundledProductItemOption)\n\t}\n}\n\nfunction transformMagentoBundledProductItemOption(option: MagentoBundledProductItemOption): DaffCompositeProductItemOption {\n\treturn {\n\t\tid: option.id.toString(),\n\t\tname: option.label,\n\t\tprice: getPrice(option.product),\n\t\timages: [],\n\t\tdiscount: getDiscount(option.product),\n\t\tquantity: option.quantity,\n\t\tis_default: option.is_default,\n\t\tin_stock: option.product.stock_status === MagentoProductStockStatusEnum.InStock\n\t}\n}\n\n/**\n * A function for null checking an object.\n */\n//TODO: use optional chaining after angular 9 and Typescript 3.7\nfunction getPrice(product: MagentoProduct): number {\n\treturn product.price_range && \n\t\tproduct.price_range.maximum_price && \n\t\tproduct.price_range.maximum_price.regular_price && \n\t\tproduct.price_range.maximum_price.regular_price.value !== null\n\t? product.price_range.maximum_price.regular_price.value : null;\n}\n\n//TODO: use optional chaining after angular 9 and Typescript 3.7\nfunction getDiscount(product: MagentoProduct): DaffProductDiscount {\n\treturn product.price_range && \n\t\tproduct.price_range.maximum_price && \n\t\tproduct.price_range.maximum_price.discount \n\t\t? { \n\t\t\tamount: product.price_range.maximum_price.discount.amount_off,\n\t\t\tpercent: product.price_range.maximum_price.discount.percent_off\n\t\t} : { amount: null, percent: null }\n}\n","import { DaffProductTypeEnum, DaffProductDiscount } from '../../../models/product';\nimport { transformMagentoSimpleProduct } from './simple-product-transformers';\nimport { \n\tMagentoConfigurableProduct, \n\tMagentoConfigurableProductOption, \n\tMagentoConfigurableProductOptionsValue, \n\tMagentoConfigurableProductVariant, \n\tMagentoConfigurableAttributeOption\n} from '../models/configurable-product';\nimport { \n\tDaffConfigurableProduct,\n\tDaffConfigurableProductAttribute,\n\tDaffConfigurableProductOptionValue,\n\tDaffConfigurableProductVariant,\n\tDaffProductVariantAttributesDictionary\n} from '../../../models/configurable-product';\nimport { MagentoProduct, MagentoProductStockStatusEnum } from '../models/magento-product';\n\n/**\n * Transforms the magento MagentoProduct from the magento product query into a DaffProduct. \n * @param response the response from a magento product query.\n */\nexport function transformMagentoConfigurableProduct(product: MagentoConfigurableProduct, mediaUrl: string): DaffConfigurableProduct {\n\treturn {\n\t\t...transformMagentoSimpleProduct(product, mediaUrl),\n\t\ttype: DaffProductTypeEnum.Configurable,\n\t\tconfigurableAttributes: product.configurable_options.map(transformOption),\n\t\tvariants: product.variants.map(transformVariant)\n\t}\n}\n\nexport function transformOption(option: MagentoConfigurableProductOption): DaffConfigurableProductAttribute {\n\treturn {\n\t\torder: option.position,\n\t\tcode: option.attribute_code,\n\t\tlabel: option.label,\n\t\tvalues: option.values.map(transformOptionValue)\n\t}\n}\n\nexport function transformOptionValue(value: MagentoConfigurableProductOptionsValue): DaffConfigurableProductOptionValue {\n\treturn {\n\t\tvalue: value.value_index.toString(),\n\t\tlabel: value.label\n\t}\n}\n\nexport function transformVariant(variant: MagentoConfigurableProductVariant): DaffConfigurableProductVariant {\n\treturn {\n\t\tid: variant.product.sku,\n\t\tappliedAttributes: transformVariantAttributes(variant.attributes),\n\t\tprice: getPrice(variant.product),\n\t\tdiscount: getDiscount(variant.product),\n\t\timage: {\n\t\t\tid: '0',\n\t\t\turl: variant.product.image.url,\n\t\t\tlabel: variant.product.image.label\n\t\t},\n\t\tin_stock: variant.product.stock_status === MagentoProductStockStatusEnum.InStock\n\t}\n}\n\nexport function transformVariantAttributes(attributes: MagentoConfigurableAttributeOption[]): DaffProductVariantAttributesDictionary {\n\tlet appliedAttributes: DaffProductVariantAttributesDictionary = {};\n\tattributes.forEach(attribute => {\n\t\tappliedAttributes = {\n\t\t\t...appliedAttributes,\n\t\t\t[attribute.code]: attribute.value_index.toString()\n\t\t}\n\t});\n\n\treturn appliedAttributes;\n}\n\n/**\n * A function for null checking an object.\n */\nfunction getPrice(product: MagentoProduct): number {\n\treturn product.price_range && \n\t\tproduct.price_range.maximum_price && \n\t\tproduct.price_range.maximum_price.regular_price && \n\t\tproduct.price_range.maximum_price.regular_price.value !== null\n\t? product.price_range.maximum_price.regular_price.value : null;\n}\n\nfunction getDiscount(product: MagentoProduct): DaffProductDiscount {\n\treturn product.price_range && \n\t\tproduct.price_range.maximum_price && \n\t\tproduct.price_range.maximum_price.discount \n\t\t? { \n\t\t\tamount: product.price_range.maximum_price.discount.amount_off,\n\t\t\tpercent: product.price_range.maximum_price.discount.percent_off\n\t\t} : { amount: null, percent: null }\n}\n","import { DaffProduct } from '../../../models/product';\nimport { MagentoProduct, MagentoProductTypeEnum } from '../models/magento-product';\nimport { MagentoBundledProduct } from '../models/bundled-product';\nimport { transformMagentoBundledProduct } from './bundled-product-transformers';\nimport { transformMagentoSimpleProduct } from './simple-product-transformers';\nimport { transformMagentoConfigurableProduct } from './configurable-product-transformers';\nimport { MagentoConfigurableProduct } from '../models/configurable-product';\n\n/**\n * Transforms the magento MagentoProduct from the magento product query into a DaffProduct. \n * @param product a magento product\n */\nexport function transformMagentoProduct(product: MagentoProduct, mediaUrl?: string): DaffProduct {\n\tswitch(product.__typename) {\n\t\tcase MagentoProductTypeEnum.BundledProduct:\n\t\t\treturn transformMagentoBundledProduct(<MagentoBundledProduct>product, mediaUrl);\n\t\tcase MagentoProductTypeEnum.ConfigurableProduct:\n\t\t\treturn transformMagentoConfigurableProduct(<MagentoConfigurableProduct>product, mediaUrl);\n\t\tdefault:\n\t\t\treturn transformMagentoSimpleProduct(product, mediaUrl);\n\t}\n}\n\n/**\n * Transforms many magento MagentoProducts from the magento product query into DaffProducts.\n */\nexport function transformManyMagentoProducts(products: MagentoProduct[], mediaUrl?: string): DaffProduct[] {\n\treturn products.map(product => transformMagentoProduct(product, mediaUrl));\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Apollo } from 'apollo-angular';\n\nimport { DaffProductServiceInterface } from '../interfaces/product-service.interface';\nimport { GetAllProductsQuery } from './queries/get-all-products';\nimport { GetProductQuery } from './queries/get-product';\nimport { transformMagentoProduct, transformManyMagentoProducts } from './transforms/product-transformers';\nimport { DaffProduct } from '../../models/product';\n\n/**\n * A service for making magento apollo queries for products of type, DaffProduct.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffMagentoProductService implements DaffProductServiceInterface {  \n  constructor(private apollo: Apollo) {}\n\n  /**\n   * Get an Observable of a DaffProduct by id.\n   * @param productId a product Id\n   */\n  get(productId: string): Observable<DaffProduct> {\n    return this.apollo.query<any>({\n\t\t\tquery: GetProductQuery,\n\t\t\tvariables: {\n\t\t\t\tsku: productId\n\t\t\t}\n\t\t}).pipe(\n      map(result => transformMagentoProduct(result.data.products.items[0], result.data.storeConfig.secure_base_media_url))\n    );\n  }\n\n  /**\n   * Get an Observable of an array of DaffProducts.\n   */\n  getAll(): Observable<DaffProduct[]> {\n    return this.apollo.query<any>({\n\t\t\tquery: GetAllProductsQuery\n\t\t}).pipe(\n      map(result => transformManyMagentoProducts(result.data.products.items, result.data.storeConfig.secure_base_media_url))\n    );\n  }\n\n  //todo: add actual getBestSellers apollo call for Magento.\n  //todo: move to a different bestsellers module.\n  getBestSellers(): Observable<DaffProduct[]> {\n    return of(null);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DaffProductDriver } from '../injection-tokens/product-driver.token';\nimport { DaffMagentoProductService } from './product.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ]\n})\nexport class DaffProductMagentoDriverModule {\n  static forRoot(): ModuleWithProviders<DaffProductMagentoDriverModule> {\n    return {\n      ngModule: DaffProductMagentoDriverModule,\n      providers: [\n        {\n          provide: DaffProductDriver,\n          useExisting: DaffMagentoProductService\n\t\t\t\t}\n      ]\n    };\n  }\n}\n"],"names":["initialState","tslib_1.__decorate","GetAllProductsQuery","getPrice","getDiscount"],"mappings":"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"}