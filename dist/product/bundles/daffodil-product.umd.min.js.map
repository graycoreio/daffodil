{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@daffodil/product/models/product.ts","ng://@daffodil/product/actions/product.actions.ts","ng://@daffodil/product/actions/product-grid.actions.ts","ng://@daffodil/product/actions/best-sellers.actions.ts","ng://@daffodil/product/actions/configurable-product.actions.ts","ng://@daffodil/product/actions/composite-product.actions.ts","ng://@daffodil/product/resolvers/product-page/product-page.resolver.ts","ng://@daffodil/product/reducers/product-grid/product-grid.reducer.ts","ng://@daffodil/product/reducers/product/product.reducer.ts","ng://@daffodil/product/reducers/best-sellers/best-sellers.reducer.ts","ng://@daffodil/product/reducers/product-entities/product-entities-reducer-adapter.ts","ng://@daffodil/product/reducers/product-entities/product-entities.reducer.ts","ng://@daffodil/product/reducers/configurable-product-entities/configurable-product-entities-reducer-adapter.ts","ng://@daffodil/product/reducers/configurable-product-entities/configurable-product-entities.reducer.ts","ng://@daffodil/product/reducers/composite-product-entities/composite-product-entities-reducer-adapter.ts","ng://@daffodil/product/reducers/composite-product-entities/composite-product-entities.reducer.ts","ng://@daffodil/product/reducers/product-reducers.ts","ng://@daffodil/product/selectors/product-feature.selector.ts","ng://@daffodil/product/selectors/product/product.selectors.ts","ng://@daffodil/product/selectors/product-entities/product-entities.selectors.ts","ng://@daffodil/product/selectors/best-sellers/best-sellers.selectors.ts","ng://@daffodil/product/selectors/product-grid/product-grid.selectors.ts","ng://@daffodil/product/selectors/configurable-product-entities/configurable-product-entities.selectors.ts","ng://@daffodil/product/selectors/configurable-product/configurable-product.selectors.ts","ng://@daffodil/product/selectors/composite-product-entities/composite-product-entities.selectors.ts","ng://@daffodil/product/selectors/composite-product/composite-product.selectors.ts","ng://@daffodil/product/selectors/all-selectors.selectors.ts","ng://@daffodil/product/drivers/injection-tokens/product-driver.token.ts","ng://@daffodil/product/effects/product-grid.effects.ts","ng://@daffodil/product/effects/product.effects.ts","ng://@daffodil/product/effects/best-seller.effects.ts","ng://@daffodil/product/product-state.module.ts","ng://@daffodil/product/product.module.ts","ng://@daffodil/product/drivers/shopify/product.service.ts","ng://@daffodil/product/drivers/shopify/product-driver.module.ts","ng://@daffodil/product/facades/product-grid/product-grid.facade.ts","ng://@daffodil/product/facades/product/product.facade.ts","ng://@daffodil/product/facades/configurable-product/configurable-product.facade.ts","ng://@daffodil/product/facades/helpers.ts","ng://@daffodil/product/facades/composite-product/composite-product.facade.ts","ng://@daffodil/product/facades/best-sellers/best-sellers.facade.ts","ng://@daffodil/product/drivers/magento/models/magento-product.ts","ng://@daffodil/product/drivers/magento/queries/fragments/bundled-product.ts","ng://@daffodil/product/drivers/magento/queries/fragments/simple-product.ts","ng://@daffodil/product/drivers/magento/queries/fragments/configurable-product.ts","ng://@daffodil/product/drivers/magento/queries/fragments/product.ts","ng://@daffodil/product/drivers/magento/queries/get-product.ts","ng://@daffodil/product/drivers/magento/queries/get-all-products.ts","ng://@daffodil/product/drivers/magento/transforms/simple-product-transformers.ts","ng://@daffodil/product/drivers/magento/transforms/bundled-product-transformers.ts","ng://@daffodil/product/drivers/magento/transforms/configurable-product-transformers.ts","ng://@daffodil/product/drivers/magento/transforms/product-transformers.ts","ng://@daffodil/product/drivers/magento/product.service.ts","ng://@daffodil/product/drivers/magento/product-driver.module.ts","ng://@daffodil/product/models/composite-product-item.ts","ng://@daffodil/product/drivers/magento/models/bundled-product.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__read","o","m","Symbol","iterator","e","ar","next","done","push","value","error","__spread","concat","__makeTemplateObject","cooked","raw","Simple","Composite","Configurable","ProductLoadAction","ProductLoadSuccessAction","ProductLoadFailureAction","UpdateQtyAction","ProductModifyAction","payload","type","DaffProductActionTypes","ProductGridLoadAction","ProductGridLoadSuccessAction","ProductGridLoadFailureAction","ProductGridResetAction","DaffProductGridActionTypes","BestSellersLoadAction","BestSellersLoadSuccessAction","BestSellersLoadFailureAction","BestSellersResetAction","DaffBestSellersActionTypes","ConfigurableProductApplyAttributeAction","ConfigurableProductRemoveAttributeAction","ConfigurableProductToggleAttributeAction","id","attributeId","attributeValue","DaffConfigurableProductActionTypes","CompositeProductApplyOptionAction","itemId","optionId","qty","DaffCompositeProductActionTypes","DaffProductPageResolver","platformId","store","dispatcher","resolve","route","dispatch","DaffProductLoad","paramMap","get","isPlatformBrowser","of","pipe","ofType","mapTo","take","Injectable","args","providedIn","Inject","PLATFORM_ID","Store","ActionsSubject","initialState","products","loading","errors","daffProductGridReducer","state","action","Array","selectedProductId","daffProductReducer","initialState$1","productIds","resetState","daffBestSellersReducer","initialState$2","getIds","ids","forEach","product","cache","daffProductEntitiesAdapter","createEntityAdapter","daffProductEntitiesReducer","getInitialState","adapter","upsertMany","upsertOne","removeAll","daffConfigurableProductAppliedAttributesEntitiesAdapter","daffConfigurableProductEntitiesReducer","currentAttributes","attributeCode","index","filter","DaffProductTypeEnum","map","buildConfigurableProductAppliedAttributesEntity","attributes","applyAttribute","entities","removeAttribute","findIndex","attribute","code","appliedAttributeCode","appliedAttributeValue","attributeIndex","slice","daffCompositeProductAppliedOptionsEntitiesAdapter","daffCompositeProductEntitiesReducer","buildCompositeProductAppliedOptionsEntity","items","_a","reduce","acc","item","defaultOptionIndex","options","option","is_default","in_stock","quantity","getDefaultOption","daffProductReducers","productGrid","bestSellers","configurableProductAttributes","compositeProductOptions","getDaffProductFeatureSelector","selectProductState","createFeatureSelector","createProductPageSelectors","selectSelectedProductState","createSelector","selectSelectedProductId","selectSelectedProductQty","selectSelectedProductLoadingState","selectSelectedProduct","getDaffProductPageSelectors","createProductEntitiesSelectors","adapterSelectors","getSelectors","selectProductEntitiesState","selectProductIds","selectIds","selectProductEntities","selectEntities","selectAllProducts","selectAll","selectProductTotal","selectTotal","selectProduct","props","selectProductPrice","projector","price","selectProductDiscountAmount","discount","amount","selectProductDiscountedPrice","discountAmount","daffSubtract","selectProductDiscountPercent","percent","selectProductHasDiscount","selectIsProductOutOfStock","getDaffProductEntitiesSelectors","createBestSellersSelectors","selectBestSellersState","selectBestSellersLoadingState","selectBestSellersIdsState","selectBestSellersProducts","indexOf","getDaffBestSellersSelectors","createProductGridSelectors","selectProductGridState","selectProductGridLoadingState","getDaffProductGridSelectors","createConfigurableProductAppliedAttributesEntitiesSelectors","selectConfigurableProductAppliedAttributesEntitiesState","selectConfigurableProductIds","selectConfigurableProductAppliedAttributesEntities","selectConfigurableProductTotal","selectConfigurableProductAppliedAttributes","selectConfigurableProductAppliedAttributesAsDictionary","getDaffConfigurableProductEntitiesSelectors","createConfigurableProductSelectors","_b","selectAllConfigurableProductVariants","variants","selectMatchingConfigurableProductVariants","appliedAttributesEntities","appliedAttributes","variant","isVariantAvailable","selectConfigurableProductPrices","selectConfigurableProductDiscountedPrices","selectConfigurableProductPercentDiscounts","selectConfigurableProductHasDiscount","selectConfigurableProductMinimumPrice","getMinimumPrice","selectConfigurableProductMaximumPrice","getMaximumPrice","selectConfigurableProductMinimumDiscountedPrice","selectConfigurableProductMaximumDiscountedPrice","selectConfigurableProductMinimumPercentDiscount","selectConfigurableProductMaximumPercentDiscount","isConfigurablePriceRanged","selectAllConfigurableProductAttributes","configurableAttributes","values","selectSelectableConfigurableProductAttributes","selectableAttributes","matchedVariants","matchingVariants","appliedAttribute","filteredVariants","getSelectableAttributesFromVariants","selectedAttributes","attributeArray","variantValue","getDaffConfigurableProductSelectors","prices","createCompositeProductAppliedOptionsEntitiesSelectors","selectCompositeProductAppliedOptionsEntitiesState","selectCompositeProductIds","selectCompositeProductAppliedOptionsEntities","selectCompositeProductTotal","selectCompositeProductAppliedOptions","appliedOptions","find","selectIsCompositeProductItemRequired","productItem","item_id","required","getDaffCompositeProductEntitiesSelectors","createCompositeProductSelectors","selectCompositeProductRequiredItemPricesForConfiguration","configuration","getAppliedOptionsForConfiguration","minPrice","getMinPricesForConfiguration","maxPrice","getMaxPricesForConfiguration","selectCompositeProductOptionalItemPricesForConfiguration","getMaxPricesForConfigurationIncludingOptionalItems","selectCompositeProductPricesAsCurrentlyConfigured","appliedOptionsEntities","getDaffCompositeProductSelectors","discountedPrice","daffAdd","appliedOptionHasId","daffMultiply","getDiscountedPrice","Math","min","getMinimumRequiredCompositeItemDiscountedPrice","getOptionQty","originalPrice","getMinimumRequiredCompositeItemPrice","max","getMaximumRequiredCompositeItemDiscountedPrice","getMaximumRequiredCompositeItemPrice","appliedOptionHasQty","undefined","appliedOption","getDaffProductSelectors","DaffProductDriver","InjectionToken","DaffProductGridEffects","actions$","driver","_this","loadAll$","switchMap","getAll","resp","DaffProductGridLoadSuccess","catchError","DaffProductGridLoadFailure","Actions","tslib_1.__decorate","Effect","Observable","DaffProductEffects","load$","DaffProductLoadSuccess","DaffProductLoadFailure","DaffBestSellersEffects","loadBestSellers$","getBestSellers","DaffBestSellersLoadSuccess","DaffBestSellersLoadFailure","DaffProductStateModule","NgModule","imports","StoreModule","forFeature","EffectsModule","DaffProductModule","CommonModule","GetAllProductsQuery","gql","templateObject_1","GetAProduct","templateObject_2","DaffShopifyProductTransformer","node","name","title","images","DaffShopifyProductService","apollo","defaultLength","query","variables","result","data","shop","edges","edge","productId","Apollo","DaffProductShopifyDriverModule","forRoot","ngModule","providers","provide","useExisting","DaffProductGridFacade","loading$","select","products$","DaffProductFacade","selectors","product$","getProduct","getPrice","hasDiscount","getDiscountAmount","getDiscountPercent","isOutOfStock","DaffConfigurableProductFacade","getAllAttributes","getAllVariants","getAppliedAttributes","getMinimumDiscountedPrice","getMaximumDiscountedPrice","getMinimumPercentDiscount","getMaximumPercentDiscount","isPriceRanged","getSelectableAttributes","getMatchingVariants","productPriceRangeHasDiscount","priceRange","productPriceRangeHasPriceRange","DaffCompositeProductFacade","hasPriceRange","getRequiredItemPricesForConfiguration","getOptionalItemPricesForConfiguration","getPricesAsCurrentlyConfigured","getAppliedOptions","isItemRequired","DaffBestSellersFacade","bestSellers$","BundledProduct","ConfigurableProduct","SimpleProduct","InStock","OutOfStock","magentoBundledProductFragment","templateObject_1$1","magentoSimpleProductFragment","templateObject_1$2","magentoConfigurableProductFragment","templateObject_1$3","magentoProductFragment","templateObject_1$4","GetProductQuery","templateObject_1$5","templateObject_1$6","transformMagentoSimpleProduct","mediaUrl","sku","url","url_key","getDiscount","stock_status","MagentoProductStockStatusEnum","image","label","transformMediaGalleryEntries","description","html","price_range","maximum_price","regular_price","amount_off","percent_off","media_gallery_entries","file","toString","transformMagentoBundledProductItem","option_id","input_type","transformMagentoBundledProductItemOption","transformOption","order","position","attribute_code","transformOptionValue","value_index","transformVariant","transformVariantAttributes","transformMagentoProduct","__typename","MagentoProductTypeEnum","transformMagentoBundledProduct","configurable_options","transformMagentoConfigurableProduct","transformManyMagentoProducts","DaffMagentoProductService","storeConfig","secure_base_media_url","DaffProductMagentoDriverModule","radio","fixed","dynamic"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { DaffProductImage } from './product-image';\n\nexport enum DaffProductTypeEnum {\n\tSimple = 'simple',\n\tComposite = 'composite',\n\tConfigurable = 'configurable'\n}\n\n/**\n * An interface for a product usable by the @daffodil/product library.\n */\nexport interface DaffProduct {\n\tid: string;\n\ttype?: DaffProductTypeEnum;\n\turl?: string;\n\tprice?: number;\n\tdiscount?: DaffProductDiscount;\n  name?: string;\n  brand?: string;\n  description?: string;\n\timages: DaffProductImage[];\n\tin_stock?: boolean;\n}\n\n/**\n * The discount for a product.\n */\nexport interface DaffProductDiscount {\n\tamount: number;\n\tpercent: number;\n}\n","import { Action } from '@ngrx/store';\nimport { DaffProduct } from '../models/product';\n\n/**\n * Action types for Product Actions.\n */\nexport enum DaffProductActionTypes {\n    ProductLoadAction = '[Product] Load Action',\n    ProductLoadSuccessAction = '[Product] Load Success Action',\n    ProductLoadFailureAction = '[Product] Load Failure Action',\n    UpdateQtyAction = '[Product] Update Qty Action',\n    ProductModifyAction = '[Product] Product Modify Action'\n}\n\n/**\n * Triggers a request for a Product.\n * \n * @param payload - Id of requested Product\n */\nexport class DaffProductLoad implements Action {\n  readonly type = DaffProductActionTypes.ProductLoadAction;\n\n  constructor(public payload: string) {}\n}\n\n/**\n * An action called when a request for a Product succeeded.\n * \n * @param payload - A Product\n */\nexport class DaffProductLoadSuccess<T extends DaffProduct = DaffProduct> implements Action {\n    readonly type = DaffProductActionTypes.ProductLoadSuccessAction;\n\n    constructor(public payload: T) {}\n}\n\n/**\n * An action called when a request for a Product failed.\n * \n * @param payload - An error message\n */\nexport class DaffProductLoadFailure implements Action {\n  readonly type = DaffProductActionTypes.ProductLoadFailureAction;\n\n  constructor(public payload: string) {}\n}\n\n/**\n * Update the qty of a product in an redux store.\n * \n * @param payload - The qty of the product.\n */\nexport class DaffProductUpdateQty implements Action {\n    readonly type = DaffProductActionTypes.UpdateQtyAction;\n\n    constructor(public payload: number) {}\n}\n\nexport type DaffProductActions<T extends DaffProduct = DaffProduct> = \n    | DaffProductLoad \n    | DaffProductLoadSuccess<T>\n    | DaffProductLoadFailure\n    | DaffProductUpdateQty;","import { Action } from '@ngrx/store';\n\nimport { DaffProduct } from '../models/product';\n\n/** \n * Action types for Product Grid Actions.\n*/\nexport enum DaffProductGridActionTypes {\n    ProductGridLoadAction = '[ProductGrid] Load Action',\n    ProductGridLoadSuccessAction = '[ProductGrid] Load Success Action',\n    ProductGridLoadFailureAction = '[ProductGrid] Load Failure Action',\n    ProductGridResetAction = '[ProductGrid] Reset Action'\n}\n\n/**\n * Triggers a request for an array of products.\n */\nexport class DaffProductGridLoad implements Action {\n  readonly type = DaffProductGridActionTypes.ProductGridLoadAction;\n\n  constructor() {}\n}\n\n/**\n * An action called when a request for of an array of products succeeded.\n * \n * @param payload - An array of Products\n */\nexport class DaffProductGridLoadSuccess<T extends DaffProduct = DaffProduct> implements Action {\n    readonly type = DaffProductGridActionTypes.ProductGridLoadSuccessAction;\n\n    constructor(public payload: T[]) {}\n}\n\n/**\n * An action called when a request for an array of products failed.\n * \n * @param payload - An error message\n */\nexport class DaffProductGridLoadFailure implements Action {\n  readonly type = DaffProductGridActionTypes.ProductGridLoadFailureAction;\n\n  constructor(public payload: string) {}\n}\n\n/**\n * Resets the state of the product grid redux store to its initial state.\n */\nexport class DaffProductGridReset implements Action {\n    readonly type = DaffProductGridActionTypes.ProductGridResetAction;\n\n    constructor() {}\n}\n\nexport type DaffProductGridActions<T extends DaffProduct = DaffProduct> = \n    | DaffProductGridLoad \n    | DaffProductGridLoadSuccess<T>\n    | DaffProductGridLoadFailure\n    | DaffProductGridReset;","import { Action } from '@ngrx/store';\n\nimport { DaffProduct } from '../models/product';\n\n/**\n * Action types for Best Seller Actions.\n */\nexport enum DaffBestSellersActionTypes {\n  BestSellersLoadAction = '[BestSellers] Load Action',\n  BestSellersLoadSuccessAction = '[BestSellers] Load Success Action',\n  BestSellersLoadFailureAction = '[BestSellers] Load Failure Action',\n  BestSellersResetAction = '[BestSellers] Reset Action'\n}\n\n/**\n * Triggers a request for best selling products.\n */\nexport class DaffBestSellersLoad implements Action {\n  readonly type = DaffBestSellersActionTypes.BestSellersLoadAction;\n\n  constructor() {}\n}\n\n/**\n * An action called when a request for best selling products succeeded.\n * \n * @param payload - An array of Products\n */\nexport class DaffBestSellersLoadSuccess<T extends DaffProduct = DaffProduct> implements Action {\n  readonly type = DaffBestSellersActionTypes.BestSellersLoadSuccessAction;\n\n  constructor(public payload: T[]) {}\n}\n\n/**\n * An action called when a request for best selling products failed.\n * \n * @param payload - An error message\n */\nexport class DaffBestSellersLoadFailure implements Action {\n  readonly type = DaffBestSellersActionTypes.BestSellersLoadFailureAction;\n\n  constructor(public payload: string) {}\n}\n\n/**\n * Resets the state of the best sellers redux store to its initial state.\n */\nexport class DaffBestSellersReset implements Action {\n  readonly type = DaffBestSellersActionTypes.BestSellersResetAction;\n\n  constructor() {}\n}\n\nexport type DaffBestSellersActions<T extends DaffProduct = DaffProduct> = \n    | DaffBestSellersLoad \n    | DaffBestSellersLoadSuccess<T>\n    | DaffBestSellersLoadFailure\n    | DaffBestSellersReset;\n    ","import { Action } from '@ngrx/store';\n\nimport { DaffConfigurableProduct } from '../models/configurable-product';\n\n/**\n * Action types for Configurable Product Actions.\n */\nexport enum DaffConfigurableProductActionTypes {\n\tConfigurableProductApplyAttributeAction = '[Configurable Product] Configurable Product Apply Attribute Action',\n\tConfigurableProductRemoveAttributeAction = '[Configurable Product] Configurable Product Remove Attribute Action',\n\tConfigurableProductToggleAttributeAction = '[Configurable Product] Configurable Product Toggle Attribute Action',\n}\n\n/**\n * Applies an attribute to a particular configurable product.\n * \n * @param id - Id of the Configurable Product\n * @param attributeId - Id of the attribute to be applied\n * @param attributeValue - Value of the attribute to be applied\n */\nexport class DaffConfigurableProductApplyAttribute<T extends DaffConfigurableProduct> implements Action {\n  readonly type = DaffConfigurableProductActionTypes.ConfigurableProductApplyAttributeAction;\n\n  constructor(public id: T['id'], public attributeId: string, public attributeValue: string) {}\n}\n\n/**\n * Removes an applied attribute from a particular configurable product.\n * \n * @param id - Id of the Configurable Product\n * @param attributeId - Id of the attribute to be removed\n */\nexport class DaffConfigurableProductRemoveAttribute<T extends DaffConfigurableProduct> implements Action {\n  readonly type = DaffConfigurableProductActionTypes.ConfigurableProductRemoveAttributeAction;\n\n  constructor(public id: T['id'], public attributeId: string) {}\n}\n\n/**\n * Toggles an attribute of a particular configurable product. If the attribute type of the configurable product already has \n * a different value than the one provided in the action, the attribute value in state will be overwritten by the value provided \n * in the action.\n * \n * @param id - Id of the Configurable Product\n * @param attributeId - Id of the attribute to be toggled\n * @param attributeValue - Value of the attribute to be toggled\n */\nexport class DaffConfigurableProductToggleAttribute<T extends DaffConfigurableProduct> implements Action {\n  readonly type = DaffConfigurableProductActionTypes.ConfigurableProductToggleAttributeAction;\n\n  constructor(public id: T['id'], public attributeId: string, public attributeValue: string) {}\n}\n\nexport type DaffConfigurableProductActions<T extends DaffConfigurableProduct = DaffConfigurableProduct> = \n    | DaffConfigurableProductApplyAttribute<T>\n    | DaffConfigurableProductRemoveAttribute<T>\n    | DaffConfigurableProductToggleAttribute<T>;","import { Action } from '@ngrx/store';\n\nimport { DaffCompositeProduct } from '../models/composite-product';\nimport { DaffCompositeProductItem, DaffCompositeProductItemOption } from '../models/composite-product-item';\n\n/**\n * Action types for Composite Product Actions.\n */\nexport enum DaffCompositeProductActionTypes {\n\tCompositeProductApplyOptionAction = '[Composite Product] Composite Product Apply Option Action'\n}\n\n/**\n * Applies a product option to a particular composite product.\n * \n * @param id - Id of the Composite Product\n * @param itemId - Id of the product item.\n * @param optionId - Id of the option of the product item that is chosen.\n */\nexport class DaffCompositeProductApplyOption<T extends DaffCompositeProduct> implements Action {\n  readonly type = DaffCompositeProductActionTypes.CompositeProductApplyOptionAction;\n\n  constructor(public id: T['id'], public itemId: DaffCompositeProductItem['id'], public optionId: DaffCompositeProductItemOption['id'], public qty?: number) {}\n}\n\nexport type DaffCompositeProductActions<T extends DaffCompositeProduct = DaffCompositeProduct> = \n\t| DaffCompositeProductApplyOption<T>;\n","import { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core'\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router'\nimport { ofType } from '@ngrx/effects';\nimport { ActionsSubject, Store } from '@ngrx/store';\nimport { Observable, of } from 'rxjs'\nimport { mapTo, take } from 'rxjs/operators';\n\nimport { DaffProductActionTypes, DaffProductLoad } from '../../actions/product.actions';\nimport { DaffProductReducersState } from '../../reducers/public_api';\n\n/**\n * Resolves product data for product pages, and will only resolve the url after a product request succeeds or fails. This resolver expects a url\n * of the form `some/url/{id}` where `{id}` is the product id.\n */\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class DaffProductPageResolver implements Resolve<Observable<boolean>> {\n  constructor(\n\t\t@Inject(PLATFORM_ID) private platformId: string,\n\t\tprivate store: Store<DaffProductReducersState>,\n    private dispatcher: ActionsSubject,\n\t) {}\n\t\n\tresolve(route: ActivatedRouteSnapshot): Observable<boolean> {\n\t\tthis.store.dispatch(new DaffProductLoad(route.paramMap.get('id')));\n\n\t\treturn isPlatformBrowser(this.platformId) ? of(true) : this.dispatcher.pipe(\n\t\t\tofType(DaffProductActionTypes.ProductLoadSuccessAction, DaffProductActionTypes.ProductLoadFailureAction),\n\t\t\tmapTo(true),\n\t\t\ttake(1)\n\t\t);\n\t}\n}\n","import { DaffProductGridActionTypes, DaffProductGridActions } from '../../actions/product-grid.actions';\nimport { DaffProductGridReducerState } from './product-grid-reducer-state.interface';\nimport { DaffProduct } from '../../models/product';\n\n/**\n * Initial values of the product grid state.\n */\nexport const initialState: DaffProductGridReducerState<any> = {\n  products: [],\n  loading: false,\n  errors: []\n};\n\n/**\n * Reducer function that catches actions and changes/overwrites product grid state.\n * \n * @param state current State of the redux store\n * @param action a product grid action\n * @returns Product grid state\n */\nexport function daffProductGridReducer<T extends DaffProduct>(state = initialState, action: DaffProductGridActions<T>): DaffProductGridReducerState<T> {\n  switch (action.type) {\n    case DaffProductGridActionTypes.ProductGridLoadAction:\n      return {...state, loading: true};\n    case DaffProductGridActionTypes.ProductGridLoadSuccessAction:\n      return {...state, loading: false};\n    case DaffProductGridActionTypes.ProductGridLoadFailureAction:\n      return {...state, \n        loading: false, \n        errors: state.errors.concat(new Array(action.payload))\n      };\n    default:\n      return state;\n  }\n}\n","import { DaffProductReducerState } from './product-reducer-state.interface';\nimport { DaffProductActionTypes, DaffProductActions } from '../../actions/product.actions';\nimport { DaffProduct } from '../../models/product';\n\n/**\n * Initial values of the product state.\n */\nexport const initialState: DaffProductReducerState = {\n  selectedProductId: null,\n  qty: 1,\n  loading: false,\n  errors: []\n};\n\n/**\n * Reducer function that catches actions and changes/overwrites product state.\n * \n * @param state current State of the redux store\n * @param action a product action\n * @returns product state\n */\nexport function daffProductReducer<T extends DaffProduct>(state = initialState, action: DaffProductActions<T>): DaffProductReducerState {\n  switch (action.type) {\n    case DaffProductActionTypes.ProductLoadAction:\n      return {...state, loading: true, selectedProductId: action.payload};\n    case DaffProductActionTypes.ProductLoadSuccessAction:\n      return {...state, loading: false};\n    case DaffProductActionTypes.ProductLoadFailureAction:\n      return {...state, \n        loading: false, \n        errors: state.errors.concat(new Array(action.payload))\n      };\n    case DaffProductActionTypes.UpdateQtyAction:\n      return {...state, qty: action.payload}\n    default:\n      return state;\n  }\n}\n","import { DaffBestSellersActionTypes, DaffBestSellersActions } from '../../actions/best-sellers.actions';\nimport { DaffProduct } from '../../models/product';\nimport { DaffBestSellersReducerState } from './best-sellers-reducer-state.interface';\n\nexport const initialState: DaffBestSellersReducerState = {\n  productIds: [],\n  loading: false,\n  errors: []\n};\n\nexport const resetState: DaffBestSellersReducerState = Object.assign({}, initialState);\n\nexport function daffBestSellersReducer<T extends DaffProduct>(state = initialState, action: DaffBestSellersActions<T>): DaffBestSellersReducerState {\n  switch (action.type) {\n    case DaffBestSellersActionTypes.BestSellersLoadAction:\n      return {...state, loading: true};\n    case DaffBestSellersActionTypes.BestSellersLoadSuccessAction:\n      return {...state, loading: false, productIds: getIds<T>(action.payload)};\n    case DaffBestSellersActionTypes.BestSellersLoadFailureAction:\n      return {...state, \n        loading: false, \n        errors: state.errors.concat(new Array(action.payload))\n      };\n    case DaffBestSellersActionTypes.BestSellersResetAction:\n      return {\n        ...resetState\n      }\n    default:\n      return state;\n  }\n}\n\nfunction getIds<T extends DaffProduct>(products: T[]): string[] {\n  const ids: string[] = new Array();\n\n  products.forEach(product => {\n    ids.push(product.id)\n  });\n\n  return ids;\n}\n","import { EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport { DaffProduct } from '../../models/product';\n\n/**\n * Product Adapter for changing/overwriting entity state.\n */\nexport const daffProductEntitiesAdapter = (() => {\n\tlet cache;\n  return <T extends DaffProduct>(): EntityAdapter<T> =>\n    cache = cache || createEntityAdapter<T>();\n})();","import { EntityState } from '@ngrx/entity';\n\nimport { DaffProductGridActionTypes, DaffProductGridActions } from '../../actions/product-grid.actions';\nimport { DaffProductActionTypes, DaffProductActions } from '../../actions/product.actions';\nimport { DaffBestSellersActionTypes, DaffBestSellersActions } from '../../actions/best-sellers.actions';\nimport { daffProductEntitiesAdapter } from './product-entities-reducer-adapter';\nimport { DaffProduct } from '../../models/product';\n\n/**\n * Reducer function that catches actions and changes/overwrites product entities state.\n * \n * @param state current State of the redux store\n * @param action ProductGrid, BestSellers, or Product actions\n * @returns Product entities state\n */\nexport function daffProductEntitiesReducer<T extends DaffProduct>(\n  state = daffProductEntitiesAdapter<T>().getInitialState(), \n  action: DaffProductGridActions<T> | DaffBestSellersActions<T> | DaffProductActions<T>): EntityState<T> {\n\tconst adapter = daffProductEntitiesAdapter<T>();\n  switch (action.type) {\n    case DaffProductGridActionTypes.ProductGridLoadSuccessAction:\n      return adapter.upsertMany(action.payload, state);\n    case DaffBestSellersActionTypes.BestSellersLoadSuccessAction:\n      return adapter.upsertMany(action.payload, state);\n    case DaffProductActionTypes.ProductLoadSuccessAction:\n      return adapter.upsertOne(\n        { \n          id: action.payload.id, \n          ...action.payload\n        },\n        state\n      );\n    case DaffProductGridActionTypes.ProductGridResetAction:\n      return adapter.removeAll(state);\n    default:\n      return state;\n  }\n}\n","import { EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport { DaffConfigurableProductEntity } from './configurable-product-entity';\n\n/**\n * Configurable Product Applied Attributes Adapter for changing/overwriting entity state.\n */\nexport const daffConfigurableProductAppliedAttributesEntitiesAdapter = (() => {\n\tlet cache;\n  return (): EntityAdapter<DaffConfigurableProductEntity> =>\n    cache = cache || createEntityAdapter<DaffConfigurableProductEntity>();\n})();","import { EntityState } from '@ngrx/entity';\n\nimport { DaffProductGridActionTypes, DaffProductGridActions } from '../../actions/product-grid.actions';\nimport { DaffProductActionTypes, DaffProductActions } from '../../actions/product.actions';\nimport { DaffBestSellersActionTypes, DaffBestSellersActions } from '../../actions/best-sellers.actions';\nimport { daffConfigurableProductAppliedAttributesEntitiesAdapter } from './configurable-product-entities-reducer-adapter';\nimport { DaffProduct, DaffProductTypeEnum } from '../../models/product';\nimport { DaffConfigurableProductActions, DaffConfigurableProductActionTypes } from '../../actions/configurable-product.actions';\nimport { DaffConfigurableProduct } from '../../models/configurable-product';\nimport { DaffConfigurableProductEntity, DaffConfigurableProductEntityAttribute } from './configurable-product-entity';\n\n/**\n * Reducer function that catches actions and changes/overwrites product entities state.\n * \n * @param state current State of the redux store\n * @param action ProductGrid, BestSellers, Product, or Configurable Product actions\n * @returns Product entities state\n */\nexport function daffConfigurableProductEntitiesReducer<T extends DaffProduct, V extends DaffConfigurableProduct>(\n  state = daffConfigurableProductAppliedAttributesEntitiesAdapter().getInitialState(), \n  action: DaffProductGridActions<T> | DaffBestSellersActions<T> | DaffProductActions<T> | DaffConfigurableProductActions<V>): EntityState<DaffConfigurableProductEntity> {\n\tconst adapter = daffConfigurableProductAppliedAttributesEntitiesAdapter();\n  switch (action.type) {\n    case DaffProductGridActionTypes.ProductGridLoadSuccessAction:\n\t\tcase DaffBestSellersActionTypes.BestSellersLoadSuccessAction:\n\t\t\treturn adapter.upsertMany(\n\t\t\t\taction.payload\n\t\t\t\t\t.filter(product => product.type === DaffProductTypeEnum.Configurable)\n\t\t\t\t\t.map(buildConfigurableProductAppliedAttributesEntity), \n\t\t\t\tstate\n\t\t\t);\n    case DaffProductActionTypes.ProductLoadSuccessAction:\n\t\t\tif(action.payload.type === DaffProductTypeEnum.Configurable) {\n\t\t\t\treturn adapter.upsertOne(\n\t\t\t\t\tbuildConfigurableProductAppliedAttributesEntity(action.payload),\n\t\t\t\t\tstate\n\t\t\t\t);\n\t\t\t};\n\t\t\treturn state;\n\t\tcase DaffConfigurableProductActionTypes.ConfigurableProductApplyAttributeAction:\n\t\t\treturn adapter.upsertOne(\n\t\t\t\t{\n\t\t\t\t\tid: action.id,\n\t\t\t\t\tattributes: applyAttribute(state.entities[action.id].attributes, action.attributeId, action.attributeValue),\n\t\t\t\t},\n\t\t\t\tstate\n\t\t\t);\n\t\tcase DaffConfigurableProductActionTypes.ConfigurableProductRemoveAttributeAction:\n\t\t\treturn adapter.upsertOne(\n\t\t\t\t{\n\t\t\t\t\tid: action.id,\n\t\t\t\t\tattributes: removeAttribute(state.entities[action.id].attributes, action.attributeId)\n\t\t\t\t},\n\t\t\t\tstate\n\t\t\t);\n\t\tcase DaffConfigurableProductActionTypes.ConfigurableProductToggleAttributeAction:\n\t\t\treturn adapter.upsertOne(\n\t\t\t\t{\n\t\t\t\t\tid: action.id,\n\t\t\t\t\tattributes: isAttributeSelected(state.entities[action.id].attributes, action.attributeId, action.attributeValue) ?\n\t\t\t\t\t\tremoveAttribute(state.entities[action.id].attributes, action.attributeId) :\n\t\t\t\t\t\tapplyAttribute(state.entities[action.id].attributes, action.attributeId, action.attributeValue)\n\t\t\t\t},\n\t\t\t\tstate\n\t\t\t);\n    default:\n      return state;\n  }\n}\n\nfunction buildConfigurableProductAppliedAttributesEntity(product: DaffProduct): DaffConfigurableProductEntity {\n\treturn {\n\t\tid: product.id,\n\t\tattributes: []\n\t}\n}\n\nfunction applyAttribute(currentAttributes: DaffConfigurableProductEntityAttribute[], appliedAttributeCode: string, appliedAttributeValue: string): DaffConfigurableProductEntityAttribute[] {\n\tconst attributeIndex = currentAttributes.findIndex(attribute => attribute.code === appliedAttributeCode);\n\tconst retainedAttributes = attributeIndex > -1 ? currentAttributes.slice(0, attributeIndex) : currentAttributes;\n\n\treturn [\n\t\t...retainedAttributes,\n\t\t{\n\t\t\tcode: appliedAttributeCode,\n\t\t\tvalue: appliedAttributeValue\n\t\t}\n\t]\n}\n\nfunction removeAttribute(currentAttributes: DaffConfigurableProductEntityAttribute[], appliedAttributeCode: string): DaffConfigurableProductEntityAttribute[] {\n\tconst index = currentAttributes.findIndex(attribute => attribute.code === appliedAttributeCode);\n\n\treturn index > -1 ? currentAttributes.slice(0, index) : currentAttributes;\n}\n\nfunction isAttributeSelected(currentAttributes: DaffConfigurableProductEntityAttribute[], attributeCode: string, attributeValue: string): boolean {\n\tconst index = currentAttributes.findIndex(attribute => attribute.code === attributeCode);\n\n\treturn index > -1 && currentAttributes[index].value === attributeValue;\n}\n","import { EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport { DaffCompositeProductEntity } from './composite-product-entity';\n\n/**\n * Composite Product Item Options Adapter for changing/overwriting entity state.\n */\nexport const daffCompositeProductAppliedOptionsEntitiesAdapter = (() => {\n\tlet cache;\n  return (): EntityAdapter<DaffCompositeProductEntity> =>\n    cache = cache || createEntityAdapter<DaffCompositeProductEntity>();\n})();\n","import { EntityState } from '@ngrx/entity';\n\nimport { DaffProductGridActionTypes, DaffProductGridActions } from '../../actions/product-grid.actions';\nimport { DaffProductActionTypes, DaffProductActions } from '../../actions/product.actions';\nimport { DaffBestSellersActionTypes, DaffBestSellersActions } from '../../actions/best-sellers.actions';\nimport { daffCompositeProductAppliedOptionsEntitiesAdapter } from './composite-product-entities-reducer-adapter';\nimport { DaffProduct, DaffProductTypeEnum } from '../../models/product';\nimport { DaffCompositeProductActions, DaffCompositeProductActionTypes } from '../../actions/composite-product.actions';\nimport { DaffCompositeProduct } from '../../models/composite-product';\nimport { DaffCompositeProductEntity } from './composite-product-entity';\nimport { DaffCompositeProductItem } from '../../models/composite-product-item';\nimport { DaffCompositeConfigurationItem } from '../../models/composite-configuration-item';\n\n/**\n * Reducer function that catches actions and changes/overwrites composite product entities state.\n * \n * @param state current State of the redux store\n * @param action ProductGrid, BestSellers, Product, or Composite Product actions\n * @returns Product entities state\n */\nexport function daffCompositeProductEntitiesReducer<T extends DaffProduct, V extends DaffCompositeProduct>(\n  state = daffCompositeProductAppliedOptionsEntitiesAdapter().getInitialState(), \n  action: DaffProductGridActions<T> | DaffBestSellersActions<T> | DaffProductActions<T> | DaffCompositeProductActions<V>): EntityState<DaffCompositeProductEntity> {\n\tconst adapter = daffCompositeProductAppliedOptionsEntitiesAdapter();\n  switch (action.type) {\n    case DaffProductGridActionTypes.ProductGridLoadSuccessAction:\n\t\tcase DaffBestSellersActionTypes.BestSellersLoadSuccessAction:\n\t\t\treturn adapter.upsertMany(\n\t\t\t\taction.payload\n\t\t\t\t\t.filter(product => product.type === DaffProductTypeEnum.Composite)\n\t\t\t\t\t.map(product => buildCompositeProductAppliedOptionsEntity(<V><unknown>product)), \n\t\t\t\tstate\n\t\t\t);\n    case DaffProductActionTypes.ProductLoadSuccessAction:\n\t\t\tif(action.payload.type === DaffProductTypeEnum.Composite) {\n\t\t\t\treturn adapter.upsertOne(\n\t\t\t\t\tbuildCompositeProductAppliedOptionsEntity(<V><unknown>action.payload),\n\t\t\t\t\tstate\n\t\t\t\t);\n\t\t\t};\n\t\t\treturn state;\n\t\tcase DaffCompositeProductActionTypes.CompositeProductApplyOptionAction:\n\t\t\treturn adapter.upsertOne(\n\t\t\t\t{\n\t\t\t\t\tid: action.id,\n\t\t\t\t\titems: {\n\t\t\t\t\t\t...state.entities[action.id].items,\n\t\t\t\t\t\t[action.itemId]: {\n\t\t\t\t\t\t\tvalue: action.optionId,\n\t\t\t\t\t\t\tqty: action.qty ? action.qty : 1\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstate\n\t\t\t);\n    default:\n      return state;\n  }\n}\n\nfunction buildCompositeProductAppliedOptionsEntity(product: DaffCompositeProduct): DaffCompositeProductEntity {\n\treturn {\n\t\tid: product.id,\n\t\titems: product.items.reduce((acc, item) => ({\n\t\t\t...acc,\n\t\t\t[item.id]: getDefaultOption(item)\n\t\t}), {})\n\t}\n}\n\n/**\n * Sets the default item option to the specified default option if it is in stock.\n * Does not set a default option if a default is not specified.\n * Does not set a default option but does set a default qty if the default is out of stock.\n * @param item a DaffCompositeProductItem\n */\nfunction getDefaultOption(item: DaffCompositeProductItem): DaffCompositeConfigurationItem {\n\tconst defaultOptionIndex = item.options.findIndex(option => option.is_default);\n\n\tif(defaultOptionIndex > -1) {\n\t\treturn {\n\t\t\tvalue: item.options[defaultOptionIndex].in_stock ? item.options[defaultOptionIndex].id : null,\n\t\t\tqty: item.options[defaultOptionIndex].quantity\n\t\t}\n\t} else {\n\t\treturn { value: null, qty: null };\n\t}\n}\n","import { daffProductGridReducer } from './product-grid/product-grid.reducer';\nimport { daffProductReducer } from './product/product.reducer';\nimport { daffBestSellersReducer } from './best-sellers/best-sellers.reducer';\nimport { daffProductEntitiesReducer } from './product-entities/product-entities.reducer';\nimport { daffConfigurableProductEntitiesReducer } from './configurable-product-entities/configurable-product-entities.reducer';\nimport { daffCompositeProductEntitiesReducer } from './composite-product-entities/composite-product-entities.reducer';\n\n/**\n * Returns state values from all product related reducers.\n */\nexport const daffProductReducers = {\n\tproducts: daffProductEntitiesReducer,\n\tproductGrid: daffProductGridReducer,\n\tproduct: daffProductReducer,\n\tbestSellers: daffBestSellersReducer,\n\tconfigurableProductAttributes: daffConfigurableProductEntitiesReducer,\n\tcompositeProductOptions: daffCompositeProductEntitiesReducer\n}\n","import { createFeatureSelector, MemoizedSelector } from '@ngrx/store';\n\nimport { DaffProductReducersState } from '../reducers/product-reducers-state.interface';\nimport { DaffProduct } from '../models/product';\n\nexport interface DaffProductFeatureMemoizedSelector<T extends DaffProduct = DaffProduct> {\n\tselectProductState: MemoizedSelector<object, DaffProductReducersState<T>>;\n}\n\nexport const getDaffProductFeatureSelector = (() => {\n\tlet cache;\n\treturn <T extends DaffProduct>(): DaffProductFeatureMemoizedSelector<T> => cache = cache \n\t\t? cache \n\t\t: { selectProductState: createFeatureSelector<DaffProductReducersState<T>>('product') };\n})();\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\n\nimport { DaffProductReducersState } from '../../reducers/product-reducers-state.interface';\nimport { getDaffProductFeatureSelector } from '../product-feature.selector';\nimport { DaffProductReducerState } from '../../reducers/product/product-reducer-state.interface';\nimport { DaffProduct } from '../../models/product';\n\nexport interface DaffProductPageMemoizedSelectors<T extends DaffProduct = DaffProduct> {\n\tselectSelectedProductState: MemoizedSelector<object, DaffProductReducerState>;\n\tselectSelectedProductId: MemoizedSelector<object, string>;\n\tselectSelectedProductQty: MemoizedSelector<object, number>;\n\tselectSelectedProductLoadingState: MemoizedSelector<object, boolean>;\n\tselectSelectedProduct: MemoizedSelector<object, T>;\n}\n\nconst createProductPageSelectors = <T extends DaffProduct>(): DaffProductPageMemoizedSelectors<T> => {\n\n\tconst {\n\t\tselectProductState\n\t} = getDaffProductFeatureSelector<T>();\n\n\t/**\n\t * Selector for product state.\n\t */\n\tconst selectSelectedProductState = createSelector(\n\t\tselectProductState,\n\t\t(state: DaffProductReducersState<T>) => state.product\n\t);\n\n\t/**\n\t * Selector for the selected product's ID.\n\t * @deprecated\n\t */\n\tconst selectSelectedProductId = createSelector(\n\t\tselectSelectedProductState,\n\t\t(state: DaffProductReducerState) => state.selectedProductId\n\t);\n\n\t/**\n\t * Selector for the quantity of the product.\n\t * @deprecated\n\t */\n\tconst selectSelectedProductQty = createSelector(\n\t\tselectSelectedProductState,\n\t\t(state: DaffProductReducerState) => state.qty\n\t);\n\n\t/**\n\t * Selector for the loading state of the selected product.\n\t */\n\tconst selectSelectedProductLoadingState = createSelector(\n\t\tselectSelectedProductState,\n\t\t(state: DaffProductReducerState) => state.loading\n\t);\n\n\t/**\n\t * Selects the selected product from product state and the selected product ID.\n\t * @deprecated use selectProduct entities selector instead.\n\t */\n\tconst selectSelectedProduct = createSelector(\n\t\tselectProductState,\n\t\tselectSelectedProductId,\n\t\t(state: DaffProductReducersState<T>, id: string) => state.products.entities[id]\n\t);\n\n\treturn { \n\t\tselectSelectedProductState,\n\t\tselectSelectedProductId,\n\t\tselectSelectedProductQty,\n\t\tselectSelectedProductLoadingState,\n\t\tselectSelectedProduct\n\t}\n}\n\nexport const getDaffProductPageSelectors = (() => {\n\tlet cache;\n\treturn <T extends DaffProduct>(): DaffProductPageMemoizedSelectors<T> => cache = cache \n\t\t? cache \n\t\t: createProductPageSelectors<T>();\n})();\n","import { createSelector, MemoizedSelector, MemoizedSelectorWithProps } from '@ngrx/store';\nimport { EntityState } from '@ngrx/entity';\nimport { daffSubtract } from '@daffodil/core';\n\nimport { daffProductEntitiesAdapter } from '../../reducers/product-entities/product-entities-reducer-adapter';\nimport { getDaffProductFeatureSelector } from '../product-feature.selector';\nimport { DaffProductReducersState } from '../../reducers/product-reducers-state.interface';\nimport { DaffProduct } from '../../models/product';\n\nexport interface DaffProductEntitiesMemoizedSelectors<T extends DaffProduct = DaffProduct> {\n\tselectProductEntitiesState: MemoizedSelector<object, EntityState<T>>;\n\tselectProductIds: MemoizedSelector<object, EntityState<T>['ids']>;\n\tselectProductEntities: MemoizedSelector<object, EntityState<T>['entities']>;\n\tselectAllProducts: MemoizedSelector<object, T[]>;\n\tselectProductTotal: MemoizedSelector<object, number>;\n\tselectProduct: MemoizedSelectorWithProps<object, object, T>;\n\tselectProductPrice: MemoizedSelectorWithProps<object, object, number>;\n\tselectProductDiscountAmount: MemoizedSelectorWithProps<object, object, number>;\n\tselectProductDiscountedPrice: MemoizedSelectorWithProps<object, object, number>;\n\tselectProductDiscountPercent: MemoizedSelectorWithProps<object, object, number>;\n\tselectProductHasDiscount: MemoizedSelectorWithProps<object, object, boolean>;\n\tselectIsProductOutOfStock: MemoizedSelectorWithProps<object, object, boolean>;\n}\n\nconst createProductEntitiesSelectors = <T extends DaffProduct>(): DaffProductEntitiesMemoizedSelectors<T> => {\n\tconst {\n\t\tselectProductState\n\t} = getDaffProductFeatureSelector<T>();\n\tconst adapterSelectors = daffProductEntitiesAdapter<T>().getSelectors();\n\t/**\n\t * Product Entities State\n\t */\n\tconst selectProductEntitiesState = createSelector(\n\t\tselectProductState,\n\t\t(state: DaffProductReducersState<T>) => state.products\n\t);\n\n\t/**\n\t * Adapters created with @ngrx/entity generate\n\t * commonly used selector functions including\n\t * getting all ids in the record set, a dictionary\n\t * of the records by id, an array of records and\n\t * the total number of records. This reduces boilerplate\n\t * in selecting records from the entity state.\n\t */\n\t/**\n\t * Selector for product IDs.\n\t */\n\tconst selectProductIds = createSelector(\n\t\tselectProductEntitiesState,\n\t\tadapterSelectors.selectIds\n\t);\n\n\t/**\n\t * Selector for all product entities (see ngrx/entity).\n\t */\n\tconst selectProductEntities = createSelector(\n\t\tselectProductEntitiesState,\n\t\tadapterSelectors.selectEntities\n\t);\n\n\t/**\n\t * Selector for all products on state.\n\t */\n\tconst selectAllProducts = createSelector(\n\t\tselectProductEntitiesState,\n\t\tadapterSelectors.selectAll\n\t);\n\n\t/**\n\t * Selector for the total number of products.\n\t */\n\tconst selectProductTotal = createSelector(\n\t\tselectProductEntitiesState,\n\t\tadapterSelectors.selectTotal\n\t);\n\n\tconst selectProduct = createSelector(\n\t\tselectProductEntities,\n\t\t(products, props) => products[props.id]\n\t);\n\n\tconst selectProductPrice = createSelector(\n\t\tselectProductEntities,\n\t\t(products, props) => {\n\t\t\tconst product = selectProduct.projector(products, { id: props.id });\n\n\t\t\t//todo: use optional chaining when possible\n\t\t\treturn product && product.price || null;\n\t\t}\n\t)\n\n\tconst selectProductDiscountAmount = createSelector(\n\t\tselectProductEntities,\n\t\t(products, props) => {\n\t\t\tconst product = selectProduct.projector(products, { id: props.id });\n\n\t\t\t//todo: use optional chaining when possible\n\t\t\treturn (product.discount && product.discount.amount) || 0;\n\t\t}\n\t);\n\n\tconst selectProductDiscountedPrice = createSelector(\n\t\tselectProductEntities,\n\t\t(products, props) => {\n\t\t\tconst price = selectProductPrice.projector(products, { id: props.id });\n\t\t\tconst discountAmount = selectProductDiscountAmount.projector(products, { id: props.id });\n\n\t\t\treturn daffSubtract(price, discountAmount);\n\t\t}\n\t)\n\n\t//todo use optional chaining when possible.\n\tconst selectProductDiscountPercent = createSelector(\n\t\tselectProductEntities,\n\t\t(products, props) => {\n\t\t\tconst product = selectProduct.projector(products, { id: props.id });\n\n\t\t\treturn (product.discount && product.discount.percent) || 0;\n\t\t}\n\t);\n\n\tconst selectProductHasDiscount = createSelector(\n\t\tselectProductEntities,\n\t\t(products, props) => {\n\t\t\tconst discountAmount = selectProductDiscountAmount.projector(products, { id: props.id });\n\n\t\t\treturn !!discountAmount;\n\t\t}\n\t);\n\n\tconst selectIsProductOutOfStock = createSelector(\n\t\tselectProductEntities,\n\t\t(products, props) => {\n\t\t\tconst product = selectProduct.projector(products, { id: props.id });\n\t\t\t\n\t\t\treturn product ? !product.in_stock : null;\n\t\t}\n\t);\n\n\treturn { \n\t\tselectProductEntitiesState,\n\t\tselectProductIds,\n\t\tselectProductEntities,\n\t\tselectAllProducts,\n\t\tselectProductTotal,\n\t\tselectProduct,\n\t\tselectProductPrice,\n\t\tselectProductDiscountAmount,\n\t\tselectProductDiscountedPrice,\n\t\tselectProductDiscountPercent,\n\t\tselectProductHasDiscount,\n\t\tselectIsProductOutOfStock\n\t}\n}\n\nexport const getDaffProductEntitiesSelectors = (() => {\n\tlet cache;\n\treturn <T extends DaffProduct>(): DaffProductEntitiesMemoizedSelectors<T> => cache = cache \n\t\t? cache \n\t\t: createProductEntitiesSelectors<T>();\n})()\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\n\nimport { getDaffProductFeatureSelector } from '../product-feature.selector';\nimport { DaffProductReducersState } from '../../reducers/product-reducers-state.interface';\nimport { DaffBestSellersReducerState } from '../../reducers/best-sellers/best-sellers-reducer-state.interface';\nimport { getDaffProductEntitiesSelectors } from '../product-entities/product-entities.selectors';\nimport { DaffProduct } from '../../models/product';\n\nexport interface DaffBestSellersMemoizedSelectors<T extends DaffProduct = DaffProduct> {\n\tselectBestSellersState: MemoizedSelector<object, DaffBestSellersReducerState>;\n\tselectBestSellersLoadingState: MemoizedSelector<object, boolean>;\n\tselectBestSellersIdsState: MemoizedSelector<object, string[]>;\n\tselectBestSellersProducts: MemoizedSelector<object, T[]>;\n}\n\nconst createBestSellersSelectors = <T extends DaffProduct>(): DaffBestSellersMemoizedSelectors<T> => {\n\tconst {\n\t\tselectAllProducts\n\t} = getDaffProductEntitiesSelectors<T>();\n\tconst {\n\t\tselectProductState\n\t} = getDaffProductFeatureSelector<T>();\n\t/**\n\t * Selector for Best Seller State\n\t */\n\tconst selectBestSellersState = createSelector(\n\t\tselectProductState,\n\t\t(state: DaffProductReducersState<T>) => state.bestSellers\n\t);\n\n\t/**\n\t * Selector for the loading state of best selling products.\n\t */\n\tconst selectBestSellersLoadingState = createSelector(\n\t\tselectBestSellersState,\n\t\t(state: DaffBestSellersReducerState) => state.loading\n\t);\n\n\t/**\n\t * Selector for the IDs of best selling products.\n\t */\n\tconst selectBestSellersIdsState = createSelector(\n\t\tselectBestSellersState,\n\t\t(state: DaffBestSellersReducerState) => state.productIds\n\t);\n\n\t/**\n\t * Selector for the best selling products.\n\t */\n\tconst selectBestSellersProducts = createSelector(\n\t\tselectBestSellersIdsState,\n\t\tselectAllProducts,\n\t\t(ids: string[], products: T[]) => products.filter(product => ids.indexOf(product.id) > -1)\n\t)\n\n\treturn { \n\t\tselectBestSellersState,\n\t\tselectBestSellersLoadingState,\n\t\tselectBestSellersIdsState,\n\t\tselectBestSellersProducts\n\t}\n}\n\nexport const getDaffBestSellersSelectors = (() => {\n\tlet cache;\n\treturn <T extends DaffProduct>(): DaffBestSellersMemoizedSelectors<T> => cache = cache \n\t\t? cache \n\t\t: createBestSellersSelectors<T>();\n})();\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\n\nimport { DaffProductGridReducerState } from '../../reducers/product-grid/product-grid-reducer-state.interface';\nimport { DaffProductReducersState } from '../../reducers/product-reducers-state.interface';\nimport { getDaffProductFeatureSelector } from '../product-feature.selector';\nimport { DaffProduct } from '../../models/product';\n\nexport interface DaffProductGridMemoizedSelectors<T extends DaffProduct = DaffProduct> {\n\tselectProductGridState: MemoizedSelector<object, DaffProductGridReducerState<T>>;\n\tselectProductGridLoadingState: MemoizedSelector<object, boolean>;\n}\n\nconst createProductGridSelectors = <T extends DaffProduct>(): DaffProductGridMemoizedSelectors<T> => {\n\tconst {\n\t\tselectProductState\n\t} = getDaffProductFeatureSelector<T>();\n\t/**\n\t * Selector for Product Grid state.\n\t */\n\tconst selectProductGridState = createSelector(\n\t\tselectProductState,\n\t\t(state: DaffProductReducersState<T>) => state.productGrid\n\t);\n\n\t/**\n\t * Selector for product grid loading state.\n\t */\n\tconst selectProductGridLoadingState = createSelector(\n\t\tselectProductGridState,\n\t\t(state: DaffProductGridReducerState<T>) => state.loading\n\t);\n\n\treturn { \n\t\tselectProductGridState,\n\t\tselectProductGridLoadingState\n\t}\n}\n\nexport const getDaffProductGridSelectors = (() => {\n\tlet cache;\n\treturn <T extends DaffProduct>(): DaffProductGridMemoizedSelectors<T> => cache = cache \n\t\t? cache \n\t\t: createProductGridSelectors<T>();\n})();\n","import { createSelector, MemoizedSelector, MemoizedSelectorWithProps } from '@ngrx/store';\nimport { EntityState, Dictionary } from '@ngrx/entity';\n\nimport { getDaffProductFeatureSelector } from '../product-feature.selector';\nimport { DaffProductReducersState } from '../../reducers/product-reducers-state.interface';\nimport { DaffProduct } from '../../models/product';\nimport { daffConfigurableProductAppliedAttributesEntitiesAdapter } from '../../reducers/configurable-product-entities/configurable-product-entities-reducer-adapter';\nimport { DaffConfigurableProductEntity, DaffConfigurableProductEntityAttribute } from '../../reducers/configurable-product-entities/configurable-product-entity';\n\nexport interface DaffConfigurableProductEntitiesMemoizedSelectors {\n\tselectConfigurableProductAppliedAttributesEntitiesState: MemoizedSelector<object, EntityState<DaffConfigurableProductEntity>>;\n\tselectConfigurableProductIds: MemoizedSelector<object, EntityState<DaffConfigurableProductEntity>['ids']>;\n\tselectConfigurableProductAppliedAttributesEntities: MemoizedSelector<object, EntityState<DaffConfigurableProductEntity>['entities']>;\n\tselectConfigurableProductTotal: MemoizedSelector<object, number>;\n\tselectConfigurableProductAppliedAttributes: MemoizedSelectorWithProps<object, object, DaffConfigurableProductEntityAttribute[]>;\n\tselectConfigurableProductAppliedAttributesAsDictionary: MemoizedSelectorWithProps<object, object, Dictionary<string>>;\n}\n\nconst createConfigurableProductAppliedAttributesEntitiesSelectors = <T extends DaffProduct>(): DaffConfigurableProductEntitiesMemoizedSelectors => {\n\tconst {\n\t\tselectProductState\n\t} = getDaffProductFeatureSelector<T>();\n\tconst adapterSelectors = daffConfigurableProductAppliedAttributesEntitiesAdapter().getSelectors();\n\t/**\n\t * Configurable Product Entities State\n\t */\n\tconst selectConfigurableProductAppliedAttributesEntitiesState = createSelector(\n\t\tselectProductState,\n\t\t(state: DaffProductReducersState<T>) => state.configurableProductAttributes\n\t);\n\n\t/**\n\t * Selector for configurable product IDs.\n\t */\n\tconst selectConfigurableProductIds = createSelector(\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\tadapterSelectors.selectIds\n\t);\n\n\t/**\n\t * Selector for all configurable product applied attributes as entities (see ngrx/entity).\n\t */\n\tconst selectConfigurableProductAppliedAttributesEntities = createSelector(\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\tadapterSelectors.selectEntities\n\t);\n\n\t/**\n\t * Selector for the total number of configurable products.\n\t */\n\tconst selectConfigurableProductTotal = createSelector(\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\tadapterSelectors.selectTotal\n\t);\n\n\t/**\n\t * Selector for the applied attributes of a particular configurable product.\n\t */\n\tconst selectConfigurableProductAppliedAttributes = createSelector(\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\t(products, props) => products.entities[props.id].attributes\n\t);\n\n\tconst selectConfigurableProductAppliedAttributesAsDictionary = createSelector(\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\t(products, props) => selectConfigurableProductAppliedAttributes.projector(products, { id: props.id }).reduce((acc, attribute) => ({\n\t\t\t...acc,\n\t\t\t[attribute.code]: attribute.value\n\t\t}), {})\n\t)\n\n\treturn { \n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\tselectConfigurableProductIds,\n\t\tselectConfigurableProductAppliedAttributesEntities,\n\t\tselectConfigurableProductTotal,\n\t\tselectConfigurableProductAppliedAttributes,\n\t\tselectConfigurableProductAppliedAttributesAsDictionary\n\t}\n}\n\nexport const getDaffConfigurableProductEntitiesSelectors = (() => {\n\tlet cache;\n\treturn <T extends DaffProduct>(): DaffConfigurableProductEntitiesMemoizedSelectors => cache = cache \n\t\t? cache \n\t\t: createConfigurableProductAppliedAttributesEntitiesSelectors<T>();\n})()\n","import { createSelector, MemoizedSelectorWithProps } from '@ngrx/store';\n\nimport { daffSubtract } from '@daffodil/core';\n\nimport { DaffProductTypeEnum } from '../../models/product';\nimport { Dictionary } from '@ngrx/entity';\nimport { getDaffConfigurableProductEntitiesSelectors } from '../configurable-product-entities/configurable-product-entities.selectors';\nimport { getDaffProductEntitiesSelectors } from '../product-entities/product-entities.selectors';\nimport { DaffConfigurableProductVariant, DaffConfigurableProduct, DaffConfigurableProductAttribute } from '../../models/configurable-product';\nimport { DaffConfigurableProductEntityAttribute } from '../../reducers/configurable-product-entities/configurable-product-entity';\n\nexport interface DaffConfigurableProductMemoizedSelectors {\n\tselectAllConfigurableProductAttributes: MemoizedSelectorWithProps<object, object, Dictionary<string[]>>;\n\tselectAllConfigurableProductVariants: MemoizedSelectorWithProps<object, object, DaffConfigurableProductVariant[]>;\n\tselectMatchingConfigurableProductVariants: MemoizedSelectorWithProps<object, object, DaffConfigurableProductVariant[]>;\n\tselectConfigurableProductPrices: MemoizedSelectorWithProps<object, object, number[]>;\n\tselectConfigurableProductDiscountedPrices: MemoizedSelectorWithProps<object, object, number[]>;\n\tselectConfigurableProductPercentDiscounts: MemoizedSelectorWithProps<object, object, number[]>;\n\tselectConfigurableProductHasDiscount: MemoizedSelectorWithProps<object, object, boolean>;\n\tselectConfigurableProductMinimumPrice: MemoizedSelectorWithProps<object, object, number>;\n\tselectConfigurableProductMaximumPrice: MemoizedSelectorWithProps<object, object, number>;\n\tselectConfigurableProductMinimumDiscountedPrice: MemoizedSelectorWithProps<object, object, number>;\n\tselectConfigurableProductMaximumDiscountedPrice: MemoizedSelectorWithProps<object, object, number>;\n\tselectConfigurableProductMinimumPercentDiscount: MemoizedSelectorWithProps<object, object, number>;\n\tselectConfigurableProductMaximumPercentDiscount: MemoizedSelectorWithProps<object, object, number>;\n\tisConfigurablePriceRanged: MemoizedSelectorWithProps<object, object, boolean>;\n\tselectSelectableConfigurableProductAttributes: MemoizedSelectorWithProps<object, object, Dictionary<string[]>>;\n}\n\nconst createConfigurableProductSelectors = (): DaffConfigurableProductMemoizedSelectors => {\n\n\tconst {\n\t\tselectConfigurableProductAppliedAttributes,\n\t\tselectConfigurableProductAppliedAttributesEntitiesState\n\t} = getDaffConfigurableProductEntitiesSelectors();\n\n\tconst {\n\t\tselectProductEntities,\n\t\tselectProduct\n\t} = getDaffProductEntitiesSelectors();\n\n\t/**\n\t * Selector for all variants of the product.\n\t */\n\tconst selectAllConfigurableProductVariants = createSelector(\n\t\tselectProductEntities,\n\t\t(products, props) => {\n\t\t\tconst product = <DaffConfigurableProduct>selectProduct.projector(products, { id: props.id });\n\t\t\tif(!product || product.type !== DaffProductTypeEnum.Configurable) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\treturn product.variants;\n\t\t}\n\t);\n\n\t/**\n\t * Selector for the variants of the product that match the currently applied attributes.\n\t */\n\tconst selectMatchingConfigurableProductVariants = createSelector(\n\t\tselectProductEntities,\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\t(products, appliedAttributesEntities, props) => {\n\t\t\tconst product = <DaffConfigurableProduct>selectProduct.projector(products, { id: props.id });\n\t\t\tif(!product || product.type !== DaffProductTypeEnum.Configurable) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tconst appliedAttributes = selectConfigurableProductAppliedAttributes.projector(appliedAttributesEntities, { id: props.id });\n\t\t\treturn product.variants.filter(variant => isVariantAvailable(appliedAttributes, variant))\n\t\t}\n\t);\n\n\t/**\n\t * Selector for the range of price for current configuration of the configurable product.\n\t */\n\tconst selectConfigurableProductPrices = createSelector(\n\t\tselectProductEntities,\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\t(products, appliedAttributesEntities, props) => {\n\t\t\treturn selectMatchingConfigurableProductVariants.projector(products, appliedAttributesEntities, { id: props.id })\n\t\t\t\t.map(variant => variant.price);\n\t\t}\n\t);\n\n\t/**\n\t * Selector for the range of discounts for current configuration of the configurable product.\n\t */\n\tconst selectConfigurableProductDiscountedPrices = createSelector(\n\t\tselectProductEntities,\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\t(products, appliedAttributesEntities, props) => {\n\t\t\treturn selectMatchingConfigurableProductVariants.projector(products, appliedAttributesEntities, { id: props.id })\n\t\t\t\t.map(variant => variant.discount ? daffSubtract(variant.price, variant.discount.amount) : variant.price);\n\t\t}\n\t);\n\n\t/**\n\t * Selector for the range of percent discounts for current configuration of the configurable product.\n\t */\n\tconst selectConfigurableProductPercentDiscounts = createSelector(\n\t\tselectProductEntities,\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\t(products, appliedAttributesEntities, props) => {\n\t\t\treturn selectMatchingConfigurableProductVariants.projector(products, appliedAttributesEntities, { id: props.id })\n\t\t\t\t.map(variant => variant.discount && variant.discount.percent);\n\t\t}\n\t);\n\n\t/**\n\t * Selector that determines whether any of the variants for the current configuration of the configurable product has a discount.\n\t */\n\tconst selectConfigurableProductHasDiscount = createSelector(\n\t\tselectProductEntities,\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\t(products, appliedAttributesEntities, props) => {\n\t\t\treturn selectMatchingConfigurableProductVariants.projector(products, appliedAttributesEntities, { id: props.id })\n\t\t\t\t.reduce((acc, variant) => acc || (variant.discount && variant.discount.amount > 0), false);\n\t\t}\n\t)\n\n\t/**\n\t * Selector for the minimum price in the range of configurable product variant prices.\n\t */\n\tconst selectConfigurableProductMinimumPrice = createSelector(\n\t\tselectProductEntities,\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\t(products, appliedAttributesEntities, props) => getMinimumPrice(\n\t\t\tselectConfigurableProductPrices.projector(products, appliedAttributesEntities, { id: props.id })\n\t\t)\n\t)\n\n\t/**\n\t * Selector for the maximum price in the range of configurable product variant prices.\n\t */\n\tconst selectConfigurableProductMaximumPrice = createSelector(\n\t\tselectProductEntities,\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\t(products, appliedAttributesEntities, props) => getMaximumPrice(\n\t\t\tselectConfigurableProductPrices.projector(products, appliedAttributesEntities, { id: props.id })\n\t\t)\n\t)\n\n\t/**\n\t * Selector for the minimum discounted price in the range of configurable product variants.\n\t */\n\tconst selectConfigurableProductMinimumDiscountedPrice = createSelector(\n\t\tselectProductEntities,\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\t(products, appliedAttributesEntities, props) => getMinimumPrice(\n\t\t\tselectConfigurableProductDiscountedPrices.projector(products, appliedAttributesEntities, { id: props.id })\n\t\t)\n\t)\n\n\t/**\n\t * Selector for the maximum discounted price in the range of configurable product variants.\n\t */\n\tconst selectConfigurableProductMaximumDiscountedPrice = createSelector(\n\t\tselectProductEntities,\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\t(products, appliedAttributesEntities, props) => getMaximumPrice(\n\t\t\tselectConfigurableProductDiscountedPrices.projector(products, appliedAttributesEntities, { id: props.id })\n\t\t)\n\t)\n\n\t/**\n\t * Selector for the minimum percent discount in the range of configurable product variants.\n\t */\n\tconst selectConfigurableProductMinimumPercentDiscount = createSelector(\n\t\tselectProductEntities,\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\t(products, appliedAttributesEntities, props) => getMinimumPrice(\n\t\t\tselectConfigurableProductPercentDiscounts.projector(products, appliedAttributesEntities, { id: props.id })\n\t\t)\n\t)\n\n\t/**\n\t * Selector for the maximum percent discount in the range of configurable product variants.\n\t */\n\tconst selectConfigurableProductMaximumPercentDiscount = createSelector(\n\t\tselectProductEntities,\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\t(products, appliedAttributesEntities, props) => getMaximumPrice(\n\t\t\tselectConfigurableProductPercentDiscounts.projector(products, appliedAttributesEntities, { id: props.id })\n\t\t)\n\t)\n\n\t/**\n\t * Selector for whether the configurable product variant prices have been narrowed to a single price.\n\t */\n\tconst isConfigurablePriceRanged = createSelector(\n\t\tselectProductEntities,\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\t(products, appliedAttributesEntities, props) => {\n\t\t\tconst minPrice = selectConfigurableProductMinimumPrice.projector(products, appliedAttributesEntities, { id: props.id });\n\t\t\tconst maxPrice = selectConfigurableProductMaximumPrice.projector(products, appliedAttributesEntities, { id: props.id });\n\t\t\treturn minPrice !== maxPrice;\n\t\t}\n\t)\n\n\tconst selectAllConfigurableProductAttributes = createSelector(\n\t\tselectProductEntities,\n\t\t(products, props) => {\n\t\t\tconst product = <DaffConfigurableProduct>selectProduct.projector(products, { id: props.id });\n\t\t\tif(product.type !== DaffProductTypeEnum.Configurable) {\n\t\t\t\treturn {};\n\t\t\t}\n\t\t\treturn product.configurableAttributes.reduce((acc, attribute) => ({\n\t\t\t\t...acc,\n\t\t\t\t[attribute.code]: attribute.values.map(value => value.value)\n\t\t\t}), {});\n\t\t}\n\t);\n\n\t/**\n\t * Selector for selectable configurable product attributes derived from the remaining variants and the order of currently applied attributes.\n\t * The remaining variants of the product are derived from the currently applied attributes.\n\t */\n\tconst selectSelectableConfigurableProductAttributes = createSelector(\n\t\tselectProductEntities,\n\t\tselectConfigurableProductAppliedAttributesEntitiesState,\n\t\t(products, appliedAttributesEntities, props) => {\n\t\t\tconst product = <DaffConfigurableProduct>selectProduct.projector(products, { id: props.id });\n\t\t\tif(product.type !== DaffProductTypeEnum.Configurable) {\n\t\t\t\treturn {};\n\t\t\t}\n\t\t\tconst appliedAttributes: DaffConfigurableProductEntityAttribute[] = selectConfigurableProductAppliedAttributes.projector(appliedAttributesEntities, { id: props.id });\n\t\t\t\n\t\t\tconst selectableAttributes = initializeSelectableAttributes(product.configurableAttributes);\n\n\t\t\t// Set which values of applied attribute codes should be set as selectable based on the order that they were selected\n\t\t\tconst matchedVariants = appliedAttributes.reduce((matchingVariants, appliedAttribute, i) => {\n\t\t\t\tconst filteredVariants = matchingVariants.filter(variant => isVariantAvailable(appliedAttributes.slice(0, i), variant));\n\n\t\t\t\tselectableAttributes[appliedAttribute.code] = getSelectableAttributesFromVariants(selectableAttributes, filteredVariants, appliedAttribute.code);\n\n\t\t\t\treturn filteredVariants\n\t\t\t}, product.variants).filter(variant =>\n\t\t\t\tisVariantAvailable(appliedAttributes, variant)\n\t\t\t);\n\n\t\t\t// Set which values of the unapplied attribute codes should be set as selectable based on the matching variants of all\n\t\t\t// applied attributes.\n\t\t\tproduct.configurableAttributes.forEach(attribute => {\n\t\t\t\tif (!selectableAttributes[attribute.code].length) {\n\t\t\t\t\tselectableAttributes[attribute.code] = getSelectableAttributesFromVariants(selectableAttributes, matchedVariants, attribute.code);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\treturn selectableAttributes;\n\t\t}\n\t);\n\n\treturn { \n\t\tselectAllConfigurableProductAttributes,\n\t\tselectAllConfigurableProductVariants,\n\t\tselectConfigurableProductPrices,\n\t\tselectConfigurableProductDiscountedPrices,\n\t\tselectConfigurableProductPercentDiscounts,\n\t\tselectConfigurableProductHasDiscount,\n\t\tselectConfigurableProductMinimumPrice,\n\t\tselectConfigurableProductMaximumPrice,\n\t\tselectConfigurableProductMinimumDiscountedPrice,\n\t\tselectConfigurableProductMaximumDiscountedPrice,\n\t\tselectConfigurableProductMinimumPercentDiscount,\n\t\tselectConfigurableProductMaximumPercentDiscount,\n\t\tisConfigurablePriceRanged,\n\t\tselectMatchingConfigurableProductVariants,\n\t\tselectSelectableConfigurableProductAttributes\n\t}\n}\n\nfunction getSelectableAttributesFromVariants(selectableAttributes: Dictionary<string[]>, variants: DaffConfigurableProductVariant[], code: string) {\n  return variants.reduce((selectedAttributes, variant) =>\n    isVariantAttributeMarkedAsSelectable(selectedAttributes, variant.appliedAttributes[code])\n      ? selectedAttributes\n      : [\n        ...selectedAttributes,\n        variant.appliedAttributes[code]\n      ],\n    selectableAttributes[code]\n  )\n}\n\nexport const getDaffConfigurableProductSelectors = (() => {\n\tlet cache;\n\treturn (): DaffConfigurableProductMemoizedSelectors => cache = cache \n\t\t? cache \n\t\t: createConfigurableProductSelectors();\n})();\n\nfunction isVariantAvailable(\n\tappliedAttributes: DaffConfigurableProductEntityAttribute[], \n\tvariant: DaffConfigurableProductVariant\n): boolean {\n\treturn variant.in_stock && \n\t\tappliedAttributes.reduce((acc, attribute) => \n\t\t\tacc && attribute.value === variant.appliedAttributes[attribute.code],\n\t\t\ttrue\n\t\t)\n}\n\nfunction getMinimumPrice(prices: number[]): number {\n\treturn prices.reduce(\n\t\t(acc, price) => price < acc ? price : acc,\n\t\tprices[0]\n\t);\n}\n\nfunction getMaximumPrice(prices: number[]): number {\n\treturn prices.reduce(\n\t\t(acc, price) => price > acc ? price : acc,\n\t\tprices[0]\n\t);\n}\n\nfunction initializeSelectableAttributes(attributes: DaffConfigurableProductAttribute[]): Dictionary<string[]> {\n\treturn attributes.reduce((acc, attribute) => ({\n\t\t...acc,\n\t\t[attribute.code]: []\n\t}), {});\n}\n\nfunction isVariantAttributeMarkedAsSelectable(attributeArray: string[], variantValue: string) {\n\treturn attributeArray.indexOf(variantValue) > -1\n}\n","import { createSelector, MemoizedSelector, MemoizedSelectorWithProps } from '@ngrx/store';\nimport { EntityState, Dictionary } from '@ngrx/entity';\n\nimport { getDaffProductFeatureSelector } from '../product-feature.selector';\nimport { DaffProductReducersState } from '../../reducers/product-reducers-state.interface';\nimport { DaffProduct, DaffProductTypeEnum } from '../../models/product';\nimport { daffCompositeProductAppliedOptionsEntitiesAdapter } from '../../reducers/composite-product-entities/composite-product-entities-reducer-adapter';\nimport { DaffCompositeProductEntity } from '../../reducers/composite-product-entities/composite-product-entity';\nimport { getDaffProductEntitiesSelectors } from '../product-entities/product-entities.selectors';\nimport { DaffCompositeProduct } from '../../models/composite-product';\nimport { DaffCompositeProductItemOption, DaffCompositeProductItem } from '../../models/composite-product-item';\n\nexport interface DaffCompositeProductEntitiesMemoizedSelectors {\n\tselectCompositeProductAppliedOptionsEntitiesState: MemoizedSelector<object, EntityState<DaffCompositeProductEntity>>;\n\tselectCompositeProductIds: MemoizedSelector<object, EntityState<DaffCompositeProductEntity>['ids']>;\n\tselectCompositeProductAppliedOptionsEntities: MemoizedSelector<object, EntityState<DaffCompositeProductEntity>['entities']>;\n\tselectCompositeProductTotal: MemoizedSelector<object, number>;\n\tselectCompositeProductAppliedOptions: MemoizedSelectorWithProps<object, object, Dictionary<DaffCompositeProductItemOption>>;\n\tselectIsCompositeProductItemRequired: MemoizedSelectorWithProps<object, { id: DaffCompositeProduct['id'], item_id: DaffCompositeProductItem['id']}, boolean>;\n}\n\nconst createCompositeProductAppliedOptionsEntitiesSelectors = <T extends DaffProduct>(): DaffCompositeProductEntitiesMemoizedSelectors => {\n\tconst {\n\t\tselectProductState\n\t} = getDaffProductFeatureSelector<T>();\n\tconst {\n\t\tselectProductEntities,\n\t\tselectProduct,\n\t} = getDaffProductEntitiesSelectors();\n\tconst adapterSelectors = daffCompositeProductAppliedOptionsEntitiesAdapter().getSelectors();\n\t/**\n\t * Composite Product Entities State\n\t */\n\tconst selectCompositeProductAppliedOptionsEntitiesState = createSelector(\n\t\tselectProductState,\n\t\t(state: DaffProductReducersState<T>) => state.compositeProductOptions\n\t);\n\n\t/**\n\t * Selector for composite product IDs.\n\t */\n\tconst selectCompositeProductIds = createSelector(\n\t\tselectCompositeProductAppliedOptionsEntitiesState,\n\t\tadapterSelectors.selectIds\n\t);\n\n\t/**\n\t * Selector for all composite product applied attributes as entities (see ngrx/entity).\n\t */\n\tconst selectCompositeProductAppliedOptionsEntities = createSelector(\n\t\tselectCompositeProductAppliedOptionsEntitiesState,\n\t\tadapterSelectors.selectEntities\n\t);\n\n\t/**\n\t * Selector for the total number of composite products.\n\t */\n\tconst selectCompositeProductTotal = createSelector(\n\t\tselectCompositeProductAppliedOptionsEntitiesState,\n\t\tadapterSelectors.selectTotal\n\t);\n\n\t/**\n\t * Selector for the applied attributes of a particular composite product.\n\t */\n\tconst selectCompositeProductAppliedOptions = createSelector(\n\t\tselectProductEntities,\n\t\tselectCompositeProductAppliedOptionsEntitiesState,\n\t\t(products, appliedOptions, props) => {\n\t\t\tconst product = selectProduct.projector(products, { id: props.id });\n\t\t\tif(product.type !== DaffProductTypeEnum.Composite) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn (<DaffCompositeProduct>product).items.reduce((acc, item) => ({\n\t\t\t\t\t...acc,\n\t\t\t\t\t[item.id]: appliedOptions.entities[product.id].items[item.id].value ? {\n\t\t\t\t\t\t...item.options.find(option => option.id === appliedOptions.entities[product.id].items[item.id].value),\n\t\t\t\t\t\tquantity: appliedOptions.entities[product.id].items[item.id].qty\n\t\t\t\t\t} : null\n\t\t\t}), {})\n\t\t}\n\t);\n\n\tconst selectIsCompositeProductItemRequired = createSelector(\n\t\tselectProductEntities,\n\t\t(products, props) => {\n\t\t\tconst product = selectProduct.projector(products, { id: props.id });\n\t\t\tif(product.type !== DaffProductTypeEnum.Composite) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tconst productItem = (<DaffCompositeProduct>product).items.find(item => item.id === props.item_id);\n\n\t\t\treturn productItem ? productItem.required : null\n\t\t}\n\t)\n\n\treturn { \n\t\tselectCompositeProductAppliedOptionsEntitiesState,\n\t\tselectCompositeProductIds,\n\t\tselectCompositeProductAppliedOptionsEntities,\n\t\tselectCompositeProductTotal,\n\t\tselectCompositeProductAppliedOptions,\n\t\tselectIsCompositeProductItemRequired\n\t}\n}\n\nexport const getDaffCompositeProductEntitiesSelectors = (() => {\n\tlet cache;\n\treturn <T extends DaffProduct>(): DaffCompositeProductEntitiesMemoizedSelectors => cache = cache \n\t\t? cache \n\t\t: createCompositeProductAppliedOptionsEntitiesSelectors<T>();\n})()\n","import { createSelector, MemoizedSelectorWithProps } from '@ngrx/store';\nimport { Dictionary } from '@ngrx/entity';\n\nimport { daffAdd, daffMultiply, daffSubtract } from '@daffodil/core';\n\nimport { DaffProduct, DaffProductTypeEnum } from '../../models/product';\nimport { getDaffCompositeProductEntitiesSelectors } from '../composite-product-entities/composite-product-entities.selectors';\nimport { getDaffProductEntitiesSelectors } from '../product-entities/product-entities.selectors';\nimport { DaffCompositeProduct } from '../../models/composite-product';\nimport { DaffCompositeProductItem, DaffCompositeProductItemOption } from '../../models/composite-product-item';\nimport { DaffProductPrices, DaffPriceRange } from '../../models/prices';\nimport { DaffCompositeConfigurationItem } from '../../models/composite-configuration-item';\n\nexport interface DaffCompositeProductMemoizedSelectors {\n\t/**\n\t * Get a DaffPriceRange for a composite product based on the configuration provided excluding unselected, optional item prices.\n\t */\n\tselectCompositeProductRequiredItemPricesForConfiguration: MemoizedSelectorWithProps<object, { id: string, configuration?: Dictionary<DaffCompositeConfigurationItem> }, DaffPriceRange>;\n\t/**\n\t * Get the broadest possible DaffPriceRange for a composite product based on the configuration provided including optional item prices.\n\t */\n\tselectCompositeProductOptionalItemPricesForConfiguration: MemoizedSelectorWithProps<object, { id: string, configuration?: Dictionary<DaffCompositeConfigurationItem> }, DaffPriceRange>;\n\t/**\n\t * Get the DaffPriceRange for a composite product based on the current configuration of selected item options in redux state and\n\t * excluding unselected, optional item prices.\n\t */\n\tselectCompositeProductPricesAsCurrentlyConfigured: MemoizedSelectorWithProps<object, { id: string }, DaffPriceRange>;\n}\n\nconst createCompositeProductSelectors = (): DaffCompositeProductMemoizedSelectors => {\n\n\tconst {\n\t\tselectProductEntities,\n\t\tselectProduct\n\t} = getDaffProductEntitiesSelectors();\n\n\tconst {\n\t\tselectCompositeProductAppliedOptionsEntitiesState\n\t} = getDaffCompositeProductEntitiesSelectors();\n\n\tconst selectCompositeProductRequiredItemPricesForConfiguration = createSelector(\n\t\tselectProductEntities,\n\t\t(products, props) => {\n\t\t\tconst product = selectProduct.projector(products, { id: props.id });\n\t\t\tif(product.type !== DaffProductTypeEnum.Composite) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst appliedOptions = props.configuration ? getAppliedOptionsForConfiguration(<DaffCompositeProduct>product, props.configuration) : {};\n\t\t\treturn {\n\t\t\t\tminPrice: getMinPricesForConfiguration(<DaffCompositeProduct>product, appliedOptions),\n\t\t\t\tmaxPrice: getMaxPricesForConfiguration(<DaffCompositeProduct>product, appliedOptions)\n\t\t\t}\n\t\t}\n\t);\n\n\tconst selectCompositeProductOptionalItemPricesForConfiguration = createSelector(\n\t\tselectProductEntities,\n\t\t(products, props) => {\n\t\t\tconst product = selectProduct.projector(products, { id: props.id });\n\t\t\tif(product.type !== DaffProductTypeEnum.Composite) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst appliedOptions = props.configuration ? getAppliedOptionsForConfiguration(<DaffCompositeProduct>product, props.configuration) : {};\n\t\t\treturn {\n\t\t\t\tminPrice: getMinPricesForConfiguration(<DaffCompositeProduct>product, appliedOptions),\n\t\t\t\tmaxPrice: getMaxPricesForConfigurationIncludingOptionalItems(<DaffCompositeProduct>product, appliedOptions)\n\t\t\t}\n\t\t}\n\t);\n\n\tconst selectCompositeProductPricesAsCurrentlyConfigured = createSelector(\n\t\tselectProductEntities,\n\t\tselectCompositeProductAppliedOptionsEntitiesState,\n\t\t//todo use optional chaining when possible\n\t\t(products, appliedOptionsEntities, props) => selectCompositeProductRequiredItemPricesForConfiguration.projector(products, {\n\t\t\tid: props.id, \n\t\t\tconfiguration: appliedOptionsEntities.entities[props.id] ? appliedOptionsEntities.entities[props.id].items : null\n\t\t})\n\t);\n\n\treturn { \n\t\tselectCompositeProductRequiredItemPricesForConfiguration,\n\t\tselectCompositeProductOptionalItemPricesForConfiguration,\n\t\tselectCompositeProductPricesAsCurrentlyConfigured\n\t}\n}\n\nexport const getDaffCompositeProductSelectors = (() => {\n\tlet cache;\n\treturn (): DaffCompositeProductMemoizedSelectors => cache = cache \n\t\t? cache \n\t\t: createCompositeProductSelectors();\n})();\n\n/**\n * The minimum price of an item is zero if the item is optional.\n * @param item DaffCompositeProductItem\n */\nfunction getMinimumRequiredCompositeItemPrice(item: DaffCompositeProductItem, qty: number): number {\n\treturn item.required ? daffMultiply(Math.min(...item.options.map(option => option.price)), qty) : 0;\n}\n\n/**\n * The maximum price for an item is zero if the item is optional.\n * @param item DaffCompositeProductItem\n */\nfunction getMaximumRequiredCompositeItemPrice(item: DaffCompositeProductItem, qty: number): number {\n\treturn item.required ? daffMultiply(Math.max(...item.options.map(option => option.price)), qty) : 0;\n}\n\n/**\n * The minimum discounted price of an item is zero if the item is optional.\n * @param item DaffCompositeProductItem\n */\n//todo use optional chaining when possible\nfunction getMinimumRequiredCompositeItemDiscountedPrice(item: DaffCompositeProductItem, qty: number): number {\n\treturn item.required ? daffMultiply(Math.min(...item.options.map(getDiscountedPrice)), qty) : 0;\n}\n/**\n * The maximum discounted price of an item is zero if the item is optional.\n * @param item DaffCompositeProductItem\n */\n//todo use optional chaining when possible\nfunction getMaximumRequiredCompositeItemDiscountedPrice(item: DaffCompositeProductItem, qty: number): number {\n\treturn item.required ? daffMultiply(Math.max(...item.options.map(getDiscountedPrice)), qty) : 0;\n}\n\n/**\n * Gets the minimum prices of a composite product for the configuration provided excluding unselected, optional item prices.\n * @param product a DaffCompositeProduct\n * @param appliedOptions a Dictionary<DaffCompositeProductItemOption> that determines the current configuration of the composite product.\n */\nfunction getMinPricesForConfiguration(product: DaffCompositeProduct, appliedOptions: Dictionary<DaffCompositeProductItemOption>): DaffProductPrices {\n\treturn {\n\t\tdiscountedPrice: product.items.reduce((acc, item) => daffAdd(\n\t\t\tacc, \n\t\t\tappliedOptionHasId(appliedOptions[item.id]) ? \n\t\t\t\tdaffMultiply(getDiscountedPrice(appliedOptions[item.id]), appliedOptions[item.id].quantity) : \n\t\t\t\tgetMinimumRequiredCompositeItemDiscountedPrice(item, getOptionQty(appliedOptions[item.id]))\n\t\t), getDiscountedPrice(product)),\n\t\tdiscount: { amount: null, percent: null },\n\t\toriginalPrice: product.items.reduce((acc, item) => daffAdd(\n\t\t\tacc, \n\t\t\tappliedOptionHasId(appliedOptions[item.id]) ? \n\t\t\t\tdaffMultiply(appliedOptions[item.id].price, appliedOptions[item.id].quantity) : \n\t\t\t\tgetMinimumRequiredCompositeItemPrice(item, getOptionQty(appliedOptions[item.id]))\n\t\t), product.price)\n\t}\n}\n\n/**\n * Gets the maximum prices of a composite product for the configuration provided excluding unselected, optional item prices.\n * @param product a DaffCompositeProduct\n * @param appliedOptions a Dictionary<DaffCompositeProductItemOption> that determines the current configuration of the composite product.\n */\nfunction getMaxPricesForConfiguration(product: DaffCompositeProduct, appliedOptions: Dictionary<DaffCompositeProductItemOption>): DaffProductPrices {\n\treturn {\n\t\tdiscountedPrice: product.items.reduce((acc, item) => daffAdd(\n\t\t\tacc, \n\t\t\tappliedOptionHasId(appliedOptions[item.id]) ? \n\t\t\t\tdaffMultiply(getDiscountedPrice(appliedOptions[item.id]), appliedOptions[item.id].quantity) : \n\t\t\t\tgetMaximumRequiredCompositeItemDiscountedPrice(item, getOptionQty(appliedOptions[item.id]))\n\t\t), getDiscountedPrice(product)),\n\t\tdiscount: { amount: null, percent: null },\n\t\toriginalPrice: product.items.reduce((acc, item) => daffAdd(\n\t\t\tacc,\n\t\t\tappliedOptionHasId(appliedOptions[item.id]) ? \n\t\t\t\tdaffMultiply(appliedOptions[item.id].price, appliedOptions[item.id].quantity) : \n\t\t\t\tgetMaximumRequiredCompositeItemPrice(item, getOptionQty(appliedOptions[item.id]))\n\t\t), product.price)\n\t}\n}\n\nfunction getDiscountedPrice(product: DaffProduct): number {\n  return product.discount ? daffSubtract(product.price, product.discount.amount) : product.price\n}\n\n/**\n * Gets the maximum prices of a composite product including optional item prices.\n * @param product a DaffCompositeProduct\n */\nfunction getMaxPricesForConfigurationIncludingOptionalItems(product: DaffCompositeProduct, appliedOptions: Dictionary<DaffCompositeProductItemOption>): DaffProductPrices {\n\treturn {\n\t\tdiscountedPrice: (<DaffCompositeProduct>product).items.reduce((acc, item) => daffAdd(\n\t\t\tacc, \n\t\t\tappliedOptionHasId(appliedOptions[item.id]) ? \n\t\t\t\tdaffMultiply(getDiscountedPrice(appliedOptions[item.id]), appliedOptions[item.id].quantity) :\n\t\t\t\tappliedOptionHasQty(appliedOptions[item.id]) ?\n\t\t\t\t\tdaffMultiply(Math.max(...item.options.map(getDiscountedPrice)), appliedOptions[item.id].quantity) : \n\t\t\t\t\tMath.max(...item.options.map(getDiscountedPrice))\n\t\t), getDiscountedPrice(product)),\n\t\tdiscount: { amount: null, percent: null },\n\t\toriginalPrice: (<DaffCompositeProduct>product).items.reduce((acc, item) => daffAdd(\n\t\t\tacc,\n\t\t\tappliedOptionHasId(appliedOptions[item.id]) ? \n\t\t\t\tdaffMultiply(appliedOptions[item.id].price, appliedOptions[item.id].quantity) : \n\t\t\t\tappliedOptionHasQty(appliedOptions[item.id]) ?\n\t\t\t\t\tdaffMultiply(Math.max(...item.options.map(option => option.price)), appliedOptions[item.id].quantity) : \n\t\t\t\t\tMath.max(...item.options.map(option => option.price))\n\t\t), product.price)\n\t}\n}\n\n/**\n * Takes a product and a set of option configurations and convert it into a dictionary of the full option objects.\n * @param product a DaffCompositeProduct\n * @param configuration a Dictionary<DaffCompositeConfigurationItem> used to build the appliedOptions object.\n */\nfunction getAppliedOptionsForConfiguration(product: DaffCompositeProduct, configuration: Dictionary<DaffCompositeConfigurationItem>): Dictionary<DaffCompositeProductItemOption> {\n\treturn (<DaffCompositeProduct>product).items.reduce((acc, item) => ({\n\t\t...acc,\n\t\t[item.id]: configuration[item.id] ? {\n\t\t\t...item.options.find(option => option.id === configuration[item.id].value),\n\t\t\tquantity: (configuration[item.id].qty === null || configuration[item.id].qty === undefined) ? 1 : configuration[item.id].qty\n\t\t} : null\n}), {})\n}\n\n//todo: use optional chaining when possible\nfunction appliedOptionHasId(appliedOption: DaffCompositeProductItemOption): boolean {\n\treturn appliedOption && !!appliedOption.id;\n}\n\nfunction getOptionQty(appliedOption: DaffCompositeProductItemOption): number {\n\treturn appliedOptionHasQty(appliedOption) ? appliedOption.quantity : 1;\n}\n\n//todo: use optional chaining when possible\nfunction appliedOptionHasQty(appliedOption: DaffCompositeProductItemOption): boolean {\n\treturn appliedOption && appliedOption.quantity !== null;\n}\n","import { DaffProduct } from '../models/product';\nimport { DaffProductPageMemoizedSelectors, getDaffProductPageSelectors } from './product/product.selectors';\nimport { DaffBestSellersMemoizedSelectors, getDaffBestSellersSelectors } from './best-sellers/best-sellers.selectors';\nimport { DaffProductEntitiesMemoizedSelectors, getDaffProductEntitiesSelectors } from './product-entities/product-entities.selectors';\nimport { DaffProductGridMemoizedSelectors, getDaffProductGridSelectors } from './product-grid/product-grid.selectors';\nimport { DaffProductFeatureMemoizedSelector, getDaffProductFeatureSelector } from './product-feature.selector';\nimport { DaffConfigurableProductEntitiesMemoizedSelectors, getDaffConfigurableProductEntitiesSelectors } from './configurable-product-entities/configurable-product-entities.selectors';\nimport { DaffConfigurableProductMemoizedSelectors, getDaffConfigurableProductSelectors } from './configurable-product/configurable-product.selectors';\nimport { DaffCompositeProductEntitiesMemoizedSelectors, getDaffCompositeProductEntitiesSelectors } from './composite-product-entities/composite-product-entities.selectors';\nimport { DaffCompositeProductMemoizedSelectors, getDaffCompositeProductSelectors } from './composite-product/composite-product.selectors';\n\nexport interface DaffProductAllSelectors<T extends DaffProduct = DaffProduct> extends \n\tDaffProductPageMemoizedSelectors<T>, \n\tDaffBestSellersMemoizedSelectors<T>, \n\tDaffProductEntitiesMemoizedSelectors<T>, \n\tDaffProductGridMemoizedSelectors<T>,\n\tDaffProductFeatureMemoizedSelector<T>,\n\tDaffConfigurableProductEntitiesMemoizedSelectors,\n\tDaffConfigurableProductMemoizedSelectors,\n\tDaffCompositeProductEntitiesMemoizedSelectors,\n\tDaffCompositeProductMemoizedSelectors { }\n\nexport const getDaffProductSelectors = <T extends DaffProduct = DaffProduct>(): DaffProductAllSelectors<T> => {\n\treturn {\n\t\t...getDaffBestSellersSelectors<T>(),\n\t\t...getDaffProductPageSelectors<T>(),\n\t\t...getDaffProductGridSelectors<T>(),\n\t\t...getDaffProductEntitiesSelectors<T>(),\n\t\t...getDaffProductFeatureSelector<T>(),\n\t\t...getDaffConfigurableProductEntitiesSelectors(),\n\t\t...getDaffConfigurableProductSelectors(),\n\t\t...getDaffCompositeProductEntitiesSelectors(),\n\t\t...getDaffCompositeProductSelectors()\n\t}\n};","import { InjectionToken } from '@angular/core';\nimport { DaffProductServiceInterface } from '../interfaces/product-service.interface';\n\n/**\n * Injection token that serves as a placeholder for any service that implements the DaffProductServiceInterface.\n */\nexport const DaffProductDriver = \n    new InjectionToken<DaffProductServiceInterface<any>>('DaffProductDriver');\n","import { Injectable, Inject } from '@angular/core';\nimport { switchMap, map, catchError } from 'rxjs/operators';\nimport { of ,  Observable } from 'rxjs';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\n\nimport { \n  DaffProductGridActionTypes, \n  DaffProductGridLoad, \n  DaffProductGridLoadSuccess, \n  DaffProductGridLoadFailure } from '../actions/product-grid.actions';\nimport { DaffProductServiceInterface } from '../drivers/interfaces/product-service.interface';\nimport { DaffProductDriver } from '../drivers/injection-tokens/product-driver.token';\n\nimport { DaffProduct } from '../models/product';\n\n/**\n * Effects for handling product grid actions and for triggering corresponding service requests.\n * \n * @param action$ - Redux action object\n * @param driver - A product service driver\n */\n@Injectable()\nexport class DaffProductGridEffects<T extends DaffProduct> {\n\n  constructor(\n    private actions$: Actions,\n    @Inject(DaffProductDriver) private driver: DaffProductServiceInterface<T>){}\n  \n  /**\n   * Handles ProductGridLoadAction by making a service call for products and returning a success or failure action\n   * to the action stream.\n   * \n   * @returns An Observable of a DaffProductGridAction\n   */\n  @Effect()\n  loadAll$ : Observable<any> = this.actions$.pipe(\n    ofType(DaffProductGridActionTypes.ProductGridLoadAction),\n    switchMap((action: DaffProductGridLoad) =>\n      this.driver.getAll()\n        .pipe(\n          map((resp) => {\n            return new DaffProductGridLoadSuccess(resp);\n          }),\n          catchError(error => {\n            return of(new DaffProductGridLoadFailure('Failed to load product grid'));\n          })\n        )\n    )\n  )\n}\n","import { Injectable, Inject } from '@angular/core';\n\nimport { Actions, Effect, ofType } from '@ngrx/effects';\n\nimport { switchMap, map, catchError } from 'rxjs/operators';\nimport { of ,  Observable } from 'rxjs';\n\nimport { \n  DaffProductActionTypes, \n  DaffProductLoad, \n  DaffProductLoadSuccess, \n  DaffProductLoadFailure } from '../actions/product.actions';\nimport { DaffProductDriver } from '../drivers/injection-tokens/product-driver.token';\nimport { DaffProductServiceInterface } from '../drivers/interfaces/product-service.interface';\nimport { DaffProduct } from '../models/product';\n\n/**\n * Effects for handling product actions and for triggering corresponding service requests.\n * \n * @param action$ - Redux action object\n * @param driver - A product service driver\n */\n@Injectable()\nexport class DaffProductEffects<T extends DaffProduct> {\n\n  constructor(\n    private actions$: Actions,\n    @Inject(DaffProductDriver) private driver: DaffProductServiceInterface<T>){}\n\n  /**\n  * Handles ProductLoadAction by making a service call for a product and returning a success or \n  * failure action to the action stream.\n  * \n  * @returns An Observable of a ProductLoadAction\n  */\n  @Effect()\n  load$ : Observable<any> = this.actions$.pipe(\n    ofType(DaffProductActionTypes.ProductLoadAction),\n    switchMap((action: DaffProductLoad) =>\n      this.driver.get(action.payload)\n        .pipe(\n          map((resp) => {\n            return new DaffProductLoadSuccess(resp);\n          }),\n          catchError(error => {\n            return of(new DaffProductLoadFailure('Failed to load product'));\n          })\n        )\n    )\n  )\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { Observable ,  of } from 'rxjs';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { switchMap, map, catchError } from 'rxjs/operators';\n\nimport { \n  DaffBestSellersActionTypes, \n  DaffBestSellersLoad, \n  DaffBestSellersLoadSuccess, \n  DaffBestSellersLoadFailure } from '../actions/best-sellers.actions';\nimport { DaffProductDriver } from '../drivers/injection-tokens/product-driver.token';\nimport { DaffProductServiceInterface } from '../drivers/interfaces/product-service.interface';\nimport { DaffProduct } from '../models/product';\n\n/**\n * Effects for handling best seller actions and best seller service requests.\n * \n * @param action$ - Redux action object\n * @param driver - A product service driver\n */\n@Injectable()\nexport class DaffBestSellersEffects<T extends DaffProduct> {\n\n  constructor(\n    private actions$: Actions,\n    @Inject(DaffProductDriver) private driver: DaffProductServiceInterface<T>){}\n\n  /**\n   * Handles BestSellersLoadAction by making a service call for best selling products and returning a success or failure action\n   * to the action stream.\n   * \n   * @returns An Observable of a BestSellersLoad action\n   */\n  @Effect()\n  loadBestSellers$ : Observable<any> = this.actions$.pipe(\n    ofType(DaffBestSellersActionTypes.BestSellersLoadAction),\n    switchMap((action: DaffBestSellersLoad) =>\n      this.driver.getBestSellers()\n        .pipe(\n          map((resp) => {\n            return new DaffBestSellersLoadSuccess(resp);\n          }),\n          catchError(error => {\n            return of(new DaffBestSellersLoadFailure('Failed to load best selling products'));\n          })\n        )\n    )\n  )\n}\n","import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { DaffProductGridEffects } from './effects/product-grid.effects';\nimport { DaffProductEffects } from './effects/product.effects';\nimport { DaffBestSellersEffects } from './effects/best-seller.effects';\nimport { daffProductReducers } from './reducers/product-reducers';\n\n@NgModule({\n  imports: [\n      StoreModule.forFeature('product', daffProductReducers),\n      EffectsModule.forFeature([\n        DaffProductGridEffects,\n        DaffProductEffects,\n        DaffBestSellersEffects\n      ]),\n  ]\n})\nexport class DaffProductStateModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DaffProductStateModule } from './product-state.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    /**\n     * Ngrx/store\n     */\n    DaffProductStateModule,\n  ]\n})\nexport class DaffProductModule { }\n","import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Apollo } from 'apollo-angular';\nimport gql from 'graphql-tag';\n\nimport { DaffProduct } from '../../models/product';\nimport { DaffProductServiceInterface } from '../interfaces/product-service.interface';\n\ninterface GetAllProductsResponse {\n  shop?: ShopGraph\n}\n\ninterface GetAProductResponse {\n  node: ProductNode\n}\n\ninterface ShopGraph {\n  products?: ProductGraph\n}\n\ninterface ProductGraph {\n  edges: ProductEdge[]\n}\n\ninterface ProductEdge {\n  node: ProductNode\n}\n\ninterface ProductNode {\n  id: string;\n  title?: string;\n  price?: string;\n}\n\ninterface Variables {\n  first: number\n};\n\n\n/**\n * GraphQL query object for getting all products.\n */\nexport const GetAllProductsQuery = gql`\n  query GetAllProducts($length: Int) {\n    shop {\n      products(first: $length)  {\n        edges {\n          node {\n            id\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n\n/**\n * GraphQL query object for getting a product by ID.\n */\nexport const GetAProduct = gql`\n  query GetAProduct($id: ID!){\n    node(id: $id) {\n      id\n      ... on Product {\n        title\n      }\n    }\n  }\n`;\n\n/**\n * Transforms a ProductNode into a different object.\n * \n * @param node - ProductNode object\n * @returns A Product object\n */\nexport const DaffShopifyProductTransformer = (node: ProductNode) : DaffProduct => {\n  return {\n    id: node.id,\n\t\tname: node.title,\n\t\timages: []\n  }\n}\n\n/**\n * A service for getting DaffProducts from apollo shopify product requests.\n * \n * @Param apollo\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffShopifyProductService implements DaffProductServiceInterface {\n\n  defaultLength = 20;\n  \n  constructor(private apollo: Apollo) {}\n\n  /**\n   * A query for retrieving all Products as an Observable<DaffProduct[]>.\n   * \n   * @returns Observable<Product[]>\n   */\n  getAll(): Observable<DaffProduct[]> {\n    return this.apollo.query<GetAllProductsResponse>({\n      query: GetAllProductsQuery,\n      variables: {\n        length: this.defaultLength\n      }\n    }).pipe(\n      map(result => {\n        return result.data.shop.products.edges.map(edge => DaffShopifyProductTransformer(edge.node))\n      })\n    );\n  }\n\n  //todo: add actual getBestSellers apollo call. Right now, it just makes the getAll() call\n  getBestSellers(): Observable<DaffProduct[]> {\n    return this.apollo.query<GetAllProductsResponse>({\n      query: GetAllProductsQuery,\n      variables: {\n        length: this.defaultLength\n      }\n    }).pipe(\n      map(result => {\n        return result.data.shop.products.edges.map(edge => DaffShopifyProductTransformer(edge.node))\n      })\n    );\n  }\n\n  /**\n   * A query for retrieving a particular product as an Observable<DaffProduct>.\n   * \n   * @param productId - A product ID\n   * @returns Observable<Product>\n   */\n  get(productId: string): Observable<DaffProduct> {\n    return this.apollo.query<GetAProductResponse>({\n      query: GetAProduct,\n      variables: {\n        id: productId\n      }\n    }).pipe(\n      map(result => DaffShopifyProductTransformer(result.data.node))\n    );\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DaffProductDriver } from '../injection-tokens/product-driver.token';\nimport { DaffShopifyProductService } from './product.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ]\n})\nexport class DaffProductShopifyDriverModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DaffProductShopifyDriverModule,\n      providers: [\n        {\n          provide: DaffProductDriver,\n          useExisting: DaffShopifyProductService\n        }\n      ]\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store, select, Action } from '@ngrx/store';\n\nimport { DaffProductModule } from '../../product.module';\nimport { DaffProductReducersState } from '../../reducers/product-reducers-state.interface';\nimport { DaffProduct } from '../../models/product';\nimport { getDaffProductSelectors } from '../../selectors/public_api';\nimport { DaffProductGridFacadeInterface } from './product-grid-facade.interface';\n\n/**\n * A facade for accessing state for a list of products from an application component.\n */\n@Injectable({\n  providedIn: DaffProductModule\n})\nexport class DaffProductGridFacade<T extends DaffProduct = DaffProduct> implements DaffProductGridFacadeInterface<T> {\n  /**\n   * The loading state for retrieving a list of products.\n   */\n  loading$: Observable<boolean>;\n  /**\n   * The state for a list of products.\n   */\n  products$: Observable<T[]>;\n\n  constructor(private store: Store<DaffProductReducersState<T>>) {\n\t\tconst {\n\t\t\tselectProductGridLoadingState,\n\t\t\tselectAllProducts\n\t\t} = getDaffProductSelectors<T>();\n\n    this.loading$ = this.store.pipe(select(selectProductGridLoadingState));\n    this.products$ = this.store.pipe(select(selectAllProducts));\n  }\n\n  /**\n   * Dispatches an action to the rxjs action stream.\n   */\n  dispatch(action: Action) {\n    this.store.dispatch(action);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Store, select, Action } from '@ngrx/store';\n\nimport { DaffProductModule } from '../../product.module';\nimport { DaffProductReducersState } from '../../reducers/product-reducers-state.interface';\nimport { DaffProduct } from '../../models/product';\nimport { getDaffProductSelectors } from '../../selectors/public_api';\nimport { DaffProductFacadeInterface } from './product-facade.interface';\n\n/**\n * A facade for getting state about a particular product.\n * \n * See the <a href=\"docs/api/product/DaffProductFacadeInterface\">DaffProductFacadeInterface docs</a> for more details.\n */\n@Injectable({\n  providedIn: DaffProductModule\n})\nexport class DaffProductFacade<T extends DaffProduct = DaffProduct> implements DaffProductFacadeInterface<T> {\n  loading$: Observable<boolean>;\n  product$: Observable<T>;\n\n\tprivate selectors = getDaffProductSelectors<T>();\n\n  constructor(private store: Store<DaffProductReducersState<T>>) {\n    this.loading$ = this.store.pipe(select(this.selectors.selectSelectedProductLoadingState));\n\t\tthis.product$ = this.store.pipe(select(this.selectors.selectSelectedProduct));\n\t}\n\n\tgetProduct(id: string): Observable<T> {\n\t\treturn this.store.pipe(select(this.selectors.selectProduct, { id }));\n\t}\n\n\tgetPrice(id: string): Observable<number> {\n\t\treturn this.store.pipe(select(this.selectors.selectProductPrice, { id }));\n\t}\n\n\thasDiscount(id: string): Observable<boolean> {\n\t\treturn this.store.pipe(select(this.selectors.selectProductHasDiscount, { id }));\n\t}\n\n\tgetDiscountAmount(id: string): Observable<number> {\n\t\treturn this.store.pipe(select(this.selectors.selectProductDiscountAmount, { id }));\n\t}\n\n\tgetDiscountedPrice(id: string): Observable<number> {\n\t\treturn this.store.pipe(select(this.selectors.selectProductDiscountedPrice, { id }));\n\t}\n\n\tgetDiscountPercent(id: string): Observable<number> {\n\t\treturn this.store.pipe(select(this.selectors.selectProductDiscountPercent, { id }));\n\t}\n\n\tisOutOfStock(id: string): Observable<boolean> {\n\t\treturn this.store.pipe(select(this.selectors.selectIsProductOutOfStock, { id }));\n\t}\n\n  /**\n   * Dispatches an action to the rxjs action stream.\n   */\n  dispatch(action: Action) {\n    this.store.dispatch(action);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store, select, Action } from '@ngrx/store';\nimport { Dictionary } from '@ngrx/entity';\n\nimport { DaffProductModule } from '../../product.module';\nimport { DaffProductReducersState } from '../../reducers/product-reducers-state.interface';\nimport { DaffProduct } from '../../models/product';\nimport { getDaffProductSelectors } from '../../selectors/public_api';\nimport { DaffConfigurableProductFacadeInterface } from './configurable-product-facade.interface';\nimport { DaffConfigurableProductVariant } from '../../models/configurable-product';\n\n/**\n * A facade for interacting with the configurable product state.\n * Exposes many parts of the state for easy access and allows dispatching of actions.\n * \n * See the <a href=\"docs/api/product/DaffConfigurableProductFacadeInterface\">DaffConfigurableProductFacadeInterface docs</a> for more details.\n */\n@Injectable({\n  providedIn: DaffProductModule\n})\nexport class DaffConfigurableProductFacade<T extends DaffProduct = DaffProduct> implements DaffConfigurableProductFacadeInterface {\n\n\tselectors = getDaffProductSelectors<T>();\n\t\n\tconstructor(private store: Store<DaffProductReducersState<T>>) {}\n\t\n\tgetAllAttributes(id: string): Observable<Dictionary<string[]>> {\n\t\treturn this.store.pipe(select(this.selectors.selectAllConfigurableProductAttributes, { id }));\n\t}\n\t\n\tgetAllVariants(id: string): Observable<DaffConfigurableProductVariant[]> {\n\t\treturn this.store.pipe(select(this.selectors.selectAllConfigurableProductVariants, { id }));\n\t}\n\t\n\tgetAppliedAttributes(id: string): Observable<Dictionary<string>> {\n\t\treturn this.store.pipe(select(this.selectors.selectConfigurableProductAppliedAttributesAsDictionary, { id }));\n\t}\n\n\tgetMinimumPrice(id: string): Observable<number> {\n\t\treturn this.store.pipe(select(this.selectors.selectConfigurableProductMinimumPrice, { id }));\n\t}\n\n\tgetMaximumPrice(id: string): Observable<number> {\n\t\treturn this.store.pipe(select(this.selectors.selectConfigurableProductMaximumPrice, { id }));\n\t}\n\n\tgetMinimumDiscountedPrice(id: string): Observable<number> {\n\t\treturn this.store.pipe(select(this.selectors.selectConfigurableProductMinimumDiscountedPrice, { id }));\n\t}\n\n\tgetMaximumDiscountedPrice(id: string): Observable<number> {\n\t\treturn this.store.pipe(select(this.selectors.selectConfigurableProductMaximumDiscountedPrice, { id }));\n\t}\n\n\tgetMinimumPercentDiscount(id: string): Observable<number> {\n\t\treturn this.store.pipe(select(this.selectors.selectConfigurableProductMinimumPercentDiscount, { id }));\n\t}\n\n\tgetMaximumPercentDiscount(id: string): Observable<number> {\n\t\treturn this.store.pipe(select(this.selectors.selectConfigurableProductMaximumPercentDiscount, { id }));\n\t}\n\n\tisPriceRanged(id: string): Observable<boolean> {\n\t\treturn this.store.pipe(select(this.selectors.isConfigurablePriceRanged, { id }));\n\t}\n\n\thasDiscount(id: string): Observable<boolean> {\n\t\treturn this.store.pipe(select(this.selectors.selectConfigurableProductHasDiscount, { id }));\n\t}\n\n\tgetSelectableAttributes(id: string): Observable<Dictionary<string[]>> {\n\t\treturn this.store.pipe(select(this.selectors.selectSelectableConfigurableProductAttributes, { id }));\n\t}\n\n\tgetMatchingVariants(id: string): Observable<DaffConfigurableProductVariant[]> {\n\t\treturn this.store.pipe(select(this.selectors.selectMatchingConfigurableProductVariants, { id }));\n\t}\n\n  /**\n   * Dispatches an action to the rxjs action stream.\n   */\n  dispatch(action: Action) {\n    this.store.dispatch(action);\n  }\n}\n","import { DaffPriceRange } from '../models/prices';\n\n/**\n * Returns whether a DaffPriceRange has a discount.\n * @param priceRange a DaffPriceRange\n */\nexport const productPriceRangeHasDiscount = (priceRange: DaffPriceRange): boolean => {\n\treturn priceRange.minPrice.originalPrice !== priceRange.minPrice.discountedPrice ||\n\t\tpriceRange.maxPrice.originalPrice !== priceRange.maxPrice.discountedPrice;\n}\n\n/**\n * Returns whether the min and max prices of a DaffPriceRange are different.\n * @param priceRange a DaffPriceRange\n */\nexport const productPriceRangeHasPriceRange = (priceRange: DaffPriceRange): boolean => {\n\treturn priceRange.minPrice.originalPrice !== priceRange.maxPrice.originalPrice ||\n\t\tpriceRange.minPrice.discountedPrice !== priceRange.maxPrice.discountedPrice;\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store, select, Action } from '@ngrx/store';\nimport { Dictionary } from '@ngrx/entity';\n\nimport { DaffProductModule } from '../../product.module';\nimport { DaffProductReducersState } from '../../reducers/product-reducers-state.interface';\nimport { DaffProduct } from '../../models/product';\nimport { getDaffProductSelectors } from '../../selectors/public_api';\nimport { DaffCompositeProductFacadeInterface } from './composite-product-facade.interface';\nimport { DaffCompositeProductItemOption, DaffCompositeProductItem } from '../../models/composite-product-item';\nimport { DaffCompositeProduct } from '../../models/composite-product';\nimport { DaffPriceRange } from '../../models/prices';\nimport { DaffCompositeConfigurationItem } from '../../models/composite-configuration-item';\nimport { productPriceRangeHasDiscount, productPriceRangeHasPriceRange } from '../helpers';\n\n/**\n * A facade for interacting with the composite product state.\n * Exposes many parts of the state for easy access and allows dispatching of actions.\n * \n * See the <a href=\"docs/api/product/DaffCompositeProductFacadeInterface\">DaffCompositeProductFacadeInterface docs</a> for more details.\n */\n@Injectable({\n  providedIn: DaffProductModule\n})\nexport class DaffCompositeProductFacade<T extends DaffProduct = DaffProduct> implements DaffCompositeProductFacadeInterface {\n\t\n\tconstructor(private store: Store<DaffProductReducersState<T>>) {}\n\n\tselectors = getDaffProductSelectors<T>();\n\n\t/**\n\t * Returns whether a DaffPriceRange has a discount.\n\t * @param priceRange a DaffPriceRange\n\t */\n\thasDiscount = productPriceRangeHasDiscount;\n\n\t/**\n\t * Returns whether the min and max prices of a DaffPriceRange are different.\n\t * @param priceRange a DaffPriceRange\n\t */\n\thasPriceRange = productPriceRangeHasPriceRange;\n\n\tgetRequiredItemPricesForConfiguration(id: string, configuration?: Dictionary<DaffCompositeConfigurationItem>): Observable<DaffPriceRange> {\n\t\treturn this.store.pipe(select(this.selectors.selectCompositeProductRequiredItemPricesForConfiguration, { id, configuration }));\n\t}\n\n\tgetOptionalItemPricesForConfiguration(id: string, configuration?: Dictionary<DaffCompositeConfigurationItem>): Observable<DaffPriceRange> {\n\t\treturn this.store.pipe(select(this.selectors.selectCompositeProductOptionalItemPricesForConfiguration, { id, configuration }));\n\t}\n\n\tgetPricesAsCurrentlyConfigured(id: string): Observable<DaffPriceRange> {\n\t\treturn this.store.pipe(select(this.selectors.selectCompositeProductPricesAsCurrentlyConfigured, { id }));\n\t}\n\n\tgetAppliedOptions(id: string): Observable<Dictionary<DaffCompositeProductItemOption>> {\n\t\treturn this.store.pipe(select(this.selectors.selectCompositeProductAppliedOptions, { id }));\n\t}\n\n\tisItemRequired(id: DaffCompositeProduct['id'], item_id: DaffCompositeProductItem['id']) {\n\t\treturn this.store.pipe(select(this.selectors.selectIsCompositeProductItemRequired, { id, item_id }));\n\t}\n\n  /**\n   * Dispatches an action to the rxjs action stream.\n   */\n  dispatch(action: Action) {\n    this.store.dispatch(action);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store, select, Action } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport { DaffStoreFacade } from '@daffodil/core/state';\n\nimport { DaffProduct } from '../../models/product';\nimport { DaffProductModule } from '../../product.module';\nimport { DaffProductReducersState } from '../../reducers/product-reducers-state.interface';\nimport { getDaffProductSelectors } from '../../selectors/public_api';\n\n/**\n * A facade for accessing best sellers state from an application component.\n */\n@Injectable({\n  providedIn: DaffProductModule\n})\nexport class DaffBestSellersFacade<T extends DaffProduct = DaffProduct> implements DaffStoreFacade<Action> {\n  /**\n   * The loading state for getting best selling products.\n   */\n  loading$: Observable<boolean>;\n  /**\n   * Best selling products.\n   */\n  bestSellers$: Observable<DaffProduct[]>;\n\n  constructor(private store: Store<DaffProductReducersState<T>>) {\n\t\tconst {\n\t\t\tselectBestSellersProducts,\n\t\t\tselectBestSellersLoadingState\n\t\t} = getDaffProductSelectors<T>();\n\n    this.loading$ = this.store.pipe(select(selectBestSellersLoadingState));\n    this.bestSellers$ = this.store.pipe(select(selectBestSellersProducts));\n  }\n\n  /**\n   * Dispatches an action to the rxjs action stream.\n   * @param action\n   */\n  dispatch(action: Action) {\n    this.store.dispatch(action);\n  }\n}\n","export enum MagentoProductTypeEnum {\n\tBundledProduct = 'BundleProduct',\n\tConfigurableProduct = 'ConfigurableProduct',\n\tSimpleProduct = 'SimpleProduct'\n}\n\nexport enum MagentoProductStockStatusEnum {\n\tInStock = 'IN_STOCK',\n\tOutOfStock = 'OUT_OF_STOCK'\n}\n\n/**\n * An object for defining what the product service requests and retrieves from a magento backend.\n */\nexport interface MagentoProduct {\n\t__typename: string;\n  id: number;\n  name: string;\n  sku: string;\n  url_key: string;\n  image: {\n\t\turl: string,\n\t\tlabel: string\n  };\n  thumbnail: {\n\t\turl: string,\n\t\tlabel: string\n\t};\n  price_range: {\n\t\tmaximum_price: {\n\t\t\tregular_price: {\n\t\t\t\tvalue: number,\n\t\t\t\tcurrency: any\n\t\t\t}\n\t\t\tdiscount: {\n\t\t\t\tamount_off: number,\n\t\t\t\tpercent_off: number\n\t\t\t}\n\t\t}\n\t};\n\tstock_status?: MagentoProductStockStatusEnum;\n  media_gallery_entries?: {\n\t\tlabel: string,\n\t\tfile: string,\n\t\tposition: number,\n\t\tdisabled: boolean,\n\t\tid: number\n\t}[];\n  short_description?: {\n\t\thtml: string;\n\t};\n  description?: {\n\t\thtml: string;\n\t};\n}\n","import gql from 'graphql-tag';\n\nexport const magentoBundledProductFragment = gql`\n  fragment magentoBundledProduct on BundleProduct {\n\t\titems {\n\t\t\toption_id\n\t\t\tposition\n\t\t\trequired\n\t\t\tsku\n\t\t\ttitle\n\t\t\ttype\n\t\t\toptions {\n\t\t\t\tcan_change_quantity\n\t\t\t\tid\n\t\t\t\tis_default\n\t\t\t\tlabel\n\t\t\t\tposition\n\t\t\t\tprice_type\n\t\t\t\tprice\n\t\t\t\tquantity\n\t\t\t\tproduct {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\tsku\n\t\t\t\t\tstock_status\n\t\t\t\t\tprice_range {\n\t\t\t\t\t\tmaximum_price {\n\t\t\t\t\t\t\tregular_price {\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\tcurrency\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdiscount {\n\t\t\t\t\t\t\t\tamount_off\n\t\t\t\t\t\t\t\tpercent_off\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const magentoSimpleProductFragment = gql`\n  fragment magentoSimpleProduct on SimpleProduct {\n    name\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const magentoConfigurableProductFragment = gql`\n  fragment magentoConfigurableProduct on ConfigurableProduct {\n\t\tconfigurable_options {\n\t\t\tattribute_code\n\t\t\tattribute_id\n\t\t\tid\n\t\t\tlabel\n\t\t\tposition\n\t\t\tproduct_id\n\t\t\tvalues {\n\t\t\t\tlabel\n\t\t\t\tvalue_index\n\t\t\t}\n\t\t}\n\t\tvariants {\n\t\t\tattributes {\n\t\t\t\tcode\n\t\t\t\tlabel\n\t\t\t\tvalue_index\n\t\t\t}\n\t\t\tproduct {\n\t\t\t\tsku\n\t\t\t\tprice_range {\n\t\t\t\t\tmaximum_price {\n\t\t\t\t\t\tregular_price {\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\tcurrency\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdiscount {\n\t\t\t\t\t\t\tamount_off\n\t\t\t\t\t\t\tpercent_off\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstock_status\n\t\t\t\timage {\n\t\t\t\t\turl\n\t\t\t\t\tlabel\n\t\t\t\t}\n\t\t\t}\n\t\t}\n  }\n`;\n","import gql from 'graphql-tag';\nimport { magentoBundledProductFragment } from './bundled-product';\nimport { magentoSimpleProductFragment } from './simple-product';\nimport { magentoConfigurableProductFragment } from './configurable-product';\n\nexport const magentoProductFragment = gql`\n  fragment product on ProductInterface {\n\t\t__typename\n\t\tid\n\t\turl_key\n\t\tname\n\t\tsku\n\t\tstock_status\n\t\tprice_range {\n\t\t\tmaximum_price {\n\t\t\t\tregular_price {\n\t\t\t\t\tvalue\n\t\t\t\t\tcurrency\n\t\t\t\t}\n\t\t\t\tdiscount {\n\t\t\t\t\tamount_off\n\t\t\t\t\tpercent_off\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\timage {\n\t\t\turl\n\t\t\tlabel\n\t\t}\n    thumbnail {\n\t\t\turl\n\t\t\tlabel\n\t\t}\n\t\tmedia_gallery_entries {\n\t\t\tlabel\n\t\t\tfile\n\t\t\tposition\n\t\t\tdisabled\n\t\t\tid\n\t\t}\n\t\tshort_description {\n\t\t\thtml\n\t\t}\n\t\tdescription {\n\t\t\thtml\n\t\t}\n\t\t...magentoBundledProduct\n\t\t...magentoSimpleProduct\n\t\t...magentoConfigurableProduct\n\t}\n\t${magentoBundledProductFragment}\n\t${magentoSimpleProductFragment}\n\t${magentoConfigurableProductFragment}\n`;\n","import gql from 'graphql-tag';\nimport { magentoProductFragment } from './fragments/product';\n\nexport const GetProductQuery = gql`\nquery GetAProduct($sku: String!){\n\tstoreConfig {\n\t\tsecure_base_media_url\n\t}\n\tproducts(filter: {\n\t\tsku: {\n\t\t\teq: $sku\n\t\t}\n\t}){\n\t\titems {\n\t\t\t...product\n\t\t}\n\t}\n}\n${magentoProductFragment}\n`\n","import gql from 'graphql-tag';\nimport { magentoProductFragment } from './fragments/product';\n\nexport const GetAllProductsQuery = gql`\nquery GetAllProducts($pageSize: Int)\n{\n\tproducts(search: \"Shirt\", pageSize: $pageSize)\n\t{\n\t\ttotal_count\n\t\titems {\n\t\t\t...product\n\t\t}\n\t\tpage_info {\n\t\t\tpage_size\n\t\t\tcurrent_page\n\t\t}\n\t}\n}\n${magentoProductFragment}\n`\n","import { DaffProduct, DaffProductTypeEnum, DaffProductDiscount } from '../../../models/product';\nimport { MagentoProduct, MagentoProductStockStatusEnum } from '../models/magento-product';\n\n/**\n * Transforms the magento MagentoProduct from the magento product query into a DaffProduct. \n * @param product a magento product\n */\nexport function transformMagentoSimpleProduct(product: MagentoProduct, mediaUrl: string): DaffProduct {\n\treturn {\n\t\ttype: DaffProductTypeEnum.Simple,\n\t\tid: product.sku,\n\t\turl: product.url_key,\n\t\tname: product.name,\n\t\tprice: getPrice(product),\n\t\tdiscount: getDiscount(product),\n\t\tin_stock: product.stock_status === MagentoProductStockStatusEnum.InStock,\n\t\timages: [\n\t\t\t{ url: product.image.url, id: '0', label: product.image.label},\n\t\t\t...transformMediaGalleryEntries(product, mediaUrl)\n\t\t],\n\t\tdescription: product.description.html\n\t}\n}\n\n/**\n * A function for null checking an object.\n */\nfunction getPrice(product: MagentoProduct): number {\n\treturn product.price_range && \n\t\tproduct.price_range.maximum_price && \n\t\tproduct.price_range.maximum_price.regular_price && \n\t\tproduct.price_range.maximum_price.regular_price.value !== null\n\t? product.price_range.maximum_price.regular_price.value : null;\n}\n\nfunction getDiscount(product: MagentoProduct): DaffProductDiscount {\n\treturn product.price_range && \n\t\tproduct.price_range.maximum_price && \n\t\tproduct.price_range.maximum_price.discount \n\t\t? { \n\t\t\tamount: product.price_range.maximum_price.discount.amount_off,\n\t\t\tpercent: product.price_range.maximum_price.discount.percent_off\n\t\t} : { amount: null, percent: null }\n}\n\nfunction transformMediaGalleryEntries(product: MagentoProduct, mediaUrl: string) {\n\treturn product.media_gallery_entries ? product.media_gallery_entries.map(image => {\n\t\treturn {\n\t\t\turl: mediaUrl + 'catalog/product' + image.file,\n\t\t\tlabel: image.label,\n\t\t\tid: image.id.toString()\n\t\t}\n\t}) : []\n}\n","import { MagentoBundledProduct, MagentoBundledProductItem, MagentoBundledProductItemOption } from '../models/bundled-product';\nimport { DaffProductDiscount, DaffProductTypeEnum } from '../../../models/product';\nimport { DaffCompositeProduct } from '../../../models/composite-product';\nimport { \n\tDaffCompositeProductItemOption, \n\tDaffCompositeProductItem, \n\tDaffCompositeProductItemInputEnum \n} from '../../../models/composite-product-item';\nimport { transformMagentoSimpleProduct } from './simple-product-transformers';\nimport { MagentoProduct, MagentoProductStockStatusEnum } from '../models/magento-product';\n\n/**\n * Transforms the magento MagentoProduct from the magento product query into a DaffProduct. \n * @param response the response from a magento product query.\n */\nexport function transformMagentoBundledProduct(product: MagentoBundledProduct, mediaUrl: string): DaffCompositeProduct {\n\treturn {\n\t\t...transformMagentoSimpleProduct(product, mediaUrl),\n\t\tprice: 0,\n\t\tdiscount: {\n\t\t\tamount: 0,\n\t\t\tpercent: 0\n\t\t},\n\t\ttype: DaffProductTypeEnum.Composite,\n\t\titems: product.items.map(transformMagentoBundledProductItem)\n\t}\n}\n\nfunction transformMagentoBundledProductItem(item: MagentoBundledProductItem): DaffCompositeProductItem {\n\treturn {\n\t\tid: item.option_id.toString(),\n\t\trequired: item.required,\n\t\ttitle: item.title,\n\t\tinput_type: <DaffCompositeProductItemInputEnum>item.type,\n\t\toptions: item.options.map(transformMagentoBundledProductItemOption)\n\t}\n}\n\nfunction transformMagentoBundledProductItemOption(option: MagentoBundledProductItemOption): DaffCompositeProductItemOption {\n\treturn {\n\t\tid: option.id.toString(),\n\t\tname: option.label,\n\t\tprice: getPrice(option.product),\n\t\timages: [],\n\t\tdiscount: getDiscount(option.product),\n\t\tquantity: option.quantity,\n\t\tis_default: option.is_default,\n\t\tin_stock: option.product.stock_status === MagentoProductStockStatusEnum.InStock\n\t}\n}\n\n/**\n * A function for null checking an object.\n */\n//TODO: use optional chaining after angular 9 and Typescript 3.7\nfunction getPrice(product: MagentoProduct): number {\n\treturn product.price_range && \n\t\tproduct.price_range.maximum_price && \n\t\tproduct.price_range.maximum_price.regular_price && \n\t\tproduct.price_range.maximum_price.regular_price.value !== null\n\t? product.price_range.maximum_price.regular_price.value : null;\n}\n\n//TODO: use optional chaining after angular 9 and Typescript 3.7\nfunction getDiscount(product: MagentoProduct): DaffProductDiscount {\n\treturn product.price_range && \n\t\tproduct.price_range.maximum_price && \n\t\tproduct.price_range.maximum_price.discount \n\t\t? { \n\t\t\tamount: product.price_range.maximum_price.discount.amount_off,\n\t\t\tpercent: product.price_range.maximum_price.discount.percent_off\n\t\t} : { amount: null, percent: null }\n}\n","import { DaffProductTypeEnum, DaffProductDiscount } from '../../../models/product';\nimport { transformMagentoSimpleProduct } from './simple-product-transformers';\nimport { \n\tMagentoConfigurableProduct, \n\tMagentoConfigurableProductOption, \n\tMagentoConfigurableProductOptionsValue, \n\tMagentoConfigurableProductVariant, \n\tMagentoConfigurableAttributeOption\n} from '../models/configurable-product';\nimport { \n\tDaffConfigurableProduct,\n\tDaffConfigurableProductAttribute,\n\tDaffConfigurableProductOptionValue,\n\tDaffConfigurableProductVariant,\n\tDaffProductVariantAttributesDictionary\n} from '../../../models/configurable-product';\nimport { MagentoProduct, MagentoProductStockStatusEnum } from '../models/magento-product';\n\n/**\n * Transforms the magento MagentoProduct from the magento product query into a DaffProduct. \n * @param response the response from a magento product query.\n */\nexport function transformMagentoConfigurableProduct(product: MagentoConfigurableProduct, mediaUrl: string): DaffConfigurableProduct {\n\treturn {\n\t\t...transformMagentoSimpleProduct(product, mediaUrl),\n\t\ttype: DaffProductTypeEnum.Configurable,\n\t\tconfigurableAttributes: product.configurable_options.map(transformOption),\n\t\tvariants: product.variants.map(transformVariant)\n\t}\n}\n\nexport function transformOption(option: MagentoConfigurableProductOption): DaffConfigurableProductAttribute {\n\treturn {\n\t\torder: option.position,\n\t\tcode: option.attribute_code,\n\t\tlabel: option.label,\n\t\tvalues: option.values.map(transformOptionValue)\n\t}\n}\n\nexport function transformOptionValue(value: MagentoConfigurableProductOptionsValue): DaffConfigurableProductOptionValue {\n\treturn {\n\t\tvalue: value.value_index.toString(),\n\t\tlabel: value.label\n\t}\n}\n\nexport function transformVariant(variant: MagentoConfigurableProductVariant): DaffConfigurableProductVariant {\n\treturn {\n\t\tid: variant.product.sku,\n\t\tappliedAttributes: transformVariantAttributes(variant.attributes),\n\t\tprice: getPrice(variant.product),\n\t\tdiscount: getDiscount(variant.product),\n\t\timage: {\n\t\t\tid: '0',\n\t\t\turl: variant.product.image.url,\n\t\t\tlabel: variant.product.image.label\n\t\t},\n\t\tin_stock: variant.product.stock_status === MagentoProductStockStatusEnum.InStock\n\t}\n}\n\nexport function transformVariantAttributes(attributes: MagentoConfigurableAttributeOption[]): DaffProductVariantAttributesDictionary {\n\tlet appliedAttributes: DaffProductVariantAttributesDictionary = {};\n\tattributes.forEach(attribute => {\n\t\tappliedAttributes = {\n\t\t\t...appliedAttributes,\n\t\t\t[attribute.code]: attribute.value_index.toString()\n\t\t}\n\t});\n\n\treturn appliedAttributes;\n}\n\n/**\n * A function for null checking an object.\n */\nfunction getPrice(product: MagentoProduct): number {\n\treturn product.price_range && \n\t\tproduct.price_range.maximum_price && \n\t\tproduct.price_range.maximum_price.regular_price && \n\t\tproduct.price_range.maximum_price.regular_price.value !== null\n\t? product.price_range.maximum_price.regular_price.value : null;\n}\n\nfunction getDiscount(product: MagentoProduct): DaffProductDiscount {\n\treturn product.price_range && \n\t\tproduct.price_range.maximum_price && \n\t\tproduct.price_range.maximum_price.discount \n\t\t? { \n\t\t\tamount: product.price_range.maximum_price.discount.amount_off,\n\t\t\tpercent: product.price_range.maximum_price.discount.percent_off\n\t\t} : { amount: null, percent: null }\n}\n","import { DaffProduct } from '../../../models/product';\nimport { MagentoProduct, MagentoProductTypeEnum } from '../models/magento-product';\nimport { MagentoBundledProduct } from '../models/bundled-product';\nimport { transformMagentoBundledProduct } from './bundled-product-transformers';\nimport { transformMagentoSimpleProduct } from './simple-product-transformers';\nimport { transformMagentoConfigurableProduct } from './configurable-product-transformers';\nimport { MagentoConfigurableProduct } from '../models/configurable-product';\n\n/**\n * Transforms the magento MagentoProduct from the magento product query into a DaffProduct. \n * @param product a magento product\n */\nexport function transformMagentoProduct(product: MagentoProduct, mediaUrl?: string): DaffProduct {\n\tswitch(product.__typename) {\n\t\tcase MagentoProductTypeEnum.BundledProduct:\n\t\t\treturn transformMagentoBundledProduct(<MagentoBundledProduct>product, mediaUrl);\n\t\tcase MagentoProductTypeEnum.ConfigurableProduct:\n\t\t\treturn transformMagentoConfigurableProduct(<MagentoConfigurableProduct>product, mediaUrl);\n\t\tdefault:\n\t\t\treturn transformMagentoSimpleProduct(product, mediaUrl);\n\t}\n}\n\n/**\n * Transforms many magento MagentoProducts from the magento product query into DaffProducts.\n */\nexport function transformManyMagentoProducts(products: MagentoProduct[], mediaUrl?: string): DaffProduct[] {\n\treturn products.map(product => transformMagentoProduct(product, mediaUrl));\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Apollo } from 'apollo-angular';\n\nimport { DaffProductServiceInterface } from '../interfaces/product-service.interface';\nimport { GetAllProductsQuery } from './queries/get-all-products';\nimport { GetProductQuery } from './queries/get-product';\nimport { transformMagentoProduct, transformManyMagentoProducts } from './transforms/product-transformers';\nimport { DaffProduct } from '../../models/product';\n\n/**\n * A service for making magento apollo queries for products of type, DaffProduct.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffMagentoProductService implements DaffProductServiceInterface {  \n  constructor(private apollo: Apollo) {}\n\n  /**\n   * Get an Observable of a DaffProduct by id.\n   * @param productId a product Id\n   */\n  get(productId: string): Observable<DaffProduct> {\n    return this.apollo.query<any>({\n\t\t\tquery: GetProductQuery,\n\t\t\tvariables: {\n\t\t\t\tsku: productId\n\t\t\t}\n\t\t}).pipe(\n      map(result => transformMagentoProduct(result.data.products.items[0], result.data.storeConfig.secure_base_media_url))\n    );\n  }\n\n  /**\n   * Get an Observable of an array of DaffProducts.\n   */\n  getAll(): Observable<DaffProduct[]> {\n    return this.apollo.query<any>({\n\t\t\tquery: GetAllProductsQuery\n\t\t}).pipe(\n      map(result => transformManyMagentoProducts(result.data.products.items, result.data.storeConfig.secure_base_media_url))\n    );\n  }\n\n  //todo: add actual getBestSellers apollo call for Magento.\n  //todo: move to a different bestsellers module.\n  getBestSellers(): Observable<DaffProduct[]> {\n    return of(null);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DaffProductDriver } from '../injection-tokens/product-driver.token';\nimport { DaffMagentoProductService } from './product.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ]\n})\nexport class DaffProductMagentoDriverModule {\n  static forRoot(): ModuleWithProviders<DaffProductMagentoDriverModule> {\n    return {\n      ngModule: DaffProductMagentoDriverModule,\n      providers: [\n        {\n          provide: DaffProductDriver,\n          useExisting: DaffMagentoProductService\n\t\t\t\t}\n      ]\n    };\n  }\n}\n","import { DaffProduct } from './product';\n\n/**\n * An enum for whether a composite product item should be displayed as a radio or select input.\n */\nexport enum DaffCompositeProductItemInputEnum {\n\tselect = 'select',\n\tradio = 'radio'\n}\n\n/**\n * The composite product item describes one set of product options that the user can add to the composite product.\n * A composite product item can be required or optional. If it is required, an option _must_ be chosen in order to add the product to the cart.\n * If the item is optional, the product can be added to the cart without an option having been chosen.\n * For example, if a composite product is a toolbox bundle, a composite product item might be a screw driver, and the options contained in that\n * item might be a phillips head and a flathead. The customer could choose to add either a phillips head or a flathead to the\n * composite product, or neither if the item is optional.\n */\nexport interface DaffCompositeProductItem {\n\tid: number | string;\n\trequired: boolean;\n\ttitle: string;\n\tinput_type: DaffCompositeProductItemInputEnum;\n\toptions: DaffCompositeProductItemOption[];\n}\n\n/**\n * The composite product item option is a DaffProduct that can be added to a composite product.\n */\nexport interface DaffCompositeProductItemOption extends DaffProduct {\n\tid: string;\n\tname: string;\n\tprice: number;\n\tis_default: boolean;\n\tquantity: number;\n}\n","import { MagentoProduct } from './magento-product';\nimport { MagentoSimpleProduct } from './simple-product';\n\nexport enum MagentoPriceTypeEnum {\n\tfixed = 'FIXED',\n\tpercent = 'PERCENT',\n\tdynamic = 'DYNAMIC'\n}\n\nexport interface MagentoBundledProduct extends MagentoProduct {\n\titems: MagentoBundledProductItem[];\n}\n\nexport interface MagentoBundledProductItem {\n\trequired: boolean;\n\tsku: string;\n\ttitle: string;\n\ttype: string;\n\toptions: MagentoBundledProductItemOption[];\n\toption_id?: number;\n\tposition?: number;\n}\n\nexport interface MagentoBundledProductItemOption {\n\tid: number;\n\tlabel: string;\n\tprice: number;\n\tquantity: number;\n\tcan_change_quantity?: boolean;\n\tis_default: boolean;\n\tposition?: number;\n\tprice_type?: MagentoPriceTypeEnum;\n\tproduct?: MagentoSimpleProduct;\n}\n"]}