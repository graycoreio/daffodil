{"version":3,"file":"daffodil-core.js","sources":["ng://@daffodil/core/utils/long-arithmetic.ts","ng://@daffodil/core/utils/range.ts","ng://@daffodil/core/utils/shuffle.ts","ng://@daffodil/core/utils/random-subset.ts","ng://@daffodil/core/utils/random-slice.ts","ng://@daffodil/core/errors/inheritable-error.ts","ng://@daffodil/core/storage/error/error.ts","ng://@daffodil/core/storage/error/error.service.ts","ng://@daffodil/core/storage/server-error/server-error.ts","ng://@daffodil/core/storage/server-error/server-error.service.ts","ng://@daffodil/core/storage/localstorage/localstorage.service.ts","ng://@daffodil/core/storage/noopstorage/noopstorage.service.ts","ng://@daffodil/core/storage/persistence.interface.ts","ng://@daffodil/core/operators/backoff.pipe.ts"],"sourcesContent":["/**\n * A function to add long numbers accurately with conversions and integer math.\n * This function only guarantees correct answers when the numbers given and the result are less than\n * 16 significant figures and less than 10^11\n * \n * @param numbers \n */\nexport function daffAdd(...numbers: number[]) {\n\tif(numbers.length < 2) throw new Error('Provide at least 2 numbers for daffAdd.');\n\tconst precision = Math.max(...numbers.map(daffPrecision));\n\treturn numbers.reduce((acc, number) => {\n\t\treturn acc + Math.round(number*precision);\n\t}, 0) / precision;\n}\n\n/**\n * A function to subtract long numbers accurately with conversions and integer math.\n * This function only guarantees correct answers when the numbers given and the result are each less than\n * 16 significant figures and less than 10^11\n * \n * @param numbers \n */\nexport function daffSubtract(...numbers: number[]) {\n\tif(numbers.length < 2) throw new Error('Provide at least 2 numbers for daffSubtract.'); \n\tconst precision = Math.max(...numbers.map(daffPrecision));\n\treturn numbers.slice(1).reduce(\n\t\t(acc, number) => acc - Math.round(number*precision), \n\t\tMath.round(numbers[0]*precision)\n\t) / precision;\n}\n\n/**\n * A function to multiply long numbers accurately with conversions and integer math.\n * This function only guarantees correct answers when the numbers given and the result are each less than 16 significant figures\n * and less than 10^11\n * \n * @param numbers \n */\nexport function daffMultiply(...numbers: number[]) {\n\tif(numbers.length < 2) throw new Error('Provide at least 2 numbers for daffMultiply.'); \n\tconst precision = Math.max(...numbers.map(daffPrecision));\n\treturn numbers.reduce(\n\t\t(acc, number) => acc * Math.round(number*precision), \n\t\t1\n\t) / Math.pow(precision, numbers.length);\n}\n\n/**\n * A function to divide long numbers accurately with conversions and integer math.\n * This function only guarantees correct answers when the numbers given and the result are each less than 16 significant figures\n * and less than 10^11\n * \n * @param numbers \n */\nexport function daffDivide(...numbers: number[]) {\n\tif(numbers.length < 2) throw new Error('Provide at least 2 numbers for daffDivide.'); \n\tconst precision = Math.max(...numbers.map(daffPrecision));\n\treturn numbers.slice(1).reduce(\n\t\t(acc, number) => acc / Math.round(number*precision), \n\t\tMath.round(numbers[0]*precision)\n\t) * Math.pow(precision, numbers.length - 2);\n}\n\n/**\n * A helper function to get the number of decimal significant figures of a number.\n * This function will fail if the given number has more than 16 significant figures or\n * the value of the number is greater than 10^11\n * @param number\n */\nfunction daffPrecision(number: number) {\n\tlet p = 10000;\n\tif(number === undefined || number === null) return p;\n  while (Math.round(number * p) / p !== number) { p *= 10; }\n  return p;\n}\n","/**\n * Range\n * \n * Range accepts two inputs, a `start` and an `end`\n * and returns an array filled with numbers from\n * `start` to `end`. \n * \n * @param start\n * @param end\n * @returns number\n */\nexport const range = (start: number, end: number) : Array<number> => \n    Array.apply(null, Array(end - start + 1)).map((val, index) => index + start);\n\n","/**\n * Immutable Fisher-Yates Shuffle\n * https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle\n */\nexport const shuffle = <T>(array: T[]): T[] => {\n  const result = [];\n  array.forEach((el, i) => {\n    const s = Math.floor(Math.random() * i);\n    if( s !== i ){\n      result[i] = result[s];\n    }\n    result[s] = el;\n  });\n  return result;\n}\n","import { shuffle } from './shuffle';\n\n/**\n * Returns a random subset of an array in a random order.\n * @param array \n * @param length \n */\nexport const randomSubset = <T>(array: T[], length? :number): T[] => {\n  if(length > array.length){\n    throw new Error('Requested length is longer than array length.');\n  }\n  length = length ? length : Math.floor(Math.random() * array.length);\n  return shuffle(array).slice(0, length);\n}\n","/**\n * Returns a random slice of an array.\n * @param array \n */\nexport const randomSlice = <T>(array: T[]): T[] => {\n  if(array.length === 0) { return []};\n  const start = Math.floor(Math.random() * Math.floor(array.length - 1));\n  const end =  start + Math.floor(Math.random() * (array.length - 1 - start));\n  return array.slice(start, end);\n}\n","/**\n * A class which allows you to appropriately check the inheritance of an error.\n * \n * In typescript, when you try to extend an error with a specialized error class,\n * if you try to call something like:\n * \n * ```ts\n * class MyError extends Error {}\n * \n * let myError = new MyError();\n * \n * myError instanceof MyError; // returns false\n * ```\n * \n * You will see unexpected things. This class fixes that issue as described here\n * https://github.com/microsoft/TypeScript/issues/13965\n */\nexport class DaffInheritableError extends Error {\n\t__proto__: Error;\n\n\tconstructor(message?: string) {\n\t\tconst trueProto = new.target.prototype;\n\t\tsuper(message);\n\n\t\tObject.setPrototypeOf(this, trueProto);\n\t}\n}\n","import { DaffError, DaffInheritableError } from '../../errors/public_api';\n\nexport class DaffStorageServiceError extends DaffInheritableError implements DaffError {\n  public readonly code: string = 'DAFF_STORAGE_FAILURE';\n\n\tconstructor(public message: string) {\n\t\tsuper(message);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DaffPersistenceService } from '../persistence.interface';\nimport { DaffStorageServiceError } from './error';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffErrorStorageService implements DaffPersistenceService {\n  static readonly ERROR_MESSAGE = 'The DaffErrorStorageService always throws an error.';\n\n  setItem(key: string, value: any): void {\n    this.throwError();\n  }\n\n  getItem(key: string): any {\n    this.throwError();\n  }\n\n  removeItem(key: string): any {\n    this.throwError();\n  }\n\n  clear(){\n    this.throwError();\n  }\n\n  private throwError() {\n    throw new DaffStorageServiceError(DaffErrorStorageService.ERROR_MESSAGE);\n  }\n}\n","import { DaffError } from '../../errors/public_api';\nimport { DaffStorageServiceError } from '../error/error';\n\n/**\n * An error thrown when there is an attempt to access storage on the server and none is available.\n */\nexport class DaffServerSideStorageError extends DaffStorageServiceError implements DaffError {\n  public readonly code: string = 'DAFF_SERVER_STORAGE_FAILURE';\n\n\tconstructor(public message: string) {\n\t\tsuper(message);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DaffPersistenceService } from '../persistence.interface';\nimport { DaffServerSideStorageError } from './server-error';\n\n/**\n * A storage service meant to be loaded into SSR contexts.\n * It will always throw the {@link DaffServerSideStorageError}.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffServerErrorStorageService implements DaffPersistenceService {\n  static readonly ERROR_MESSAGE = 'The DaffServerErrorStorageService always throws an error.';\n\n  setItem(key: string, value: any): void {\n    this.throwError();\n  }\n\n  getItem(key: string): any {\n    this.throwError();\n  }\n\n  removeItem(key: string): any {\n    this.throwError();\n  }\n\n  clear(){\n    this.throwError();\n  }\n\n  private throwError() {\n    throw new DaffServerSideStorageError(DaffServerErrorStorageService.ERROR_MESSAGE);\n  }\n}\n","import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { DaffPersistenceService } from '../persistence.interface';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffLocalStorageService implements DaffPersistenceService {\n  constructor(@Inject(PLATFORM_ID) platformId: string){\n    if(!isPlatformBrowser(platformId)){\n      throw new Error('The DaffLocalStorageService can only be instantiated in the browser.');\n    }\n  }\n\n  /**\n   * Persist the given item into local storage. \n   */\n  setItem(key: string, value: any): void {\n    localStorage.setItem(key, value);\n  }\n\n  /**\n   * Retrieve the given item from localstorage.\n   */\n  getItem(key: string): any {\n    return localStorage.getItem(key);\n  }\n\n  /**\n   * Remove a given item from localstorage\n   */\n  removeItem(key: string): any {\n    localStorage.removeItem(key);\n  }\n\n  clear(){\n    localStorage.clear();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DaffPersistenceService } from '../persistence.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffNoopStorageService implements DaffPersistenceService {\n  setItem(key : string, value: any): void {};\n  getItem(key: string): any {};\n  clear(): void {};\n  removeItem(key: string): void {};\n}","import { InjectionToken, inject, PLATFORM_ID } from '@angular/core';\n\nimport { DaffLocalStorageService } from './localstorage/localstorage.service';\nimport { isPlatformBrowser } from '@angular/common';\nimport { DaffServerErrorStorageService } from './server-error/public_api';\n\nexport interface DaffPersistenceService {\n  setItem(key : string, value: any): void;\n  getItem(key: string): any;\n  clear(): void;\n  removeItem(key: string): void;\n}\n\nexport const DaffPersistenceServiceToken = new InjectionToken<DaffPersistenceService>('DaffPersistenceService', {\n  providedIn: 'root',\n  factory: () => isPlatformBrowser(inject<string>(PLATFORM_ID)) \n    ? new DaffLocalStorageService(inject<string>(PLATFORM_ID)) \n    : new DaffServerErrorStorageService(),\n});\n","import { pipe, timer, throwError } from 'rxjs';\nimport { retryWhen, mergeMap } from 'rxjs/operators';\n\n/**\n * Retries failed Observables\n * @param maxTries The maximum number of tries the observable will be tried\n * @param ms The initial amount of time \n */\nexport function backoff(maxTries: number, ms: number) {\n\treturn pipe(\n\t\tretryWhen(attempt => attempt.pipe(\n\t\t\tmergeMap((shadowedAttempt: Error, i) => {\n\t\t\t\tif(i >= maxTries) return throwError(shadowedAttempt);\n\t\t\t\treturn timer(ms*Math.pow(2,i));\n\t\t\t})\n\t\t))\n\t);\n}\n"],"names":["tslib_1.__extends"],"mappings":"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"}