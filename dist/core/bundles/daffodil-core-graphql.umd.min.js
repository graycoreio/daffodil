!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/core"),require("apollo-angular"),require("rxjs")):"function"==typeof define&&define.amd?define("@daffodil/core/graphql",["exports","@angular/core","apollo-angular","rxjs"],n):n(((e=e||self).daffodil=e.daffodil||{},e.daffodil.core=e.daffodil.core||{},e.daffodil.core.graphql={}),e.ng.core,e.apolloAngular,e.rxjs)}(this,function(e,n,t,r){"use strict";function o(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,u=t.call(e),i=[];try{for(;(void 0===n||n-- >0)&&!(r=u.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=u.return)&&t.call(u)}finally{if(o)throw o.error}}return i}function u(){for(var e=[],n=0;n<arguments.length;n++)e=e.concat(o(arguments[n]));return e}var i=function(e){return e.definitions.filter(function(e){return"FragmentDefinition"===e.kind}).map(function(e){return e.name.value})},f=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return e.reduce(function(e,n){return e.concat(i(n))},[])},a=function(){function e(e){this.apollo=e,this.queue=[]}return e.prototype.mutate=function(e){var n=this;return new r.Observable(function(t){return n.addRequestToQueue(t,n.apollo.mutate(e))})},e.prototype.addRequestToQueue=function(e,n){var t=this;this.queue.push(function(){var r=n.subscribe(function(n){e.next(n),e.complete(),t.finishRequestSubscription(r)},function(n){e.error(n),t.finishRequestSubscription(r)},function(){e.complete(),t.finishRequestSubscription(r)})}),1===this.queue.length&&this.queue[0]()},e.prototype.finishRequestSubscription=function(e){e.unsubscribe(),this.queue.shift(),this.queue[0]&&this.queue[0]()},e.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:t.Apollo}]},e.ngInjectableDef=n.ɵɵdefineInjectable({factory:function(){return new e(n.ɵɵinject(t.Apollo))},token:e,providedIn:"root"}),e}();e.DaffQueuedApollo=a,e.daffBuildFragmentDefinition=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return e.reduce(function(e,n){return e.concat(n.loc.source.body+"\n")},"")},e.daffBuildFragmentNameSpread=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return f.apply(void 0,u(e)).reduce(function(e,n){return e.concat("..."+n+"\n")},"")},Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=daffodil-core-graphql.umd.min.js.map