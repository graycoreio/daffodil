import { jsonBuilder } from './transformers/json-builder';
export class DaffHubspotFormsService {
    constructor(http, document, route, title, config) {
        this.http = http;
        this.document = document;
        this.route = route;
        this.title = title;
        this.config = config;
    }
    submit(payload) {
        return this.http.post(this.generateUrl(this.config.portalId, this.config.guid, this.config.version), this.makeRequest(payload));
    }
    makeRequest(payload) {
        return {
            'fields': [
                ...jsonBuilder(payload)
            ],
            'context': {
                'hutk': this.getCookie(),
                'pageUri': this.getPageURI(),
                'pageName': this.title.getTitle()
            }
        };
    }
    generateUrl(portalId, guid, version) {
        if (version === undefined) {
            version = 'v3';
        }
        return 'https://api.hsforms.com/submissions/' + version + '/integration/submit/'
            + portalId + '/' + guid;
    }
    getCookie() {
        if (!this.document) {
            return null;
        }
        const name = 'hubspotutk';
        const v = this.document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)');
        return v ? v[2] : null;
    }
    getPageURI() {
        if (!this.route) {
            return null;
        }
        return this.route.url;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHVic3BvdC1mb3Jtcy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGRhZmZvZGlsL2RyaXZlci9odWJzcG90LyIsInNvdXJjZXMiOlsiaHVic3BvdC1mb3Jtcy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU1BLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUsxRCxNQUFNLE9BQU8sdUJBQXVCO0lBRWxDLFlBQ1UsSUFBZ0IsRUFDaEIsUUFBa0IsRUFDbEIsS0FBYSxFQUNiLEtBQVksRUFDWixNQUF5QjtRQUp6QixTQUFJLEdBQUosSUFBSSxDQUFZO1FBQ2hCLGFBQVEsR0FBUixRQUFRLENBQVU7UUFDbEIsVUFBSyxHQUFMLEtBQUssQ0FBUTtRQUNiLFVBQUssR0FBTCxLQUFLLENBQU87UUFDWixXQUFNLEdBQU4sTUFBTSxDQUFtQjtJQUFJLENBQUM7SUFHeEMsTUFBTSxDQUFDLE9BQWU7UUFDcEIsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FDbkIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxFQUM3RSxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUMxQixDQUFDO0lBQ0osQ0FBQztJQUVPLFdBQVcsQ0FBQyxPQUFPO1FBQ3pCLE9BQU87WUFDTCxRQUFRLEVBQUU7Z0JBQ1IsR0FBRyxXQUFXLENBQUMsT0FBTyxDQUFDO2FBQ3hCO1lBQ0QsU0FBUyxFQUFFO2dCQUNULE1BQU0sRUFBRSxJQUFJLENBQUMsU0FBUyxFQUFFO2dCQUN4QixTQUFTLEVBQUUsSUFBSSxDQUFDLFVBQVUsRUFBRTtnQkFDNUIsVUFBVSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFO2FBQ2xDO1NBQ0YsQ0FBQTtJQUNILENBQUM7SUFFTyxXQUFXLENBQUMsUUFBZ0IsRUFBRSxJQUFZLEVBQUUsT0FBZTtRQUNqRSxJQUFJLE9BQU8sS0FBSyxTQUFTLEVBQUU7WUFDekIsT0FBTyxHQUFHLElBQUksQ0FBQTtTQUNmO1FBQ0QsT0FBTyxzQ0FBc0MsR0FBRyxPQUFPLEdBQUcsc0JBQXNCO2NBQzVFLFFBQVEsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDO0lBQzVCLENBQUM7SUFDTyxTQUFTO1FBQ2YsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDbEIsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUNELE1BQU0sSUFBSSxHQUFHLFlBQVksQ0FBQztRQUMxQixNQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsU0FBUyxHQUFHLElBQUksR0FBRyxlQUFlLENBQUMsQ0FBQztRQUN6RSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDekIsQ0FBQztJQUNPLFVBQVU7UUFDaEIsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDZixPQUFPLElBQUksQ0FBQztTQUNiO1FBQ0QsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQztJQUN4QixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IFRpdGxlIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XG5cbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcblxuaW1wb3J0IHsganNvbkJ1aWxkZXIgfSBmcm9tICcuL3RyYW5zZm9ybWVycy9qc29uLWJ1aWxkZXInO1xuaW1wb3J0IHsgRGFmZkh1YnNwb3RDb25maWcgfSBmcm9tICcuL21vZGVscy9jb25maWcnO1xuaW1wb3J0IHsgRGFmZkh1YnNwb3RSZXF1ZXN0IH0gZnJvbSAnLi9tb2RlbHMvaHVic3BvdC1yZXF1ZXN0JztcbmltcG9ydCB7IEh1YnNwb3RSZXNwb25zZSB9IGZyb20gJy4vbW9kZWxzL2h1YnNwb3QtcmVzcG9uc2UnO1xuXG5leHBvcnQgY2xhc3MgRGFmZkh1YnNwb3RGb3Jtc1NlcnZpY2Uge1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgaHR0cDogSHR0cENsaWVudCxcbiAgICBwcml2YXRlIGRvY3VtZW50OiBEb2N1bWVudCxcbiAgICBwcml2YXRlIHJvdXRlOiBSb3V0ZXIsXG4gICAgcHJpdmF0ZSB0aXRsZTogVGl0bGUsXG4gICAgcHJpdmF0ZSBjb25maWc6IERhZmZIdWJzcG90Q29uZmlnKSB7IH1cbiAgICBcblxuICBzdWJtaXQocGF5bG9hZDogT2JqZWN0KTogT2JzZXJ2YWJsZTxIdWJzcG90UmVzcG9uc2U+IHtcbiAgICByZXR1cm4gdGhpcy5odHRwLnBvc3Q8SHVic3BvdFJlc3BvbnNlPihcbiAgICAgIHRoaXMuZ2VuZXJhdGVVcmwodGhpcy5jb25maWcucG9ydGFsSWQsIHRoaXMuY29uZmlnLmd1aWQsIHRoaXMuY29uZmlnLnZlcnNpb24pLCBcbiAgICAgIHRoaXMubWFrZVJlcXVlc3QocGF5bG9hZClcbiAgICApO1xuICB9XG5cbiAgcHJpdmF0ZSBtYWtlUmVxdWVzdChwYXlsb2FkKTogRGFmZkh1YnNwb3RSZXF1ZXN0IHtcbiAgICByZXR1cm4ge1xuICAgICAgJ2ZpZWxkcyc6IFtcbiAgICAgICAgLi4uanNvbkJ1aWxkZXIocGF5bG9hZClcbiAgICAgIF0sIFxuICAgICAgJ2NvbnRleHQnOiB7XG4gICAgICAgICdodXRrJzogdGhpcy5nZXRDb29raWUoKSxcbiAgICAgICAgJ3BhZ2VVcmknOiB0aGlzLmdldFBhZ2VVUkkoKSxcbiAgICAgICAgJ3BhZ2VOYW1lJzogdGhpcy50aXRsZS5nZXRUaXRsZSgpXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBnZW5lcmF0ZVVybChwb3J0YWxJZDogc3RyaW5nLCBndWlkOiBzdHJpbmcsIHZlcnNpb246IHN0cmluZyk6IHN0cmluZyB7XG4gICAgaWYgKHZlcnNpb24gPT09IHVuZGVmaW5lZCkge1xuICAgICAgdmVyc2lvbiA9ICd2MydcbiAgICB9XG4gICAgcmV0dXJuICdodHRwczovL2FwaS5oc2Zvcm1zLmNvbS9zdWJtaXNzaW9ucy8nICsgdmVyc2lvbiArICcvaW50ZWdyYXRpb24vc3VibWl0LydcbiAgICAgICsgcG9ydGFsSWQgKyAnLycgKyBndWlkO1xuICB9XG4gIHByaXZhdGUgZ2V0Q29va2llKCkge1xuICAgIGlmICghdGhpcy5kb2N1bWVudCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGNvbnN0IG5hbWUgPSAnaHVic3BvdHV0ayc7XG4gICAgY29uc3QgdiA9IHRoaXMuZG9jdW1lbnQuY29va2llLm1hdGNoKCcoXnw7KSA/JyArIG5hbWUgKyAnPShbXjtdKikoO3wkKScpO1xuICAgIHJldHVybiB2ID8gdlsyXSA6IG51bGw7XG4gIH1cbiAgcHJpdmF0ZSBnZXRQYWdlVVJJKCkge1xuICAgIGlmICghdGhpcy5yb3V0ZSkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLnJvdXRlLnVybDtcbiAgfVxufSJdfQ==