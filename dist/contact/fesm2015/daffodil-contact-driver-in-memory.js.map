{"version":3,"file":"daffodil-contact-driver-in-memory.js","sources":["ng://@daffodil/contact/driver/in-memory/contact.service.ts","ng://@daffodil/contact/driver/in-memory/in-memory.module.ts","ng://@daffodil/contact/driver/in-memory/in-memory-backend/contact-in-memory-backend.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { DaffContactServiceInterface } from '@daffodil/contact/driver';\nimport { DaffContactUnion } from '@daffodil/contact';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryContactService implements DaffContactServiceInterface<DaffContactUnion, DaffContactUnion>{\n  \n  url = '/api/contact';\n  constructor(private http: HttpClient) {}\n\n  send(payload: DaffContactUnion): Observable<DaffContactUnion> {\n    return this.http.post<DaffContactUnion>(this.url, payload);\n  }\n}","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DaffContactDriver } from '@daffodil/contact/driver';\nimport { DaffInMemoryContactService } from './contact.service';\n\n@NgModule({\n\timports: [CommonModule],\n})\nexport class DaffContactInMemoryDriverModule {\n\tstatic forRoot(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: DaffContactInMemoryDriverModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: DaffContactDriver,\n\t\t\t\t\tuseClass: DaffInMemoryContactService,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t}\n}\n","import { InMemoryDbService, RequestInfoUtilities, ParsedRequestUrl} from 'angular-in-memory-web-api';\nimport { Injectable } from '@angular/core';\nimport { DaffContactUnion } from '@daffodil/contact';\nimport { of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryBackendContactService implements InMemoryDbService {\n  forums: DaffContactUnion[] = [];\n\n  parseRequestUrl(url: string, utils: RequestInfoUtilities): ParsedRequestUrl {\n    return utils.parseRequestUrl(url);\n  }\n\n  createDb(): any {\n    return {\n      forums: this.forums\n    };\n  }\n  //validate that its not empty\n  //validate that it doesn't already exist\n  post(reqInfo: any): any {\n    if(reqInfo === undefined){\n      return Error('Payload is undefined');\n    }\n    else if(this.forums.indexOf(reqInfo.body) !== -1){\n      return Error('Already contains submission');\n    }\n    else{\n      this.forums.push(reqInfo.body);\n      return of(reqInfo);\n    }\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAA,MAUa,0BAA0B;;;;IAGrC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QADpC,QAAG,GAAG,cAAc,CAAC;KACmB;;;;;IAExC,IAAI,CAAC,OAAyB;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAmB,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;KAC5D;;;YAVF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YARQ,UAAU;;;;;IAWjB,yCAAqB;;;;;IACT,0CAAwB;;;;;;;ACbtC,MASa,+BAA+B;;;;IAC3C,OAAO,OAAO;QACb,OAAO;YACN,QAAQ,EAAE,+BAA+B;YACzC,SAAS,EAAE;gBACV;oBACC,OAAO,EAAE,iBAAiB;oBAC1B,QAAQ,EAAE,0BAA0B;iBACpC;aACD;SACD,CAAC;KACF;;;YAdD,QAAQ,SAAC;gBACT,OAAO,EAAE,CAAC,YAAY,CAAC;aACvB;;;;;;;ACPD,MAOa,iCAAiC;IAH9C;QAIE,WAAM,GAAuB,EAAE,CAAC;KAyBjC;;;;;;IAvBC,eAAe,CAAC,GAAW,EAAE,KAA2B;QACtD,OAAO,KAAK,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;KACnC;;;;IAED,QAAQ;QACN,OAAO;YACL,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC;KACH;;;;;;;IAGD,IAAI,CAAC,OAAY;QACf,IAAG,OAAO,KAAK,SAAS,EAAC;YACvB,OAAO,KAAK,CAAC,sBAAsB,CAAC,CAAC;SACtC;aACI,IAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAC;YAC/C,OAAO,KAAK,CAAC,6BAA6B,CAAC,CAAC;SAC7C;aACG;YACF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC/B,OAAO,EAAE,CAAC,OAAO,CAAC,CAAC;SACpB;KACF;;;YA5BF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;IAEC,mDAAgC;;;;;;;;;;;;;;;;;;;;"}