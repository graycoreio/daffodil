{"version":3,"file":"daffodil-contact-state.js","sources":["ng://@daffodil/contact/state/actions/contact.actions.ts","ng://@daffodil/contact/state/effects/contact.effects.ts","ng://@daffodil/contact/state/selectors/contact.selector.ts","ng://@daffodil/contact/state/reducers/contact.reducer.ts","ng://@daffodil/contact/state/contact.module.ts","ng://@daffodil/contact/state/facades/contact.facade.ts"],"sourcesContent":["import { Action } from '@ngrx/store';\n\nexport enum DaffContactActionTypes {\n\tContactSubmitAction = '[Daff-Contact] Contact Submit Action',\n\tContactCancelAction = '[Daff-Contact] Contact Cancel Action',\n\tContactSuccessSubmitAction = '[Daff-Contact] Contact Success Submit Action',\n\tContactFailedSubmitAction = '[Daff-Contact] Contact Failed Submit Action',\n\tContactRetryAction = '[Daff-Contact] Contact Retry Action',\n\tContactResetAction = '[Daff-Contact] Contact Reset Action',\n}\n\nexport class DaffContactSubmit<T> implements Action {\n\treadonly type = DaffContactActionTypes.ContactSubmitAction;\n\n\tconstructor(public payload: T) {}\n}\n\nexport class DaffContactRetry<T> implements Action {\n\treadonly type = DaffContactActionTypes.ContactRetryAction;\n\n\tconstructor(public payload: T) {}\n}\nexport class DaffContactFailedSubmit implements Action {\n\treadonly type = DaffContactActionTypes.ContactFailedSubmitAction;\n\n\tconstructor(public payload: string[]) {}\n}\nexport class DaffContactCancel implements Action {\n\treadonly type = DaffContactActionTypes.ContactCancelAction;\n}\nexport class DaffContactSuccessSubmit implements Action {\n\treadonly type = DaffContactActionTypes.ContactSuccessSubmitAction;\n}\nexport class DaffContactReset implements Action {\n\treadonly type = DaffContactActionTypes.ContactResetAction;\n}\n\nexport type DaffContactActions<T> =\n\t| DaffContactSubmit<T>\n\t| DaffContactRetry<T>\n\t| DaffContactFailedSubmit\n\t| DaffContactCancel\n\t| DaffContactSuccessSubmit\n\t| DaffContactReset;\n","import { Injectable, Inject } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { Observable, of, EMPTY } from 'rxjs';\nimport { switchMap, map, catchError } from 'rxjs/operators';\n\nimport {\n\tDaffContactServiceInterface,\n\tDaffContactDriver,\n} from '@daffodil/contact/driver';\n\nimport {\n\tDaffContactActionTypes,\n\tDaffContactSubmit,\n\tDaffContactCancel,\n\tDaffContactSuccessSubmit,\n\tDaffContactFailedSubmit,\n\tDaffContactRetry,\n} from '../actions/contact.actions';\n\n@Injectable()\nexport class DaffContactEffects<T, V> {\n\tconstructor(\n\t\tprivate actions$: Actions,\n\t\t@Inject(DaffContactDriver)\n\t\tprivate driver: DaffContactServiceInterface<T, V>,\n\t) {}\n\n\ttrySubmission$: Observable<Action> = createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(\n\t\t\t\tDaffContactActionTypes.ContactSubmitAction,\n\t\t\t\tDaffContactActionTypes.ContactRetryAction,\n\t\t\t\tDaffContactActionTypes.ContactCancelAction,\n\t\t\t),\n\t\t\tswitchMap(\n\t\t\t\t(\n\t\t\t\t\taction:\n\t\t\t\t\t\t| DaffContactSubmit<T>\n\t\t\t\t\t\t| DaffContactRetry<T>\n\t\t\t\t\t\t| DaffContactCancel,\n\t\t\t\t) => {\n\t\t\t\t\tif (action instanceof DaffContactCancel) {\n\t\t\t\t\t\treturn EMPTY;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn this.submitContact(action.payload);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t),\n\t);\n\n\tprivate submitContact(contact: T): Observable<Action> {\n\t\treturn this.driver.send(contact).pipe(\n\t\t\tmap((resp: V) => {\n\t\t\t\treturn new DaffContactSuccessSubmit();\n\t\t\t}),\n\t\t\tcatchError(error => {\n\t\t\t\treturn of(new DaffContactFailedSubmit(['Failed to submit']));\n\t\t\t}),\n\t\t);\n\t}\n}\n","import { MemoizedSelector, createFeatureSelector, createSelector } from '@ngrx/store';\nimport { DaffContactState } from '../reducers/contact.reducer';\n\nexport interface DaffContactFeatureState {\n  contact: DaffContactState\n}\n\nexport const selectContactFeatureState:\n  MemoizedSelector<DaffContactFeatureState, DaffContactState> = createFeatureSelector<DaffContactState>('contact');\n\nexport const selectDaffContactLoading = createSelector(\n  selectContactFeatureState, (state: DaffContactState) => state.loading\n);\n\nexport const selectDaffContactSuccess = createSelector(\n  selectContactFeatureState, (state: DaffContactState) => state.success\n);\n\nexport const selectDaffContactError = createSelector(\n  selectContactFeatureState, (state: DaffContactState) => state.errors\n);","import { DaffContactActions, DaffContactActionTypes} from '../actions/contact.actions';\n\nexport interface DaffContactState {\n  success: boolean;\n  loading: boolean;\n  errors: string[] | null;\n}\n\nconst initialState: DaffContactState = {\n  success: false,\n  loading: false,\n  errors: null\n}\n\nexport function reducer<T>(state: DaffContactState = initialState, \n  action: DaffContactActions<T>){\n    switch(action.type){\n      case DaffContactActionTypes.ContactRetryAction:\n      case DaffContactActionTypes.ContactSubmitAction:\n        return {...state, loading: true};\n      case DaffContactActionTypes.ContactFailedSubmitAction:\n        return {...state, loading: false, errors: action.payload};\n      case DaffContactActionTypes.ContactSuccessSubmitAction:\n        return {...state, success: true, loading: false}\n      case DaffContactActionTypes.ContactCancelAction:\n        return {...state, loading: false};\n      case DaffContactActionTypes.ContactResetAction:\n        return {...state, ... initialState};\n      default:\n        return state;\n    }\n  }","import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { reducer } from './reducers/contact.reducer';\nimport { DaffContactEffects } from './effects/contact.effects';\n\n@NgModule({\n\tdeclarations: [],\n\timports: [\n\t\tStoreModule.forFeature('contact', reducer),\n\t\tEffectsModule.forFeature([DaffContactEffects])\n\t],\n\tproviders: [],\n})\nexport class DaffContactStateModule { }\n","import { Injectable } from '@angular/core';\nimport { Action, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport {\n\tDaffContactFeatureState,\n\tselectDaffContactLoading,\n\tselectDaffContactError,\n\tselectDaffContactSuccess,\n} from '../selectors/contact.selector';\nimport { DaffContactStateModule } from '../contact.module';\nimport { DaffContactFacadeInterface } from './contact-facade.interface';\n\n@Injectable({ providedIn: DaffContactStateModule })\nexport class DaffContactFacade implements DaffContactFacadeInterface {\n\tsuccess$: Observable<boolean> = this.store.select(selectDaffContactSuccess);\n\terror$: Observable<string[]> = this.store.select(selectDaffContactError);\n\tloading$: Observable<boolean> = this.store.select(selectDaffContactLoading);\n\n\tconstructor(private store: Store<DaffContactFeatureState>) { }\n\tdispatch(action: Action) {\n\t\tthis.store.dispatch(action);\n\t}\n}\n"],"names":[],"mappings":"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"}