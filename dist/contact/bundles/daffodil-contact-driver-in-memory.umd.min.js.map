{"version":3,"sources":["ng://@daffodil/contact/driver/in-memory/contact.service.ts","ng://@daffodil/contact/driver/in-memory/in-memory.module.ts","ng://@daffodil/contact/driver/in-memory/in-memory-backend/contact-in-memory-backend.service.ts"],"names":["DaffInMemoryContactService","http","this","url","prototype","send","payload","post","Injectable","args","providedIn","HttpClient","DaffContactInMemoryDriverModule","forRoot","ngModule","providers","provide","DaffContactDriver","useClass","NgModule","imports","CommonModule","DaffInMemoryBackendContactService","forums","parseRequestUrl","utils","createDb","reqInfo","undefined","Error","indexOf","body","push","of"],"mappings":"yrBAAA,IAAAA,EAAA,WAaE,SAAAA,EAAoBC,GAAAC,KAAAD,KAAAA,EADpBC,KAAAC,IAAM,sBAGNH,EAAAI,UAAAC,KAAA,SAAKC,GACH,OAAOJ,KAAKD,KAAKM,KAAuBL,KAAKC,IAAKG,wBATrDE,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDAPLC,EAAAA,+IADT,GCAA,IAAAC,EAAA,WAMA,SAAAA,KAeA,OAXQA,EAAAC,QAAP,WACC,MAAO,CACNC,SAAUF,EACVG,UAAW,CACV,CACCC,QAASC,EAAAA,kBACTC,SAAUlB,0BAVdmB,EAAAA,SAAQV,KAAA,CAAC,CACTW,QAAS,CAACC,EAAAA,kBAcXT,EArBA,GCCAU,EAAA,WAIA,SAAAA,IAIEpB,KAAAqB,OAA6B,UAE7BD,EAAAlB,UAAAoB,gBAAA,SAAgBrB,EAAasB,GAC3B,OAAOA,EAAMD,gBAAgBrB,IAG/BmB,EAAAlB,UAAAsB,SAAA,WACE,MAAO,CACLH,OAAQrB,KAAKqB,SAKjBD,EAAAlB,UAAAG,KAAA,SAAKoB,GACH,YAAeC,IAAZD,EACME,MAAM,yBAEgC,IAAvC3B,KAAKqB,OAAOO,QAAQH,EAAQI,MAC3BF,MAAM,gCAGb3B,KAAKqB,OAAOS,KAAKL,EAAQI,MAClBE,EAAAA,GAAGN,yBA1BfnB,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,kHALd","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { DaffContactServiceInterface } from '@daffodil/contact/driver';\nimport { DaffContactUnion } from '@daffodil/contact';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryContactService implements DaffContactServiceInterface<DaffContactUnion, DaffContactUnion>{\n  \n  url = '/api/contact';\n  constructor(private http: HttpClient) {}\n\n  send(payload: DaffContactUnion): Observable<DaffContactUnion> {\n    return this.http.post<DaffContactUnion>(this.url, payload);\n  }\n}","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DaffContactDriver } from '@daffodil/contact/driver';\nimport { DaffInMemoryContactService } from './contact.service';\n\n@NgModule({\n\timports: [CommonModule],\n})\nexport class DaffContactInMemoryDriverModule {\n\tstatic forRoot(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: DaffContactInMemoryDriverModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: DaffContactDriver,\n\t\t\t\t\tuseClass: DaffInMemoryContactService,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t}\n}\n","import { InMemoryDbService, RequestInfoUtilities, ParsedRequestUrl} from 'angular-in-memory-web-api';\nimport { Injectable } from '@angular/core';\nimport { DaffContactUnion } from '@daffodil/contact';\nimport { of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryBackendContactService implements InMemoryDbService {\n  forums: DaffContactUnion[] = [];\n\n  parseRequestUrl(url: string, utils: RequestInfoUtilities): ParsedRequestUrl {\n    return utils.parseRequestUrl(url);\n  }\n\n  createDb(): any {\n    return {\n      forums: this.forums\n    };\n  }\n  //validate that its not empty\n  //validate that it doesn't already exist\n  post(reqInfo: any): any {\n    if(reqInfo === undefined){\n      return Error('Payload is undefined');\n    }\n    else if(this.forums.indexOf(reqInfo.body) !== -1){\n      return Error('Already contains submission');\n    }\n    else{\n      this.forums.push(reqInfo.body);\n      return of(reqInfo);\n    }\n  }\n}\n"]}