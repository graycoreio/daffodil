{"version":3,"sources":["ng://@daffodil/contact/driver/testing/contact.service.ts","ng://@daffodil/contact/driver/testing/testing.module.ts"],"names":["DaffTestingContactService","prototype","send","payload","of","pipe","delay","Injectable","args","providedIn","DaffContactTestingDriverModule","forRoot","ngModule","providers","provide","DaffContactDriver","useClass","NgModule","imports","CommonModule"],"mappings":"sqBAAA,IAAAA,EAAA,WAOA,SAAAA,YAIEA,EAAAC,UAAAC,KAAA,SAAKC,GACH,OAAOC,EAAAA,GAAG,WAAWC,KAAKC,EAAAA,MAAM,0BALnCC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,kHARd,GCAAC,EAAA,WAKA,SAAAA,KAeA,OAXQA,EAAAC,QAAP,WACC,MAAO,CACNC,SAAUF,EACVG,UAAW,CACV,CACCC,QAASC,EAAAA,kBACTC,SAAUhB,0BAVdiB,EAAAA,SAAQT,KAAA,CAAC,CACTU,QAAS,CAACC,EAAAA,kBAcXT,EApBA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { of, Observable } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\nimport { DaffContactUnion } from '@daffodil/contact';\nimport { DaffContactServiceInterface } from '@daffodil/contact/driver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffTestingContactService implements DaffContactServiceInterface<DaffContactUnion, any>{\n  send(payload: DaffContactUnion): Observable<any>{\n    return of('Success').pipe(delay(10));\n  }\n}","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DaffContactDriver } from '@daffodil/contact/driver';\nimport { DaffTestingContactService } from './contact.service';\n\n@NgModule({\n\timports: [CommonModule],\n})\nexport class DaffContactTestingDriverModule {\n\tstatic forRoot(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: DaffContactTestingDriverModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: DaffContactDriver,\n\t\t\t\t\tuseClass: DaffTestingContactService,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t}\n}\n"]}