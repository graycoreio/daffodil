{"version":3,"file":"daffodil-cart-testing.js","sources":["ng://@daffodil/cart/testing/factories/cart.factory.ts","ng://@daffodil/cart/testing/factories/cart-item/cart-item.factory.ts","ng://@daffodil/cart/testing/factories/cart-item/configurable-cart-item.factory.ts","ng://@daffodil/cart/testing/factories/cart-item/composite-cart-item.factory.ts","ng://@daffodil/cart/testing/factories/cart-address.factory.ts","ng://@daffodil/cart/testing/factories/cart-payment.factory.ts","ng://@daffodil/cart/testing/factories/cart-shipping-rate.factory.ts","ng://@daffodil/cart/testing/factories/cart-coupon.factory.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport * as faker from 'faker/locale/en_US';\n\nimport { DaffCart, DaffCartTotalTypeEnum } from '@daffodil/cart';\nimport { DaffModelFactory } from '@daffodil/core/testing';\n\nexport class MockCart implements DaffCart {\n  id = faker.random.number({min: 1, max: 1000});\n  subtotal = 10000;\n  grand_total = 15000;\n  coupons = [];\n  items = [];\n  billing_address = null;\n  shipping_address = null;\n  shipping_information = null;\n  totals = [\n\t\t{\n\t\t\tname: DaffCartTotalTypeEnum.grandTotal,\n\t\t\tvalue: 1050,\n\t\t\tlabel: 'Grand Total'\n\t\t},\n\t\t{\n\t\t\tname: DaffCartTotalTypeEnum.subtotalExcludingTax,\n\t\t\tvalue: 900,\n\t\t\tlabel: 'Subtotal Excluding Tax'\n\t\t},\n\t\t{\n\t\t\tname: DaffCartTotalTypeEnum.subtotalIncludingTax,\n\t\t\tvalue: 950,\n\t\t\tlabel: 'Subtotal Including Tax'\n\t\t},\n\t\t{\n\t\t\tname: DaffCartTotalTypeEnum.subtotalWithDiscountExcludingTax,\n\t\t\tvalue: 850,\n\t\t\tlabel: ''\n\t\t},\n\t\t{\n\t\t\tname: DaffCartTotalTypeEnum.subtotalWithDiscountIncludingTax,\n\t\t\tvalue: 900,\n\t\t\tlabel: ''\n\t\t},\n\t\t{\n\t\t\tname: DaffCartTotalTypeEnum.tax,\n\t\t\tvalue: 50,\n\t\t\tlabel: ''\n\t\t},\n\t\t{\n\t\t\tname: DaffCartTotalTypeEnum.discount,\n\t\t\tvalue: 50,\n\t\t\tlabel: ''\n\t\t},\n\t\t{\n\t\t\tname: DaffCartTotalTypeEnum.shipping,\n\t\t\tvalue: 50,\n\t\t\tlabel: 'Shipping'\n\t\t}\n\t];\n  payment = null;\n  available_shipping_methods = [];\n  available_payment_methods = [];\n  extra_attributes = {};\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffCartFactory extends DaffModelFactory<DaffCart>{\n  constructor() {\n    super(MockCart);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as faker from 'faker/locale/en_US';\n\nimport { DaffCartItem, DaffCartItemInputType } from '@daffodil/cart';\nimport { DaffModelFactory } from '@daffodil/core/testing';\nimport { DaffProductImageFactory } from '@daffodil/product/testing';\nimport { DaffProductImage } from '@daffodil/product';\n\nexport class DaffMockCartItem implements DaffCartItem {\n\titem_id = faker.random.number({min: 1, max: 1000});\n\ttype = DaffCartItemInputType.Simple;\n  product_id = String(faker.random.number({min: 1, max: 1000}));\n\tparent_item_id = faker.random.number({min: 1, max: 1000});\n\timage = <DaffProductImage>new DaffProductImageFactory().create();\n  sku = 'sku';\n  name = 'Product Name';\n  qty = faker.random.number({min:1, max:100});\n  price = faker.random.number({min: 1, max: 1500});\n  row_total = this.qty * this.price\n\ttotal_discount = faker.random.number({min: 0, max: this.price - 1});\n\tin_stock = true;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffCartItemFactory extends DaffModelFactory<DaffCartItem> {\n\n  constructor(){\n    super(DaffMockCartItem);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as faker from 'faker/locale/en_US';\n\nimport { DaffConfigurableCartItem, DaffCartItemInputType } from '@daffodil/cart';\nimport { DaffModelFactory } from '@daffodil/core/testing';\n\nimport { DaffMockCartItem } from './cart-item.factory';\n\nexport class DaffMockConfigurableCartItem extends DaffMockCartItem implements DaffConfigurableCartItem {\n\ttype = DaffCartItemInputType.Configurable;\n\tattributes = [\n\t\t{\n\t\t\tattribute_label: 'Color',\n\t\t\tvalue_label: 'Red'\n\t\t},\n\t\t{\n\t\t\tattribute_label: 'Size',\n\t\t\tvalue_label: 'M'\n\t\t}\n\t];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffConfigurableCartItemFactory extends DaffModelFactory<DaffConfigurableCartItem> {\n\n  constructor(){\n    super(DaffMockConfigurableCartItem);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as faker from 'faker/locale/en_US';\n\nimport { DaffCompositeCartItem, DaffCartItemInputType } from '@daffodil/cart';\nimport { DaffModelFactory } from '@daffodil/core/testing';\n\nimport { DaffMockCartItem } from './cart-item.factory';\n\nexport class DaffMockCompositeCartItem extends DaffMockCartItem implements DaffCompositeCartItem {\n\ttype = DaffCartItemInputType.Composite;\n\toptions = [\n\t\t{\n\t\t\toption_id: faker.random.number(1000).toString(),\n\t\t\toption_label: faker.random.word(),\n\t\t\tvalue_label: faker.random.word()\n\t\t},\n\t\t{\n\t\t\toption_id: faker.random.number(1000).toString(),\n\t\t\toption_label: faker.random.word(),\n\t\t\tvalue_label: faker.random.word()\n\t\t}\n\t];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffCompositeCartItemFactory extends DaffModelFactory<DaffCompositeCartItem> {\n\n  constructor(){\n    super(DaffMockCompositeCartItem);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as faker from 'faker/locale/en_US';\n\nimport { DaffCartAddress } from '@daffodil/cart';\nimport { DaffModelFactory } from '@daffodil/core/testing';\n\nexport class MockCartAddress implements DaffCartAddress {\n  address_id = faker.random.number({min: 1, max: 1000});\n  address_type = 'apartment';\n  email = 'email@email.com';\n  prefix = 'prefix';\n  firstname = 'first';\n  middlename = 'middle';\n  lastname = 'last';\n  suffix = 'suffix';\n  company = 'company';\n  street = 'street';\n  city = 'city';\n  state = 'state';\n  region = 'region';\n  postcode = 'postcode';\n  country_id = 'ISO';\n  telephone = '+1 (123)-123-1234';\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffCartAddressFactory extends DaffModelFactory<DaffCartAddress> {\n\n  constructor(){\n    super(MockCartAddress);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { DaffCartPaymentMethod } from '@daffodil/cart';\nimport { DaffModelFactory } from '@daffodil/core/testing';\n\nexport class MockCartPayment implements DaffCartPaymentMethod {\n\tmethod = 'credit-card';\n}\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class DaffCartPaymentFactory extends DaffModelFactory<DaffCartPaymentMethod> {\n\tconstructor() {\n\t\tsuper(MockCartPayment);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport * as faker from 'faker/locale/en_US';\n\nimport { DaffCartShippingRate } from '@daffodil/cart';\nimport { DaffModelFactory } from '@daffodil/core/testing';\n\nexport class MockCartShippingRate implements DaffCartShippingRate {\n    id = faker.random.number({min: 1, max: 1000});\n    carrier = 'Birds Inc.';\n    carrier_title = 'laden';\n    method_code = faker.random.word();\n    method_title = 'swallow';\n    method_description = 'efficient';\n    price = faker.random.number({min: 1, max: 1500});\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DaffCartShippingRateFactory extends DaffModelFactory<DaffCartShippingRate>{\n    constructor(){\n        super(MockCartShippingRate);\n      }\n}\n","import { Injectable } from '@angular/core';\nimport * as faker from 'faker/locale/en_US';\n\nimport { DaffCartCoupon } from '@daffodil/cart';\nimport { DaffModelFactory } from '@daffodil/core/testing';\n\nexport class MockDaffCartCoupon implements DaffCartCoupon {\n  coupon_id = faker.random.number({min: 1, max: 1000});\n  code = faker.random.alphaNumeric(20);\n  description = faker.random.words(5);\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffCartCouponFactory extends DaffModelFactory<DaffCartCoupon> {\n  constructor() {\n    super(MockDaffCartCoupon);\n  }\n}\n"],"names":["faker.random"],"mappings":"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"}