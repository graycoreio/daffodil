{"version":3,"file":"daffodil-cart-driver-in-memory.js","sources":["ng://@daffodil/cart/driver/in-memory/drivers/cart/cart.service.ts","ng://@daffodil/cart/driver/in-memory/drivers/cart-item/cart-item.service.ts","ng://@daffodil/cart/driver/in-memory/drivers/cart-billing-address/cart-billing-address.service.ts","ng://@daffodil/cart/driver/in-memory/drivers/cart-payment/cart-payment.service.ts","ng://@daffodil/cart/driver/in-memory/drivers/cart-payment-methods/cart-payment-methods.service.ts","ng://@daffodil/cart/driver/in-memory/drivers/cart-shipping-address/cart-shipping-address.service.ts","ng://@daffodil/cart/driver/in-memory/drivers/cart-shipping-information/cart-shipping-information.service.ts","ng://@daffodil/cart/driver/in-memory/drivers/cart-shipping-methods/cart-shipping-methods.service.ts","ng://@daffodil/cart/driver/in-memory/drivers/cart-order/cart-order.service.ts","ng://@daffodil/cart/driver/in-memory/drivers/cart-coupon/cart-coupon.service.ts","ng://@daffodil/cart/driver/in-memory/drivers/cart-address/cart-address.service.ts","ng://@daffodil/cart/driver/in-memory/drivers/cart-driver.module.ts","ng://@daffodil/cart/driver/in-memory/backend/cart/cart.service.ts","ng://@daffodil/cart/driver/in-memory/backend/cart-items/cart-items.service.ts","ng://@daffodil/cart/driver/in-memory/backend/cart-order/cart-order.service.ts","ng://@daffodil/cart/driver/in-memory/backend/cart-coupon/cart-coupon.service.ts","ng://@daffodil/cart/driver/in-memory/backend/cart-address/cart-address.service.ts","ng://@daffodil/cart/driver/in-memory/backend/cart-shipping-address/cart-shipping-address.service.ts","ng://@daffodil/cart/driver/in-memory/backend/cart-billing-address/cart-billing-address.service.ts","ng://@daffodil/cart/driver/in-memory/backend/cart-payment-methods/cart-payment-methods.service.ts","ng://@daffodil/cart/driver/in-memory/backend/cart-shipping-methods/cart-shipping-methods.service.ts","ng://@daffodil/cart/driver/in-memory/backend/cart-payment/cart-payment.service.ts","ng://@daffodil/cart/driver/in-memory/backend/cart-shipping-information/cart-shipping-information.service.ts","ng://@daffodil/cart/driver/in-memory/backend/cart-root.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { DaffCart } from '@daffodil/cart';\nimport { DaffCartServiceInterface, DaffCartNotFoundError } from '@daffodil/cart/driver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryCartService implements DaffCartServiceInterface<DaffCart> {\n  url = '/api/cart';\n\n  constructor(private http: HttpClient) {}\n\n  get(cartId: DaffCart['id']): Observable<DaffCart> {\n    return this.http.get<DaffCart>(`${this.url}/${cartId}`).pipe(\n\t\t\tcatchError((error: Error) => throwError(DaffCartNotFoundError)),\n\t\t\tmap(result => result)\n\t\t);\n  }\n\n  addToCart(productId: string, qty: number): Observable<DaffCart> {\n    return this.http.post<DaffCart>(this.url + '/addToCart', { productId, qty });\n  }\n\n  clear(cartId: DaffCart['id']): Observable<Partial<DaffCart>> {\n    return this.http.post<Partial<DaffCart>>(`${this.url}/${cartId}/clear`, {});\n  }\n\n  create(): Observable<{id: DaffCart['id']}> {\n    return this.http.post<{id: DaffCart['id']}>(this.url, {});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { DaffCartItem, DaffCartItemInput, DaffCart } from '@daffodil/cart';\nimport {\n  DaffCartItemServiceInterface,\n} from '@daffodil/cart/driver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryCartItemService implements DaffCartItemServiceInterface<\n  DaffCartItem,\n  DaffCartItemInput,\n  DaffCart\n> {\n  url = '/api/cart-items';\n\n  constructor(private http: HttpClient) {}\n\n  list(cartId: DaffCart['id']): Observable<DaffCartItem[]> {\n    return this.http.get<DaffCartItem[]>(`${this.url}/${cartId}/`)\n  }\n\n  get(cartId: DaffCart['id'], itemId: DaffCartItem['item_id']): Observable<DaffCartItem> {\n    return this.http.get<DaffCartItem>(`${this.url}/${cartId}/${itemId}`);\n  }\n\n  add(cartId: DaffCart['id'], input: DaffCartItemInput): Observable<Partial<DaffCart>> {\n    return this.http.post<Partial<DaffCart>>(`${this.url}/${cartId}/`, input);\n  }\n\n  update(\n    cartId: DaffCart['id'],\n    itemId: DaffCartItem['item_id'],\n    item: Partial<DaffCartItem>\n  ): Observable<Partial<DaffCart>> {\n    return this.http.put<Partial<DaffCart>>(`${this.url}/${cartId}/${itemId}`, item);\n  }\n\n  delete(cartId: string, itemId: string): Observable<Partial<DaffCart>> {\n    return this.http.delete<Partial<DaffCart>>(`${this.url}/${cartId}/${itemId}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { DaffCartAddress, DaffCart } from '@daffodil/cart';\nimport {\n  DaffCartBillingAddressServiceInterface,\n} from '@daffodil/cart/driver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryCartBillingAddressService implements DaffCartBillingAddressServiceInterface<DaffCartAddress, DaffCart> {\n  url = '/api/cart-billing-address';\n\n  constructor(private http: HttpClient) {}\n\n  get(cartId: DaffCart['id']): Observable<DaffCartAddress> {\n    return this.http.get<DaffCartAddress>(`${this.url}/${cartId}`);\n  }\n\n  update(cartId: DaffCart['id'], address: DaffCartAddress): Observable<Partial<DaffCart>> {\n    return this.http.put<Partial<DaffCart>>(`${this.url}/${cartId}`, address);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { DaffCart, DaffCartPaymentMethod, DaffCartAddress } from '@daffodil/cart';\nimport {\n  DaffCartPaymentServiceInterface,\n} from '@daffodil/cart/driver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryCartPaymentService implements DaffCartPaymentServiceInterface {\n  url = '/api/cart-payment';\n\n  constructor(private http: HttpClient) {}\n\n  get(cartId: DaffCart['id']): Observable<DaffCartPaymentMethod> {\n    return this.http.get<DaffCartPaymentMethod>(`${this.url}/${cartId}`);\n  }\n\n  update(cartId: DaffCart['id'], payment: Partial<DaffCartPaymentMethod>): Observable<Partial<DaffCart>> {\n    return this.http.put<DaffCart>(`${this.url}/${cartId}`, {payment});\n  }\n\n  updateWithBilling(cartId: DaffCart['id'], payment: Partial<DaffCartPaymentMethod>, address: Partial<DaffCartAddress>): Observable<Partial<DaffCart>> {\n    return this.http.put<DaffCart>(`${this.url}/${cartId}`, {payment, address});\n  }\n\n  remove(cartId: DaffCart['id']): Observable<void> {\n    return this.http.delete<void>(`${this.url}/${cartId}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { DaffCartPaymentMethod, DaffCart } from '@daffodil/cart';\nimport {\n  DaffCartPaymentMethodsServiceInterface,\n} from '@daffodil/cart/driver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryCartPaymentMethodsService implements DaffCartPaymentMethodsServiceInterface<DaffCartPaymentMethod> {\n  url = '/api/cart-payment-methods';\n\n  constructor(private http: HttpClient) {}\n\n  list(cartId: DaffCart['id']): Observable<DaffCartPaymentMethod[]> {\n    return this.http.get<DaffCartPaymentMethod[]>(`${this.url}/${cartId}`)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { DaffCartAddress, DaffCart } from '@daffodil/cart';\nimport {\n  DaffCartShippingAddressServiceInterface,\n} from '@daffodil/cart/driver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryCartShippingAddressService implements DaffCartShippingAddressServiceInterface<DaffCartAddress, DaffCart> {\n  url = '/api/cart-shipping-address';\n\n  constructor(private http: HttpClient) {}\n\n  get(cartId: DaffCart['id']): Observable<DaffCartAddress> {\n    return this.http.get<DaffCartAddress>(`${this.url}/${cartId}`);\n  }\n\n  update(cartId: DaffCart['id'], address: Partial<DaffCartAddress>): Observable<Partial<DaffCart>> {\n    return this.http.put<Partial<DaffCart>>(`${this.url}/${cartId}`, address);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { DaffCartShippingRate, DaffCart } from '@daffodil/cart';\nimport {\n  DaffCartShippingInformationServiceInterface,\n} from '@daffodil/cart/driver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryCartShippingInformationService implements DaffCartShippingInformationServiceInterface<DaffCartShippingRate, DaffCart> {\n  url = '/api/cart-shipping-information';\n\n  constructor(private http: HttpClient) {}\n\n  get(cartId: DaffCart['id']): Observable<DaffCartShippingRate> {\n    return this.http.get<DaffCartShippingRate>(`${this.url}/${cartId}`);\n  }\n\n  update(cartId: DaffCart['id'], info: Partial<DaffCartShippingRate>): Observable<Partial<DaffCart>> {\n    return this.http.put<DaffCart>(`${this.url}/${cartId}`, info);\n  }\n\n  delete(cartId: DaffCart['id']): Observable<Partial<DaffCart>> {\n    return this.http.delete<Partial<DaffCart>>(`${this.url}/${cartId}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { DaffCartShippingRate, DaffCart } from '@daffodil/cart';\nimport {\n  DaffCartShippingMethodsServiceInterface,\n} from '@daffodil/cart/driver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryCartShippingMethodsService implements DaffCartShippingMethodsServiceInterface<DaffCartShippingRate> {\n  url = '/api/cart-shipping-methods';\n\n  constructor(private http: HttpClient) {}\n\n  list(cartId: DaffCart['id']): Observable<DaffCartShippingRate[]> {\n    return this.http.get<DaffCartShippingRate[]>(`${this.url}/${cartId}`)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { DaffCart, DaffCartPaymentMethod, DaffCartOrderResult } from '@daffodil/cart';\nimport {\n  DaffCartOrderServiceInterface,\n} from '@daffodil/cart/driver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryCartOrderService implements DaffCartOrderServiceInterface {\n  url = '/api/cart-order';\n\n  constructor(private http: HttpClient) {}\n\n  placeOrder(cartId: DaffCart['id'], payment?: DaffCartPaymentMethod): Observable<DaffCartOrderResult> {\n    return this.http.post<DaffCartOrderResult>(`${this.url}/${cartId}/`, {payment});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { DaffCart, DaffCartCoupon } from '@daffodil/cart';\nimport {\n  DaffCartCouponServiceInterface,\n} from '@daffodil/cart/driver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryCartCouponService implements DaffCartCouponServiceInterface {\n  url = '/api/cart-coupon';\n\n  constructor(private http: HttpClient) {}\n\n  list(cartId: DaffCart['id']): Observable<DaffCartCoupon[]> {\n    return this.http.get<DaffCartCoupon[]>(`${this.url}/${cartId}/`)\n  }\n\n  apply(cartId: DaffCart['id'], coupon: DaffCartCoupon): Observable<Partial<DaffCart>> {\n    return this.http.post<Partial<DaffCart>>(`${this.url}/${cartId}/`, coupon);\n  }\n\n  remove(cartId: DaffCart['id'], coupon: DaffCartCoupon): Observable<Partial<DaffCart>> {\n    return this.http.delete<Partial<DaffCart>>(`${this.url}/${cartId}/${coupon.code}`);\n  }\n\n  removeAll(cartId: DaffCart['id']): Observable<Partial<DaffCart>> {\n    return this.http.delete<Partial<DaffCart>>(`${this.url}/${cartId}/`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { DaffCart, DaffCartAddress } from '@daffodil/cart';\nimport {\n  DaffCartAddressServiceInterface,\n} from '@daffodil/cart/driver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryCartAddressService implements DaffCartAddressServiceInterface<DaffCartAddress, DaffCart> {\n  url = '/api/cart-address';\n\n  constructor(private http: HttpClient) {}\n\n  update(cartId: DaffCart['id'], address: DaffCartAddress): Observable<Partial<DaffCart>> {\n    return this.http.put<Partial<DaffCart>>(`${this.url}/${cartId}`, address);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n  DaffCartDriver,\n  DaffCartBillingAddressDriver,\n  DaffCartItemDriver,\n  DaffCartPaymentDriver,\n  DaffCartPaymentMethodsDriver,\n  DaffCartShippingAddressDriver,\n  DaffCartShippingInformationDriver,\n  DaffCartShippingMethodsDriver,\n  DaffCartOrderDriver,\n  DaffCartCouponDriver,\n  DaffCartAddressDriver\n} from '@daffodil/cart/driver';\n\nimport { DaffInMemoryCartService } from './cart/cart.service';\nimport { DaffInMemoryCartBillingAddressService } from './cart-billing-address/cart-billing-address.service';\nimport { DaffInMemoryCartItemService } from './cart-item/cart-item.service';\nimport { DaffInMemoryCartPaymentService } from './cart-payment/cart-payment.service';\nimport { DaffInMemoryCartPaymentMethodsService } from './cart-payment-methods/cart-payment-methods.service';\nimport { DaffInMemoryCartShippingAddressService } from './cart-shipping-address/cart-shipping-address.service';\nimport { DaffInMemoryCartShippingInformationService } from './cart-shipping-information/cart-shipping-information.service';\nimport { DaffInMemoryCartShippingMethodsService } from './cart-shipping-methods/cart-shipping-methods.service';\nimport { DaffInMemoryCartOrderService } from './cart-order/cart-order.service';\nimport { DaffInMemoryCartCouponService } from './cart-coupon/cart-coupon.service';\nimport { DaffInMemoryCartAddressService } from './cart-address/cart-address.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ]\n})\nexport class DaffCartInMemoryDriverModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DaffCartInMemoryDriverModule,\n      providers: [\n        {\n          provide: DaffCartDriver,\n          useExisting: DaffInMemoryCartService\n        },\n        {\n          provide: DaffCartAddressDriver,\n          useExisting: DaffInMemoryCartAddressService\n        },\n        {\n          provide: DaffCartBillingAddressDriver,\n          useExisting: DaffInMemoryCartBillingAddressService\n        },\n        {\n          provide: DaffCartItemDriver,\n          useExisting: DaffInMemoryCartItemService\n        },\n        {\n          provide: DaffCartPaymentDriver,\n          useExisting: DaffInMemoryCartPaymentService\n        },\n        {\n          provide: DaffCartPaymentMethodsDriver,\n          useExisting: DaffInMemoryCartPaymentMethodsService\n        },\n        {\n          provide: DaffCartShippingAddressDriver,\n          useExisting: DaffInMemoryCartShippingAddressService\n        },\n        {\n          provide: DaffCartShippingInformationDriver,\n          useExisting: DaffInMemoryCartShippingInformationService\n        },\n        {\n          provide: DaffCartShippingMethodsDriver,\n          useExisting: DaffInMemoryCartShippingMethodsService\n        },\n        {\n          provide: DaffCartOrderDriver,\n          useExisting: DaffInMemoryCartOrderService\n        },\n        {\n          provide: DaffCartCouponDriver,\n          useExisting: DaffInMemoryCartCouponService\n        }\n      ]\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { STATUS, RequestInfo } from 'angular-in-memory-web-api';\n\nimport { DaffCart } from '@daffodil/cart';\nimport { DaffInMemoryDataServiceInterface } from '@daffodil/core/testing';\n\nimport { DaffCartFactory } from '@daffodil/cart/testing';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryBackendCartService implements DaffInMemoryDataServiceInterface {\n  constructor(\n    private cartFactory: DaffCartFactory,\n  ) {}\n\n  get(reqInfo: RequestInfo) {\n\t\tconst cart = this.getCart(reqInfo)\n\t\treturn reqInfo.utils.createResponse$(() => ({\n\t\t\tbody: cart,\n\t\t\tstatus: cart ? STATUS.OK : STATUS.NOT_FOUND\n\t\t}));\n  }\n\n  post(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => {\n      let body;\n\t\t\tconst action = this.getAction(reqInfo);\n\n      if (reqInfo.id === 'addToCart') {\n        // deprecated\n        body = {};\n      } else if (action === 'clear') {\n        body = this.clear(reqInfo);\n      } else {\n        body = this.create(reqInfo);\n      }\n\n      return {\n        body,\n        status: STATUS.OK\n      };\n    });\n  }\n\n  /**\n   * Gets whatever follows the cart ID section of the request URL.\n   */\n  private getAction(reqInfo: RequestInfo): string {\n    return reqInfo.url.replace(`/${reqInfo.resourceUrl}${reqInfo.id}/`, '')\n  }\n\n  private clear(reqInfo: RequestInfo): DaffCart {\n    const cart = this.getCart(reqInfo);\n\n    cart.items = [];\n\n    return cart\n  }\n\n  private create(reqInfo: RequestInfo): Partial<{id: DaffCart['id']}> {\n    const cart = this.cartFactory.create();\n\n    reqInfo.collection.push(cart);\n\n    return {\n      id: cart.id\n    };\n  }\n\n  private getCart(reqInfo: RequestInfo): DaffCart {\n\t\treturn reqInfo.utils.findById<DaffCart>(reqInfo.collection, reqInfo.id);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { STATUS, RequestInfo } from 'angular-in-memory-web-api';\n\nimport {\n  DaffCart,\n  DaffCartItem,\n  DaffCartItemInput\n} from '@daffodil/cart';\nimport { DaffInMemoryDataServiceInterface } from '@daffodil/core/testing';\n\nimport { DaffCartItemFactory } from '@daffodil/cart/testing';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryBackendCartItemsService implements DaffInMemoryDataServiceInterface {\n  constructor(private cartItemFactory: DaffCartItemFactory) {}\n\n  get(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => {\n      let body;\n      const action = this.getAction(reqInfo);\n\n      if (action) {\n        body = this.getItem(reqInfo, action);\n      } else {\n        body = this.listItems(reqInfo);\n      }\n\n      return {\n        body,\n        status: STATUS.OK\n      };\n    });\n  }\n\n  put(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.updateItem(reqInfo, this.getAction(reqInfo)),\n      status: STATUS.OK\n    }));\n  }\n\n  post(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.addItem(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  delete(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.deleteItem(reqInfo, this.getAction(reqInfo)),\n      status: STATUS.OK\n    }));\n  }\n\n  /**\n   * Gets whatever follows the cart ID section of the request URL.\n   */\n  private getAction(reqInfo: RequestInfo): string {\n    return reqInfo.url.replace(`/${reqInfo.resourceUrl}${reqInfo.id}/`, '')\n  }\n\n  private getCart(reqInfo: RequestInfo): DaffCart {\n    return reqInfo.utils.findById<DaffCart>(reqInfo.collection, Number(reqInfo.id))\n  }\n\n  private transformItemInput(itemInput: DaffCartItemInput) {\n    return {\n      ...this.cartItemFactory.create(),\n      ...itemInput,\n      product_id: itemInput.productId\n    }\n  }\n\n  private listItems(reqInfo): DaffCartItem[] {\n    return this.getCart(reqInfo).items;\n  }\n\n  private getItem(reqInfo: RequestInfo, itemId: DaffCartItem['item_id']): DaffCartItem {\n    const cart = this.getCart(reqInfo);\n\n    return cart.items.find(({item_id}) => String(item_id) === String(itemId))\n  }\n\n  private updateItem(reqInfo: RequestInfo, itemId: DaffCartItem['item_id']): DaffCart {\n    const cart = this.getCart(reqInfo);\n    const item = reqInfo.utils.getJsonBody(reqInfo.req);\n    const itemIndex = cart.items.findIndex(({item_id}) => String(itemId) === String(item_id))\n\n    cart.items[itemIndex] = {\n      ...cart.items[itemIndex],\n      ...item\n    };\n\t\tcart.items = Object.assign([], cart.items);\n\n    return cart\n  }\n\n  private addItem(reqInfo: RequestInfo): DaffCart {\n    const cart = this.getCart(reqInfo);\n\t\tconst itemInput = reqInfo.utils.getJsonBody(reqInfo.req);\n\t\tconst existingCartItemIndex = cart.items.findIndex(item => item.product_id === itemInput.productId);\n\t\tif(existingCartItemIndex > -1) {\n\t\t\tcart.items[existingCartItemIndex].qty = cart.items[existingCartItemIndex].qty + itemInput.qty;\n\t\t} else {\n\t\t\tcart.items.push(this.transformItemInput(itemInput));\n\t\t}\n\t\tcart.items = Object.assign([], cart.items);\n\n    return cart;\n  }\n\n  private deleteItem(reqInfo: RequestInfo, itemId: DaffCartItem['item_id']): DaffCart {\n    const cart = this.getCart(reqInfo);\n    const itemIndex = cart.items.findIndex(({item_id}) => String(itemId) === String(item_id));\n\n\t\tcart.items.splice(itemIndex, 1);\n\t\tcart.items = Object.assign([], cart.items);\n\n    return cart;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { STATUS, RequestInfo } from 'angular-in-memory-web-api';\n\nimport {\n  DaffCartOrderResult\n} from '@daffodil/cart';\nimport { DaffInMemoryDataServiceInterface } from '@daffodil/core/testing';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryBackendCartOrderService implements DaffInMemoryDataServiceInterface {\n  post(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.placeOrder(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  private placeOrder(reqInfo): DaffCartOrderResult {\n    return {\n      id: '8235422034',\n      cartId: '89fdsa8sadf',\n      orderId: '8235422034',\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { STATUS, RequestInfo } from 'angular-in-memory-web-api';\n\nimport {\n  DaffCart,\n  DaffCartCoupon,\n} from '@daffodil/cart';\nimport { DaffInMemoryDataServiceInterface } from '@daffodil/core/testing';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryBackendCartCouponService implements DaffInMemoryDataServiceInterface {\n  get(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.listCoupons(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  post(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.applyCoupon(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  delete(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => {\n      let body;\n      const action = this.getAction(reqInfo);\n\n      if (action) {\n        body = this.removeCoupon(reqInfo, action);\n      } else {\n        body = this.removeAllCoupons(reqInfo);\n      }\n\n      return {\n        body,\n        status: STATUS.OK\n      };\n    });\n  }\n\n  /**\n   * Gets whatever follows the cart ID section of the request URL.\n   */\n  private getAction(reqInfo: RequestInfo): string {\n    return reqInfo.url.replace(`/${reqInfo.resourceUrl}${reqInfo.id}/`, '')\n  }\n\n  private getCart(reqInfo: RequestInfo): DaffCart {\n    return reqInfo.utils.findById<DaffCart>(reqInfo.collection, Number(reqInfo.id))\n  }\n\n  private listCoupons(reqInfo): DaffCartCoupon[] {\n    return this.getCart(reqInfo).coupons;\n  }\n\n  private applyCoupon(reqInfo: RequestInfo): DaffCart {\n    const cart = this.getCart(reqInfo);\n    const coupon = reqInfo.utils.getJsonBody(reqInfo.req);\n\n\t\tcart.coupons.push(coupon);\n\n    return cart;\n  }\n\n  private removeCoupon(reqInfo: RequestInfo, couponCode: DaffCartCoupon['code']): DaffCart {\n    const cart = this.getCart(reqInfo);\n\n    cart.coupons = cart.coupons.filter(({code}) => code !== couponCode)\n\n    return cart\n  }\n\n  private removeAllCoupons(reqInfo: RequestInfo): DaffCart {\n    const cart = this.getCart(reqInfo);\n\n\t\tcart.coupons = [];\n\n    return cart;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { STATUS, RequestInfo } from 'angular-in-memory-web-api';\n\nimport {\n  DaffCart,\n} from '@daffodil/cart';\nimport { DaffInMemoryDataServiceInterface } from '@daffodil/core/testing';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryBackendCartAddressService implements DaffInMemoryDataServiceInterface {\n  put(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.updateAddress(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  private getCart(reqInfo: RequestInfo): DaffCart {\n    return reqInfo.utils.findById<DaffCart>(reqInfo.collection, Number(reqInfo.id))\n  }\n\n  private updateAddress(reqInfo: RequestInfo): DaffCart {\n    const cart = this.getCart(reqInfo);\n    const address = reqInfo.utils.getJsonBody(reqInfo.req);\n\n    cart.billing_address = address;\n    cart.shipping_address = address;\n\n    return cart;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { STATUS, RequestInfo } from 'angular-in-memory-web-api';\n\nimport {\n  DaffCart,\n  DaffCartAddress,\n} from '@daffodil/cart';\nimport { DaffInMemoryDataServiceInterface } from '@daffodil/core/testing';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryBackendCartShippingAddressService implements DaffInMemoryDataServiceInterface {\n  get(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.getShippingAddress(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  put(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.updateShippingAddress(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  private getCart(reqInfo: RequestInfo): DaffCart {\n    return reqInfo.utils.findById<DaffCart>(reqInfo.collection, Number(reqInfo.id))\n  }\n\n  private getShippingAddress(reqInfo): DaffCartAddress {\n    return this.getCart(reqInfo).shipping_address;\n  }\n\n  private updateShippingAddress(reqInfo: RequestInfo): DaffCart {\n    const cart = this.getCart(reqInfo);\n    const address = reqInfo.utils.getJsonBody(reqInfo.req);\n\n\t\tcart.shipping_address = address;\n\n    return cart;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { STATUS, RequestInfo } from 'angular-in-memory-web-api';\n\nimport {\n  DaffCart,\n  DaffCartAddress,\n} from '@daffodil/cart';\nimport { DaffInMemoryDataServiceInterface } from '@daffodil/core/testing';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryBackendCartBillingAddressService implements DaffInMemoryDataServiceInterface {\n  get(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.getBillingAddress(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  put(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.updateBillingAddress(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  private getCart(reqInfo: RequestInfo): DaffCart {\n    return reqInfo.utils.findById<DaffCart>(reqInfo.collection, Number(reqInfo.id))\n  }\n\n  private getBillingAddress(reqInfo): DaffCartAddress {\n    return this.getCart(reqInfo).billing_address;\n  }\n\n  private updateBillingAddress(reqInfo: RequestInfo): DaffCart {\n    const cart = this.getCart(reqInfo);\n    const address = reqInfo.utils.getJsonBody(reqInfo.req);\n\n\t\tcart.billing_address = address;\n\n    return cart;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { STATUS, RequestInfo } from 'angular-in-memory-web-api';\n\nimport {\n  DaffCart,\n  DaffCartPaymentMethod,\n} from '@daffodil/cart';\nimport { DaffInMemoryDataServiceInterface } from '@daffodil/core/testing';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryBackendCartPaymentMethodsService implements DaffInMemoryDataServiceInterface {\n  get(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.listPaymentMethods(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  private getCart(reqInfo: RequestInfo): DaffCart {\n    return reqInfo.utils.findById<DaffCart>(reqInfo.collection, Number(reqInfo.id))\n  }\n\n  private listPaymentMethods(reqInfo): DaffCartPaymentMethod[] {\n    return this.getCart(reqInfo).available_payment_methods;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { STATUS, RequestInfo } from 'angular-in-memory-web-api';\n\nimport {\n  DaffCart,\n  DaffCartShippingRate,\n} from '@daffodil/cart';\nimport { DaffInMemoryDataServiceInterface } from '@daffodil/core/testing';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryBackendCartShippingMethodsService implements DaffInMemoryDataServiceInterface {\n  get(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.listShippingMethods(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  private getCart(reqInfo: RequestInfo): DaffCart {\n    return reqInfo.utils.findById<DaffCart>(reqInfo.collection, Number(reqInfo.id))\n  }\n\n  private listShippingMethods(reqInfo): DaffCartShippingRate[] {\n    return this.getCart(reqInfo).available_shipping_methods;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { STATUS, RequestInfo } from 'angular-in-memory-web-api';\n\nimport {\n  DaffCart,\n  DaffCartPaymentMethod,\n} from '@daffodil/cart';\nimport { DaffInMemoryDataServiceInterface } from '@daffodil/core/testing';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryBackendCartPaymentService implements DaffInMemoryDataServiceInterface {\n  get(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.getPayment(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  put(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.updatePayment(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  delete(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.removePayment(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  private getCart(reqInfo: RequestInfo): DaffCart {\n    return reqInfo.utils.findById<DaffCart>(reqInfo.collection, Number(reqInfo.id))\n  }\n\n  private getPayment(reqInfo): DaffCartPaymentMethod {\n    return this.getCart(reqInfo).payment;\n  }\n\n  private updatePayment(reqInfo: RequestInfo): DaffCart {\n    const cart = this.getCart(reqInfo);\n    const {payment, address} = reqInfo.utils.getJsonBody(reqInfo.req);\n\n    cart.payment = payment;\n\n    if (address) cart.billing_address = address;\n\n    return cart;\n  }\n\n  private removePayment(reqInfo: RequestInfo): DaffCart {\n    const cart = this.getCart(reqInfo);\n\n    cart.payment = null\n\n    return cart\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { STATUS, RequestInfo } from 'angular-in-memory-web-api';\n\nimport {\n  DaffCart,\n  DaffCartShippingInformation,\n} from '@daffodil/cart';\nimport { DaffInMemoryDataServiceInterface } from '@daffodil/core/testing';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryBackendCartShippingInformationService implements DaffInMemoryDataServiceInterface {\n  get(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.getShippingInformation(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  put(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.updateShippingInformation(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  delete(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.removeShippingInformation(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  private getCart(reqInfo: RequestInfo): DaffCart {\n    return reqInfo.utils.findById<DaffCart>(reqInfo.collection, Number(reqInfo.id))\n  }\n\n  private getShippingInformation(reqInfo): DaffCartShippingInformation {\n    return this.getCart(reqInfo).shipping_information;\n  }\n\n  private updateShippingInformation(reqInfo: RequestInfo): DaffCart {\n    const cart = this.getCart(reqInfo);\n    const shippingInformation = reqInfo.utils.getJsonBody(reqInfo.req);\n\n\t\tcart.shipping_information = shippingInformation;\n\n    return cart;\n  }\n\n  private removeShippingInformation(reqInfo: RequestInfo): DaffCart {\n    const cart = this.getCart(reqInfo);\n\n    cart.shipping_information = null\n\n    return cart\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { InMemoryDbService, RequestInfo, STATUS } from 'angular-in-memory-web-api';\n\nimport { DaffCart } from '@daffodil/cart';\nimport { DaffInMemoryDataServiceInterface } from '@daffodil/core/testing';\n\nimport { DaffInMemoryBackendCartService } from './cart/cart.service';\nimport { DaffInMemoryBackendCartItemsService } from './cart-items/cart-items.service';\nimport { DaffInMemoryBackendCartOrderService } from './cart-order/cart-order.service';\nimport { DaffInMemoryBackendCartCouponService } from './cart-coupon/cart-coupon.service';\nimport { DaffInMemoryBackendCartAddressService } from './cart-address/cart-address.service';\nimport { DaffInMemoryBackendCartShippingAddressService } from './cart-shipping-address/cart-shipping-address.service';\nimport { DaffInMemoryBackendCartBillingAddressService } from './cart-billing-address/cart-billing-address.service';\nimport { DaffInMemoryBackendCartPaymentMethodsService } from './cart-payment-methods/cart-payment-methods.service';\nimport { DaffInMemoryBackendCartShippingMethodsService } from './cart-shipping-methods/cart-shipping-methods.service';\nimport { DaffInMemoryBackendCartPaymentService } from './cart-payment/cart-payment.service';\nimport { DaffInMemoryBackendCartShippingInformationService } from './cart-shipping-information/cart-shipping-information.service';\n\n/**\n * The root cart in-memory backend.\n * Creates the database and delegates requests to child backends.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryBackendCartRootService implements InMemoryDbService, DaffInMemoryDataServiceInterface {\n  /**\n   * The collections that the root service manages.\n   * Useful for a higher-level backend that delegates to this one based on collection name.\n   */\n  public static readonly COLLECTION_NAMES = [\n    'cart',\n    'cart-items',\n    'cart-order',\n    'cart-coupon',\n    'cart-address',\n    'cart-shipping-address',\n    'cart-billing-address',\n    'cart-payment-methods',\n    'cart-shipping-methods',\n    'cart-payment',\n    'cart-shipping-information',\n  ]\n\n  public carts: DaffCart[] = [];\n\n  constructor(\n    private cartService: DaffInMemoryBackendCartService,\n    private cartItemsService: DaffInMemoryBackendCartItemsService,\n    private cartOrderService: DaffInMemoryBackendCartOrderService,\n    private cartCouponService: DaffInMemoryBackendCartCouponService,\n    private cartAddressService: DaffInMemoryBackendCartAddressService,\n    private cartShippingAddressService: DaffInMemoryBackendCartShippingAddressService,\n    private cartBillingAddressService: DaffInMemoryBackendCartBillingAddressService,\n    private cartPaymentMethodsService: DaffInMemoryBackendCartPaymentMethodsService,\n    private cartShippingMethodsService: DaffInMemoryBackendCartShippingMethodsService,\n    private cartPaymentService: DaffInMemoryBackendCartPaymentService,\n    private cartShippingInformationService: DaffInMemoryBackendCartShippingInformationService,\n  ) {}\n\n  createDb(reqInfo: RequestInfo) {\n    if (reqInfo) {\n      const seedData = reqInfo.utils.getJsonBody(reqInfo.req).carts;\n      if (seedData) {\n        this.carts = seedData;\n      }\n    }\n\n    return {\n      cart: this.carts\n    };\n  }\n\n  get(reqInfo: RequestInfo) {\n    return this.delegateRequest(reqInfo)\n  }\n\n  post(reqInfo: RequestInfo) {\n    return this.delegateRequest(reqInfo)\n  }\n\n  put(reqInfo: RequestInfo) {\n    return this.delegateRequest(reqInfo)\n  }\n\n  delete(reqInfo: RequestInfo) {\n    return this.delegateRequest(reqInfo)\n  }\n\n  private delegateRequest(reqInfo: RequestInfo) {\n    reqInfo.collection = this.carts;\n\n    switch (reqInfo.collectionName) {\n      case 'cart':\n        return this.cartService[reqInfo.method](reqInfo);\n\n      case 'cart-items':\n        return this.cartItemsService[reqInfo.method](reqInfo);\n\n      case 'cart-order':\n        return this.cartOrderService[reqInfo.method](reqInfo);\n\n      case 'cart-coupon':\n        return this.cartCouponService[reqInfo.method](reqInfo);\n\n      case 'cart-address':\n        return this.cartAddressService[reqInfo.method](reqInfo);\n\n      case 'cart-shipping-address':\n        return this.cartShippingAddressService[reqInfo.method](reqInfo);\n\n      case 'cart-billing-address':\n        return this.cartBillingAddressService[reqInfo.method](reqInfo);\n\n      case 'cart-payment-methods':\n        return this.cartPaymentMethodsService[reqInfo.method](reqInfo);\n\n      case 'cart-shipping-methods':\n        return this.cartShippingMethodsService[reqInfo.method](reqInfo);\n\n      case 'cart-payment':\n        return this.cartPaymentService[reqInfo.method](reqInfo);\n\n      case 'cart-shipping-information':\n        return this.cartShippingInformationService[reqInfo.method](reqInfo);\n\n      default:\n        return reqInfo.utils.createResponse$(() => ({\n          body: {},\n          status: STATUS.OK\n        }));\n    }\n  }\n}\n"],"names":[],"mappings":"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"}