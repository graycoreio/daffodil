/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { DaffLoadingState } from '@daffodil/core/state';
import { DaffCartPaymentActionTypes, } from '../../actions/public_api';
import { initialState } from '../cart-initial-state';
import { DaffCartOperationType } from '../cart-operation-type.enum';
import { initializeErrorAdder, initializeErrorResetter } from '../errors/error-state-helpers';
import { initializeLoadingSetter } from '../loading/cart-loading.type';
/** @type {?} */
var addError = initializeErrorAdder(DaffCartOperationType.Payment);
/** @type {?} */
var resetErrors = initializeErrorResetter(DaffCartOperationType.Payment);
/** @type {?} */
var setLoading = initializeLoadingSetter(DaffCartOperationType.Payment);
/**
 * @template T
 * @param {?=} state
 * @param {?=} action
 * @return {?}
 */
export function cartPaymentReducer(state, action) {
    if (state === void 0) { state = initialState; }
    switch (action.type) {
        case DaffCartPaymentActionTypes.CartPaymentLoadAction:
            return tslib_1.__assign({}, state, setLoading(state.loading, DaffLoadingState.Resolving));
        case DaffCartPaymentActionTypes.CartPaymentUpdateAction:
        case DaffCartPaymentActionTypes.CartPaymentUpdateWithBillingAction:
        case DaffCartPaymentActionTypes.CartPaymentRemoveAction:
            return tslib_1.__assign({}, state, setLoading(state.loading, DaffLoadingState.Mutating));
        case DaffCartPaymentActionTypes.CartPaymentLoadSuccessAction:
            return tslib_1.__assign({}, state, resetErrors(state.errors), { cart: tslib_1.__assign({}, state.cart, { payment: action.payload }) }, setLoading(state.loading, DaffLoadingState.Complete));
        case DaffCartPaymentActionTypes.CartPaymentRemoveSuccessAction:
            return tslib_1.__assign({}, state, resetErrors(state.errors), { cart: tslib_1.__assign({}, state.cart, { payment: null }) }, setLoading(state.loading, DaffLoadingState.Complete));
        case DaffCartPaymentActionTypes.CartPaymentUpdateSuccessAction:
        case DaffCartPaymentActionTypes.CartPaymentUpdateWithBillingSuccessAction:
            return tslib_1.__assign({}, state, resetErrors(state.errors), { cart: tslib_1.__assign({}, state.cart, action.payload) }, setLoading(state.loading, DaffLoadingState.Complete));
        case DaffCartPaymentActionTypes.CartPaymentLoadFailureAction:
        case DaffCartPaymentActionTypes.CartPaymentUpdateFailureAction:
        case DaffCartPaymentActionTypes.CartPaymentUpdateWithBillingFailureAction:
        case DaffCartPaymentActionTypes.CartPaymentRemoveFailureAction:
            return tslib_1.__assign({}, state, addError(state.errors, action.payload), setLoading(state.loading, DaffLoadingState.Complete));
        /**
         * This reducer is temporary until custom reducers can be injected by the @daffodil/paymentSource modules. Right now,
         * the payment modules need a way to update cart state with a payment token.
         *
         * todo: remove when possible.
         */
        case DaffCartPaymentActionTypes.CartPaymentMethodAddAction:
            return tslib_1.__assign({}, state, { cart: tslib_1.__assign({}, state.cart, { payment: tslib_1.__assign({}, action.payload) }) });
        default:
            return state;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FydC1wYXltZW50LnJlZHVjZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZGFmZm9kaWwvY2FydC9zdGF0ZS8iLCJzb3VyY2VzIjpbInJlZHVjZXJzL2NhcnQtcGF5bWVudC9jYXJ0LXBheW1lbnQucmVkdWNlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBR3hELE9BQU8sRUFDTCwwQkFBMEIsR0FDM0IsTUFBTSwwQkFBMEIsQ0FBQztBQUNsQyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFHckQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDcEUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLHVCQUF1QixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDOUYsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sOEJBQThCLENBQUM7O0lBRWpFLFFBQVEsR0FBRyxvQkFBb0IsQ0FBQyxxQkFBcUIsQ0FBQyxPQUFPLENBQUM7O0lBQzlELFdBQVcsR0FBRyx1QkFBdUIsQ0FBQyxxQkFBcUIsQ0FBQyxPQUFPLENBQUM7O0lBQ3BFLFVBQVUsR0FBRyx1QkFBdUIsQ0FBQyxxQkFBcUIsQ0FBQyxPQUFPLENBQUM7Ozs7Ozs7QUFFekUsTUFBTSxVQUFVLGtCQUFrQixDQUNoQyxLQUFvQixFQUNwQixNQUFtQjtJQURuQixzQkFBQSxFQUFBLG9CQUFvQjtJQUdwQixRQUFRLE1BQU0sQ0FBQyxJQUFJLEVBQUU7UUFDbkIsS0FBSywwQkFBMEIsQ0FBQyxxQkFBcUI7WUFDbkQsNEJBQ0ssS0FBSyxFQUNMLFVBQVUsQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFLGdCQUFnQixDQUFDLFNBQVMsQ0FBQyxFQUN4RDtRQUVKLEtBQUssMEJBQTBCLENBQUMsdUJBQXVCLENBQUM7UUFDeEQsS0FBSywwQkFBMEIsQ0FBQyxrQ0FBa0MsQ0FBQztRQUNuRSxLQUFLLDBCQUEwQixDQUFDLHVCQUF1QjtZQUNyRCw0QkFDSyxLQUFLLEVBQ0wsVUFBVSxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsZ0JBQWdCLENBQUMsUUFBUSxDQUFDLEVBQ3ZEO1FBRUosS0FBSywwQkFBMEIsQ0FBQyw0QkFBNEI7WUFDMUQsNEJBQ0ssS0FBSyxFQUNMLFdBQVcsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLElBQzVCLElBQUksdUJBQ0MsS0FBSyxDQUFDLElBQUksSUFDYixPQUFPLEVBQUUsTUFBTSxDQUFDLE9BQU8sT0FFdEIsVUFBVSxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsZ0JBQWdCLENBQUMsUUFBUSxDQUFDLEVBQ3ZEO1FBRUosS0FBSywwQkFBMEIsQ0FBQyw4QkFBOEI7WUFDNUQsNEJBQ0ssS0FBSyxFQUNMLFdBQVcsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLElBQzVCLElBQUksdUJBQ0MsS0FBSyxDQUFDLElBQUksSUFDYixPQUFPLEVBQUUsSUFBSSxPQUVaLFVBQVUsQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxFQUN2RDtRQUVKLEtBQUssMEJBQTBCLENBQUMsOEJBQThCLENBQUM7UUFDL0QsS0FBSywwQkFBMEIsQ0FBQyx5Q0FBeUM7WUFDdkUsNEJBQ0ssS0FBSyxFQUNMLFdBQVcsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLElBQzVCLElBQUksdUJBQ0MsS0FBSyxDQUFDLElBQUksRUFDVixNQUFNLENBQUMsT0FBTyxLQUVoQixVQUFVLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRSxnQkFBZ0IsQ0FBQyxRQUFRLENBQUMsRUFDdkQ7UUFFSixLQUFLLDBCQUEwQixDQUFDLDRCQUE0QixDQUFDO1FBQzdELEtBQUssMEJBQTBCLENBQUMsOEJBQThCLENBQUM7UUFDL0QsS0FBSywwQkFBMEIsQ0FBQyx5Q0FBeUMsQ0FBQztRQUMxRSxLQUFLLDBCQUEwQixDQUFDLDhCQUE4QjtZQUM1RCw0QkFDSyxLQUFLLEVBQ0wsUUFBUSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLE9BQU8sQ0FBQyxFQUN0QyxVQUFVLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRSxnQkFBZ0IsQ0FBQyxRQUFRLENBQUMsRUFDMUQ7UUFHSDs7Ozs7V0FLRztRQUNILEtBQUssMEJBQTBCLENBQUMsMEJBQTBCO1lBQ3pELDRCQUNJLEtBQUssSUFDUixJQUFJLHVCQUNBLEtBQUssQ0FBQyxJQUFJLElBQ2IsT0FBTyx1QkFDSCxNQUFNLENBQUMsT0FBTyxRQUdsQjtRQUdEO1lBQ0UsT0FBTyxLQUFLLENBQUM7S0FDaEI7QUFDSCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGFmZkxvYWRpbmdTdGF0ZSB9IGZyb20gJ0BkYWZmb2RpbC9jb3JlL3N0YXRlJztcbmltcG9ydCB7IERhZmZDYXJ0IH0gZnJvbSAnQGRhZmZvZGlsL2NhcnQnO1xuXG5pbXBvcnQge1xuICBEYWZmQ2FydFBheW1lbnRBY3Rpb25UeXBlcyxcbn0gZnJvbSAnLi4vLi4vYWN0aW9ucy9wdWJsaWNfYXBpJztcbmltcG9ydCB7IGluaXRpYWxTdGF0ZSB9IGZyb20gJy4uL2NhcnQtaW5pdGlhbC1zdGF0ZSc7XG5pbXBvcnQgeyBEYWZmQ2FydFJlZHVjZXJTdGF0ZSB9IGZyb20gJy4uL2NhcnQtc3RhdGUuaW50ZXJmYWNlJztcbmltcG9ydCB7IEFjdGlvblR5cGVzIH0gZnJvbSAnLi4vYWN0aW9uLXR5cGVzLnR5cGUnO1xuaW1wb3J0IHsgRGFmZkNhcnRPcGVyYXRpb25UeXBlIH0gZnJvbSAnLi4vY2FydC1vcGVyYXRpb24tdHlwZS5lbnVtJztcbmltcG9ydCB7IGluaXRpYWxpemVFcnJvckFkZGVyLCBpbml0aWFsaXplRXJyb3JSZXNldHRlciB9IGZyb20gJy4uL2Vycm9ycy9lcnJvci1zdGF0ZS1oZWxwZXJzJztcbmltcG9ydCB7IGluaXRpYWxpemVMb2FkaW5nU2V0dGVyIH0gZnJvbSAnLi4vbG9hZGluZy9jYXJ0LWxvYWRpbmcudHlwZSc7XG5cbmNvbnN0IGFkZEVycm9yID0gaW5pdGlhbGl6ZUVycm9yQWRkZXIoRGFmZkNhcnRPcGVyYXRpb25UeXBlLlBheW1lbnQpO1xuY29uc3QgcmVzZXRFcnJvcnMgPSBpbml0aWFsaXplRXJyb3JSZXNldHRlcihEYWZmQ2FydE9wZXJhdGlvblR5cGUuUGF5bWVudCk7XG5jb25zdCBzZXRMb2FkaW5nID0gaW5pdGlhbGl6ZUxvYWRpbmdTZXR0ZXIoRGFmZkNhcnRPcGVyYXRpb25UeXBlLlBheW1lbnQpO1xuXG5leHBvcnQgZnVuY3Rpb24gY2FydFBheW1lbnRSZWR1Y2VyPFQgZXh0ZW5kcyBEYWZmQ2FydD4oXG4gIHN0YXRlID0gaW5pdGlhbFN0YXRlLFxuICBhY3Rpb246IEFjdGlvblR5cGVzXG4pOiBEYWZmQ2FydFJlZHVjZXJTdGF0ZTxUPiB7XG4gIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcbiAgICBjYXNlIERhZmZDYXJ0UGF5bWVudEFjdGlvblR5cGVzLkNhcnRQYXltZW50TG9hZEFjdGlvbjpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAuLi5zZXRMb2FkaW5nKHN0YXRlLmxvYWRpbmcsIERhZmZMb2FkaW5nU3RhdGUuUmVzb2x2aW5nKVxuICAgICAgfTtcblxuICAgIGNhc2UgRGFmZkNhcnRQYXltZW50QWN0aW9uVHlwZXMuQ2FydFBheW1lbnRVcGRhdGVBY3Rpb246XG4gICAgY2FzZSBEYWZmQ2FydFBheW1lbnRBY3Rpb25UeXBlcy5DYXJ0UGF5bWVudFVwZGF0ZVdpdGhCaWxsaW5nQWN0aW9uOlxuICAgIGNhc2UgRGFmZkNhcnRQYXltZW50QWN0aW9uVHlwZXMuQ2FydFBheW1lbnRSZW1vdmVBY3Rpb246XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgLi4uc2V0TG9hZGluZyhzdGF0ZS5sb2FkaW5nLCBEYWZmTG9hZGluZ1N0YXRlLk11dGF0aW5nKVxuICAgICAgfTtcblxuICAgIGNhc2UgRGFmZkNhcnRQYXltZW50QWN0aW9uVHlwZXMuQ2FydFBheW1lbnRMb2FkU3VjY2Vzc0FjdGlvbjpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAuLi5yZXNldEVycm9ycyhzdGF0ZS5lcnJvcnMpLFxuICAgICAgICBjYXJ0OiB7XG4gICAgICAgICAgLi4uc3RhdGUuY2FydCxcbiAgICAgICAgICBwYXltZW50OiBhY3Rpb24ucGF5bG9hZFxuICAgICAgICB9LFxuICAgICAgICAuLi5zZXRMb2FkaW5nKHN0YXRlLmxvYWRpbmcsIERhZmZMb2FkaW5nU3RhdGUuQ29tcGxldGUpLFxuICAgICAgfTtcblxuICAgIGNhc2UgRGFmZkNhcnRQYXltZW50QWN0aW9uVHlwZXMuQ2FydFBheW1lbnRSZW1vdmVTdWNjZXNzQWN0aW9uOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIC4uLnJlc2V0RXJyb3JzKHN0YXRlLmVycm9ycyksXG4gICAgICAgIGNhcnQ6IHtcbiAgICAgICAgICAuLi5zdGF0ZS5jYXJ0LFxuICAgICAgICAgIHBheW1lbnQ6IG51bGxcbiAgICAgICAgfSxcbiAgICAgICAgLi4uc2V0TG9hZGluZyhzdGF0ZS5sb2FkaW5nLCBEYWZmTG9hZGluZ1N0YXRlLkNvbXBsZXRlKSxcbiAgICAgIH07XG5cbiAgICBjYXNlIERhZmZDYXJ0UGF5bWVudEFjdGlvblR5cGVzLkNhcnRQYXltZW50VXBkYXRlU3VjY2Vzc0FjdGlvbjpcbiAgICBjYXNlIERhZmZDYXJ0UGF5bWVudEFjdGlvblR5cGVzLkNhcnRQYXltZW50VXBkYXRlV2l0aEJpbGxpbmdTdWNjZXNzQWN0aW9uOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIC4uLnJlc2V0RXJyb3JzKHN0YXRlLmVycm9ycyksXG4gICAgICAgIGNhcnQ6IHtcbiAgICAgICAgICAuLi5zdGF0ZS5jYXJ0LFxuICAgICAgICAgIC4uLmFjdGlvbi5wYXlsb2FkXG4gICAgICAgIH0sXG4gICAgICAgIC4uLnNldExvYWRpbmcoc3RhdGUubG9hZGluZywgRGFmZkxvYWRpbmdTdGF0ZS5Db21wbGV0ZSksXG4gICAgICB9O1xuXG4gICAgY2FzZSBEYWZmQ2FydFBheW1lbnRBY3Rpb25UeXBlcy5DYXJ0UGF5bWVudExvYWRGYWlsdXJlQWN0aW9uOlxuICAgIGNhc2UgRGFmZkNhcnRQYXltZW50QWN0aW9uVHlwZXMuQ2FydFBheW1lbnRVcGRhdGVGYWlsdXJlQWN0aW9uOlxuICAgIGNhc2UgRGFmZkNhcnRQYXltZW50QWN0aW9uVHlwZXMuQ2FydFBheW1lbnRVcGRhdGVXaXRoQmlsbGluZ0ZhaWx1cmVBY3Rpb246XG4gICAgY2FzZSBEYWZmQ2FydFBheW1lbnRBY3Rpb25UeXBlcy5DYXJ0UGF5bWVudFJlbW92ZUZhaWx1cmVBY3Rpb246XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgLi4uYWRkRXJyb3Ioc3RhdGUuZXJyb3JzLCBhY3Rpb24ucGF5bG9hZCksXG4gICAgICAgIC4uLnNldExvYWRpbmcoc3RhdGUubG9hZGluZywgRGFmZkxvYWRpbmdTdGF0ZS5Db21wbGV0ZSksXG5cdFx0XHR9O1xuXG5cblx0XHQvKipcblx0XHQgKiBUaGlzIHJlZHVjZXIgaXMgdGVtcG9yYXJ5IHVudGlsIGN1c3RvbSByZWR1Y2VycyBjYW4gYmUgaW5qZWN0ZWQgYnkgdGhlIEBkYWZmb2RpbC9wYXltZW50U291cmNlIG1vZHVsZXMuIFJpZ2h0IG5vdyxcblx0XHQgKiB0aGUgcGF5bWVudCBtb2R1bGVzIG5lZWQgYSB3YXkgdG8gdXBkYXRlIGNhcnQgc3RhdGUgd2l0aCBhIHBheW1lbnQgdG9rZW4uXG5cdFx0ICpcblx0XHQgKiB0b2RvOiByZW1vdmUgd2hlbiBwb3NzaWJsZS5cblx0XHQgKi9cblx0XHRjYXNlIERhZmZDYXJ0UGF5bWVudEFjdGlvblR5cGVzLkNhcnRQYXltZW50TWV0aG9kQWRkQWN0aW9uOlxuXHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0Li4uc3RhdGUsXG5cdFx0XHRcdGNhcnQ6IHtcblx0XHRcdFx0XHQuLi5zdGF0ZS5jYXJ0LFxuXHRcdFx0XHRcdHBheW1lbnQ6IHtcblx0XHRcdFx0XHRcdC4uLmFjdGlvbi5wYXlsb2FkXG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXG5cbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIHN0YXRlO1xuICB9XG59XG4iXX0=