/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { DaffLoadingState } from '@daffodil/core/state';
import { DaffCartBillingAddressActionTypes, DaffCartAddressActionTypes } from '../../actions/public_api';
import { initialState } from '../cart-initial-state';
import { initializeErrorAdder, initializeErrorResetter } from '../errors/error-state-helpers';
import { DaffCartOperationType } from '../cart-operation-type.enum';
import { initializeLoadingSetter } from '../loading/cart-loading.type';
/** @type {?} */
var addError = initializeErrorAdder(DaffCartOperationType.BillingAddress);
/** @type {?} */
var resetErrors = initializeErrorResetter(DaffCartOperationType.BillingAddress);
/** @type {?} */
var setLoading = initializeLoadingSetter(DaffCartOperationType.BillingAddress);
/**
 * @template T
 * @param {?=} state
 * @param {?=} action
 * @return {?}
 */
export function cartBillingAddressReducer(state, action) {
    if (state === void 0) { state = initialState; }
    switch (action.type) {
        case DaffCartBillingAddressActionTypes.CartBillingAddressLoadAction:
            return tslib_1.__assign({}, state, setLoading(state.loading, DaffLoadingState.Resolving));
        case DaffCartBillingAddressActionTypes.CartBillingAddressUpdateAction:
        case DaffCartAddressActionTypes.CartAddressUpdateAction:
            return tslib_1.__assign({}, state, setLoading(state.loading, DaffLoadingState.Mutating));
        case DaffCartBillingAddressActionTypes.CartBillingAddressLoadSuccessAction:
            return tslib_1.__assign({}, state, resetErrors(state.errors), { cart: tslib_1.__assign({}, state.cart, { billing_address: action.payload }) }, setLoading(state.loading, DaffLoadingState.Complete));
        case DaffCartBillingAddressActionTypes.CartBillingAddressUpdateSuccessAction:
        case DaffCartAddressActionTypes.CartAddressUpdateSuccessAction:
            return tslib_1.__assign({}, state, resetErrors(state.errors), { cart: tslib_1.__assign({}, state.cart, action.payload) }, setLoading(state.loading, DaffLoadingState.Complete));
        case DaffCartBillingAddressActionTypes.CartBillingAddressLoadFailureAction:
        case DaffCartBillingAddressActionTypes.CartBillingAddressUpdateFailureAction:
        case DaffCartAddressActionTypes.CartAddressUpdateFailureAction:
            return tslib_1.__assign({}, state, addError(state.errors, action.payload), setLoading(state.loading, DaffLoadingState.Complete));
        default:
            return state;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FydC1iaWxsaW5nLWFkZHJlc3MucmVkdWNlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BkYWZmb2RpbC9jYXJ0L3N0YXRlLyIsInNvdXJjZXMiOlsicmVkdWNlcnMvY2FydC1iaWxsaW5nLWFkZHJlc3MvY2FydC1iaWxsaW5nLWFkZHJlc3MucmVkdWNlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBR3hELE9BQU8sRUFDTCxpQ0FBaUMsRUFDakMsMEJBQTBCLEVBQzNCLE1BQU0sMEJBQTBCLENBQUM7QUFDbEMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBR3JELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSx1QkFBdUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQzlGLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3BFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDhCQUE4QixDQUFDOztJQUVqRSxRQUFRLEdBQUcsb0JBQW9CLENBQUMscUJBQXFCLENBQUMsY0FBYyxDQUFDOztJQUNyRSxXQUFXLEdBQUcsdUJBQXVCLENBQUMscUJBQXFCLENBQUMsY0FBYyxDQUFDOztJQUMzRSxVQUFVLEdBQUcsdUJBQXVCLENBQUMscUJBQXFCLENBQUMsY0FBYyxDQUFDOzs7Ozs7O0FBRWhGLE1BQU0sVUFBVSx5QkFBeUIsQ0FDdkMsS0FBb0IsRUFDcEIsTUFBbUI7SUFEbkIsc0JBQUEsRUFBQSxvQkFBb0I7SUFHcEIsUUFBUSxNQUFNLENBQUMsSUFBSSxFQUFFO1FBQ25CLEtBQUssaUNBQWlDLENBQUMsNEJBQTRCO1lBQ2pFLDRCQUNLLEtBQUssRUFDTCxVQUFVLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRSxnQkFBZ0IsQ0FBQyxTQUFTLENBQUMsRUFDeEQ7UUFFSixLQUFLLGlDQUFpQyxDQUFDLDhCQUE4QixDQUFDO1FBQ3RFLEtBQUssMEJBQTBCLENBQUMsdUJBQXVCO1lBQ3JELDRCQUNLLEtBQUssRUFDTCxVQUFVLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRSxnQkFBZ0IsQ0FBQyxRQUFRLENBQUMsRUFDdkQ7UUFFSixLQUFLLGlDQUFpQyxDQUFDLG1DQUFtQztZQUN4RSw0QkFDSyxLQUFLLEVBQ0wsV0FBVyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsSUFDNUIsSUFBSSx1QkFDQyxLQUFLLENBQUMsSUFBSSxJQUNiLGVBQWUsRUFBRSxNQUFNLENBQUMsT0FBTyxPQUU5QixVQUFVLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRSxnQkFBZ0IsQ0FBQyxRQUFRLENBQUMsRUFDdkQ7UUFFSixLQUFLLGlDQUFpQyxDQUFDLHFDQUFxQyxDQUFDO1FBQzdFLEtBQUssMEJBQTBCLENBQUMsOEJBQThCO1lBQzVELDRCQUNLLEtBQUssRUFDTCxXQUFXLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUM1QixJQUFJLHVCQUNDLEtBQUssQ0FBQyxJQUFJLEVBQ1YsTUFBTSxDQUFDLE9BQU8sS0FFaEIsVUFBVSxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsZ0JBQWdCLENBQUMsUUFBUSxDQUFDLEVBQ3ZEO1FBRUosS0FBSyxpQ0FBaUMsQ0FBQyxtQ0FBbUMsQ0FBQztRQUMzRSxLQUFLLGlDQUFpQyxDQUFDLHFDQUFxQyxDQUFDO1FBQzdFLEtBQUssMEJBQTBCLENBQUMsOEJBQThCO1lBQzVELDRCQUNLLEtBQUssRUFDTCxRQUFRLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsT0FBTyxDQUFDLEVBQ3RDLFVBQVUsQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxFQUN2RDtRQUVKO1lBQ0UsT0FBTyxLQUFLLENBQUM7S0FDaEI7QUFDSCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGFmZkxvYWRpbmdTdGF0ZSB9IGZyb20gJ0BkYWZmb2RpbC9jb3JlL3N0YXRlJztcbmltcG9ydCB7IERhZmZDYXJ0IH0gZnJvbSAnQGRhZmZvZGlsL2NhcnQnO1xuXG5pbXBvcnQge1xuICBEYWZmQ2FydEJpbGxpbmdBZGRyZXNzQWN0aW9uVHlwZXMsXG4gIERhZmZDYXJ0QWRkcmVzc0FjdGlvblR5cGVzXG59IGZyb20gJy4uLy4uL2FjdGlvbnMvcHVibGljX2FwaSc7XG5pbXBvcnQgeyBpbml0aWFsU3RhdGUgfSBmcm9tICcuLi9jYXJ0LWluaXRpYWwtc3RhdGUnO1xuaW1wb3J0IHsgRGFmZkNhcnRSZWR1Y2VyU3RhdGUgfSBmcm9tICcuLi9jYXJ0LXN0YXRlLmludGVyZmFjZSc7XG5pbXBvcnQgeyBBY3Rpb25UeXBlcyB9IGZyb20gJy4uL2FjdGlvbi10eXBlcy50eXBlJztcbmltcG9ydCB7IGluaXRpYWxpemVFcnJvckFkZGVyLCBpbml0aWFsaXplRXJyb3JSZXNldHRlciB9IGZyb20gJy4uL2Vycm9ycy9lcnJvci1zdGF0ZS1oZWxwZXJzJztcbmltcG9ydCB7IERhZmZDYXJ0T3BlcmF0aW9uVHlwZSB9IGZyb20gJy4uL2NhcnQtb3BlcmF0aW9uLXR5cGUuZW51bSc7XG5pbXBvcnQgeyBpbml0aWFsaXplTG9hZGluZ1NldHRlciB9IGZyb20gJy4uL2xvYWRpbmcvY2FydC1sb2FkaW5nLnR5cGUnO1xuXG5jb25zdCBhZGRFcnJvciA9IGluaXRpYWxpemVFcnJvckFkZGVyKERhZmZDYXJ0T3BlcmF0aW9uVHlwZS5CaWxsaW5nQWRkcmVzcyk7XG5jb25zdCByZXNldEVycm9ycyA9IGluaXRpYWxpemVFcnJvclJlc2V0dGVyKERhZmZDYXJ0T3BlcmF0aW9uVHlwZS5CaWxsaW5nQWRkcmVzcyk7XG5jb25zdCBzZXRMb2FkaW5nID0gaW5pdGlhbGl6ZUxvYWRpbmdTZXR0ZXIoRGFmZkNhcnRPcGVyYXRpb25UeXBlLkJpbGxpbmdBZGRyZXNzKTtcblxuZXhwb3J0IGZ1bmN0aW9uIGNhcnRCaWxsaW5nQWRkcmVzc1JlZHVjZXI8VCBleHRlbmRzIERhZmZDYXJ0PihcbiAgc3RhdGUgPSBpbml0aWFsU3RhdGUsXG4gIGFjdGlvbjogQWN0aW9uVHlwZXNcbik6IERhZmZDYXJ0UmVkdWNlclN0YXRlPFQ+IHtcbiAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgIGNhc2UgRGFmZkNhcnRCaWxsaW5nQWRkcmVzc0FjdGlvblR5cGVzLkNhcnRCaWxsaW5nQWRkcmVzc0xvYWRBY3Rpb246XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgLi4uc2V0TG9hZGluZyhzdGF0ZS5sb2FkaW5nLCBEYWZmTG9hZGluZ1N0YXRlLlJlc29sdmluZylcbiAgICAgIH07XG5cbiAgICBjYXNlIERhZmZDYXJ0QmlsbGluZ0FkZHJlc3NBY3Rpb25UeXBlcy5DYXJ0QmlsbGluZ0FkZHJlc3NVcGRhdGVBY3Rpb246XG4gICAgY2FzZSBEYWZmQ2FydEFkZHJlc3NBY3Rpb25UeXBlcy5DYXJ0QWRkcmVzc1VwZGF0ZUFjdGlvbjpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAuLi5zZXRMb2FkaW5nKHN0YXRlLmxvYWRpbmcsIERhZmZMb2FkaW5nU3RhdGUuTXV0YXRpbmcpXG4gICAgICB9O1xuXG4gICAgY2FzZSBEYWZmQ2FydEJpbGxpbmdBZGRyZXNzQWN0aW9uVHlwZXMuQ2FydEJpbGxpbmdBZGRyZXNzTG9hZFN1Y2Nlc3NBY3Rpb246XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgLi4ucmVzZXRFcnJvcnMoc3RhdGUuZXJyb3JzKSxcbiAgICAgICAgY2FydDoge1xuICAgICAgICAgIC4uLnN0YXRlLmNhcnQsXG4gICAgICAgICAgYmlsbGluZ19hZGRyZXNzOiBhY3Rpb24ucGF5bG9hZFxuICAgICAgICB9LFxuICAgICAgICAuLi5zZXRMb2FkaW5nKHN0YXRlLmxvYWRpbmcsIERhZmZMb2FkaW5nU3RhdGUuQ29tcGxldGUpLFxuICAgICAgfTtcblxuICAgIGNhc2UgRGFmZkNhcnRCaWxsaW5nQWRkcmVzc0FjdGlvblR5cGVzLkNhcnRCaWxsaW5nQWRkcmVzc1VwZGF0ZVN1Y2Nlc3NBY3Rpb246XG4gICAgY2FzZSBEYWZmQ2FydEFkZHJlc3NBY3Rpb25UeXBlcy5DYXJ0QWRkcmVzc1VwZGF0ZVN1Y2Nlc3NBY3Rpb246XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgLi4ucmVzZXRFcnJvcnMoc3RhdGUuZXJyb3JzKSxcbiAgICAgICAgY2FydDoge1xuICAgICAgICAgIC4uLnN0YXRlLmNhcnQsXG4gICAgICAgICAgLi4uYWN0aW9uLnBheWxvYWRcbiAgICAgICAgfSxcbiAgICAgICAgLi4uc2V0TG9hZGluZyhzdGF0ZS5sb2FkaW5nLCBEYWZmTG9hZGluZ1N0YXRlLkNvbXBsZXRlKSxcbiAgICAgIH07XG5cbiAgICBjYXNlIERhZmZDYXJ0QmlsbGluZ0FkZHJlc3NBY3Rpb25UeXBlcy5DYXJ0QmlsbGluZ0FkZHJlc3NMb2FkRmFpbHVyZUFjdGlvbjpcbiAgICBjYXNlIERhZmZDYXJ0QmlsbGluZ0FkZHJlc3NBY3Rpb25UeXBlcy5DYXJ0QmlsbGluZ0FkZHJlc3NVcGRhdGVGYWlsdXJlQWN0aW9uOlxuICAgIGNhc2UgRGFmZkNhcnRBZGRyZXNzQWN0aW9uVHlwZXMuQ2FydEFkZHJlc3NVcGRhdGVGYWlsdXJlQWN0aW9uOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIC4uLmFkZEVycm9yKHN0YXRlLmVycm9ycywgYWN0aW9uLnBheWxvYWQpLFxuICAgICAgICAuLi5zZXRMb2FkaW5nKHN0YXRlLmxvYWRpbmcsIERhZmZMb2FkaW5nU3RhdGUuQ29tcGxldGUpLFxuICAgICAgfTtcblxuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gc3RhdGU7XG4gIH1cbn1cbiJdfQ==