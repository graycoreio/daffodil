/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import gql from 'graphql-tag';
import { daffBuildFragmentNameSpread, daffBuildFragmentDefinition } from '@daffodil/core/graphql';
import { cartFragment } from './fragments/public_api';
/**
 * Update the shipping and billing address of the cart.
 * At the time of writing, Magento 2 processes compound queries in the order they are defined.
 * We rely on this fact and only use the return of the last query.
 * This helps us keep query complexity down and save some server CPU cycles.
 * Driver behavior is not guaranteed if Magento no longer processes compound queries in the order they are defined.
 * @type {?}
 */
export var updateAddressWithEmail = (/**
 * @param {?=} extraCartFragments
 * @return {?}
 */
function (extraCartFragments) {
    if (extraCartFragments === void 0) { extraCartFragments = []; }
    return gql(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["\n  mutation UpdateAddress($cartId: String!, $address: CartAddressInput!, $email: String!) {\n    setBillingAddressOnCart(input: {\n      cart_id: $cartId\n      billing_address: {\n        address: $address\n      }\n    }) {\n      cart {\n        id\n      }\n    }\n    setShippingAddressesOnCart(input: {\n      cart_id: $cartId\n      shipping_addresses: [{\n        address: $address\n      }]\n    }) {\n      cart {\n        id\n      }\n    }\n    setGuestEmailOnCart(input: {\n      cart_id: $cartId,\n      email: $email\n    }) {\n      cart {\n        ...cart\n        ", "\n      }\n    }\n  }\n  ", "\n  ", "\n"], ["\n  mutation UpdateAddress($cartId: String!, $address: CartAddressInput!, $email: String!) {\n    setBillingAddressOnCart(input: {\n      cart_id: $cartId\n      billing_address: {\n        address: $address\n      }\n    }) {\n      cart {\n        id\n      }\n    }\n    setShippingAddressesOnCart(input: {\n      cart_id: $cartId\n      shipping_addresses: [{\n        address: $address\n      }]\n    }) {\n      cart {\n        id\n      }\n    }\n    setGuestEmailOnCart(input: {\n      cart_id: $cartId,\n      email: $email\n    }) {\n      cart {\n        ...cart\n        ", "\n      }\n    }\n  }\n  ", "\n  ", "\n"])), daffBuildFragmentNameSpread.apply(void 0, tslib_1.__spread(extraCartFragments)), cartFragment, daffBuildFragmentDefinition.apply(void 0, tslib_1.__spread(extraCartFragments)));
});
var templateObject_1;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXBkYXRlLWFkZHJlc3Mtd2l0aC1lbWFpbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BkYWZmb2RpbC9jYXJ0L2RyaXZlci9tYWdlbnRvLyIsInNvdXJjZXMiOlsicXVlcmllcy91cGRhdGUtYWRkcmVzcy13aXRoLWVtYWlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQ0EsT0FBTyxHQUFHLE1BQU0sYUFBYSxDQUFDO0FBRTlCLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSwyQkFBMkIsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRWxHLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQzs7Ozs7Ozs7O0FBU3RELE1BQU0sS0FBTyxzQkFBc0I7Ozs7QUFBRyxVQUFDLGtCQUF1QztJQUF2QyxtQ0FBQSxFQUFBLHVCQUF1QztJQUFLLE9BQUEsR0FBRywrckJBQUEseWtCQTRCNUUsRUFBa0QsMkJBSXhELEVBQVksTUFDWixFQUFrRCxJQUNyRCxLQU5TLDJCQUEyQixnQ0FBSSxrQkFBa0IsSUFJdkQsWUFBWSxFQUNaLDJCQUEyQixnQ0FBSSxrQkFBa0I7QUFqQzhCLENBa0NsRixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRG9jdW1lbnROb2RlIH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgZ3FsIGZyb20gJ2dyYXBocWwtdGFnJztcblxuaW1wb3J0IHsgZGFmZkJ1aWxkRnJhZ21lbnROYW1lU3ByZWFkLCBkYWZmQnVpbGRGcmFnbWVudERlZmluaXRpb24gfSBmcm9tICdAZGFmZm9kaWwvY29yZS9ncmFwaHFsJztcblxuaW1wb3J0IHsgY2FydEZyYWdtZW50IH0gZnJvbSAnLi9mcmFnbWVudHMvcHVibGljX2FwaSc7XG5cbi8qKlxuICogVXBkYXRlIHRoZSBzaGlwcGluZyBhbmQgYmlsbGluZyBhZGRyZXNzIG9mIHRoZSBjYXJ0LlxuICogQXQgdGhlIHRpbWUgb2Ygd3JpdGluZywgTWFnZW50byAyIHByb2Nlc3NlcyBjb21wb3VuZCBxdWVyaWVzIGluIHRoZSBvcmRlciB0aGV5IGFyZSBkZWZpbmVkLlxuICogV2UgcmVseSBvbiB0aGlzIGZhY3QgYW5kIG9ubHkgdXNlIHRoZSByZXR1cm4gb2YgdGhlIGxhc3QgcXVlcnkuXG4gKiBUaGlzIGhlbHBzIHVzIGtlZXAgcXVlcnkgY29tcGxleGl0eSBkb3duIGFuZCBzYXZlIHNvbWUgc2VydmVyIENQVSBjeWNsZXMuXG4gKiBEcml2ZXIgYmVoYXZpb3IgaXMgbm90IGd1YXJhbnRlZWQgaWYgTWFnZW50byBubyBsb25nZXIgcHJvY2Vzc2VzIGNvbXBvdW5kIHF1ZXJpZXMgaW4gdGhlIG9yZGVyIHRoZXkgYXJlIGRlZmluZWQuXG4gKi9cbmV4cG9ydCBjb25zdCB1cGRhdGVBZGRyZXNzV2l0aEVtYWlsID0gKGV4dHJhQ2FydEZyYWdtZW50czogRG9jdW1lbnROb2RlW10gPSBbXSkgPT4gZ3FsYFxuICBtdXRhdGlvbiBVcGRhdGVBZGRyZXNzKCRjYXJ0SWQ6IFN0cmluZyEsICRhZGRyZXNzOiBDYXJ0QWRkcmVzc0lucHV0ISwgJGVtYWlsOiBTdHJpbmchKSB7XG4gICAgc2V0QmlsbGluZ0FkZHJlc3NPbkNhcnQoaW5wdXQ6IHtcbiAgICAgIGNhcnRfaWQ6ICRjYXJ0SWRcbiAgICAgIGJpbGxpbmdfYWRkcmVzczoge1xuICAgICAgICBhZGRyZXNzOiAkYWRkcmVzc1xuICAgICAgfVxuICAgIH0pIHtcbiAgICAgIGNhcnQge1xuICAgICAgICBpZFxuICAgICAgfVxuICAgIH1cbiAgICBzZXRTaGlwcGluZ0FkZHJlc3Nlc09uQ2FydChpbnB1dDoge1xuICAgICAgY2FydF9pZDogJGNhcnRJZFxuICAgICAgc2hpcHBpbmdfYWRkcmVzc2VzOiBbe1xuICAgICAgICBhZGRyZXNzOiAkYWRkcmVzc1xuICAgICAgfV1cbiAgICB9KSB7XG4gICAgICBjYXJ0IHtcbiAgICAgICAgaWRcbiAgICAgIH1cbiAgICB9XG4gICAgc2V0R3Vlc3RFbWFpbE9uQ2FydChpbnB1dDoge1xuICAgICAgY2FydF9pZDogJGNhcnRJZCxcbiAgICAgIGVtYWlsOiAkZW1haWxcbiAgICB9KSB7XG4gICAgICBjYXJ0IHtcbiAgICAgICAgLi4uY2FydFxuICAgICAgICAke2RhZmZCdWlsZEZyYWdtZW50TmFtZVNwcmVhZCguLi5leHRyYUNhcnRGcmFnbWVudHMpfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICAke2NhcnRGcmFnbWVudH1cbiAgJHtkYWZmQnVpbGRGcmFnbWVudERlZmluaXRpb24oLi4uZXh0cmFDYXJ0RnJhZ21lbnRzKX1cbmA7XG4iXX0=