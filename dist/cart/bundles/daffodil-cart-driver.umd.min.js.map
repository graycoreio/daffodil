{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@daffodil/cart/driver/interfaces/cart-service.interface.ts","ng://@daffodil/cart/driver/interfaces/cart-billing-address-service.interface.ts","ng://@daffodil/cart/driver/interfaces/cart-address-service.interface.ts","ng://@daffodil/cart/driver/interfaces/cart-coupon-service.interface.ts","ng://@daffodil/cart/driver/interfaces/cart-item-service.interface.ts","ng://@daffodil/cart/driver/interfaces/cart-payment-methods-service.interface.ts","ng://@daffodil/cart/driver/interfaces/cart-payment-service.interface.ts","ng://@daffodil/cart/driver/interfaces/cart-shipping-address-service.interface.ts","ng://@daffodil/cart/driver/interfaces/cart-shipping-information-service.interface.ts","ng://@daffodil/cart/driver/interfaces/cart-shipping-methods-service.interface.ts","ng://@daffodil/cart/driver/interfaces/cart-order-service.interface.ts","ng://@daffodil/cart/driver/errors/codes.enum.ts","ng://@daffodil/cart/driver/errors/cart-not-found.ts","ng://@daffodil/cart/driver/errors/expired-payment-token.ts","ng://@daffodil/cart/driver/errors/invalid-api-response.ts","ng://@daffodil/cart/driver/errors/invalid-country.ts","ng://@daffodil/cart/driver/errors/invalid-coupon-code.ts","ng://@daffodil/cart/driver/errors/invalid-region.ts","ng://@daffodil/cart/driver/errors/product-not-found.ts","ng://@daffodil/cart/driver/errors/product-out-of-stock.ts","ng://@daffodil/cart/driver/errors/map.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","DaffCartDriver","InjectionToken","DaffCartBillingAddressDriver","DaffCartAddressDriver","DaffCartCouponDriver","DaffCartItemDriver","DaffCartPaymentMethodsDriver","DaffCartPaymentDriver","DaffCartShippingAddressDriver","DaffCartShippingInformationDriver","DaffCartShippingMethodsDriver","DaffCartOrderDriver","CART_NOT_FOUND","PRODUCT_NOT_FOUND","PRODUCT_OUT_OF_STOCK","INVALID_COUPON_CODE","INVALID_COUNTRY","INVALID_REGION","INVALID_API_RESPONSE","EXPIRED_PAYMENT_METHOD","DaffCartNotFoundError","message","_this","_super","call","code","DaffCartDriverErrorCodes","tslib_1.__extends","DaffInheritableError","DaffCartExpiredPaymentTokenError","DaffCartInvalidAPIResponseError","DaffInvalidCountryError","DaffInvalidCouponCodeError","DaffInvalidRegionError","DaffProductNotFoundError","DaffProductOutOfStockError","DaffCartDriverErrorMap","_a"],"mappings":"oZAgBA,IAAIA,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAGrB,SAASO,EAAUR,EAAGC,GAEzB,SAASQ,IAAOC,KAAKC,YAAcX,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEY,UAAkB,OAANX,EAAaC,OAAOW,OAAOZ,IAAMQ,EAAGG,UAAYX,EAAEW,UAAW,IAAIH,GCOnF,IAAaK,EAAiB,IAAIC,EAAAA,eACjC,kBCXD,IAAaC,EAA+B,IAAID,EAAAA,eAE9C,gCCPF,IAAaE,EAAwB,IAAIF,EAAAA,eAEvC,yBCUF,IAAaG,EAAuB,IAAIH,EAAAA,eACvC,wBCYD,IAAaI,EAAqB,IAAIJ,EAAAA,eAEpC,sBC9BF,IAAaK,EAA+B,IAAIL,EAAAA,eAE9C,gCCiBF,IAAaM,EAAwB,IAAIN,EAAAA,eAEvC,yBCbF,IAAaO,EAAgC,IAAIP,EAAAA,eAE/C,iCCCF,IAAaQ,EAAoC,IAAIR,EAAAA,eAEnD,qCCXF,IAAaS,EAAgC,IAAIT,EAAAA,eAE/C,iCCAF,IAAaU,EAAsB,IAAIV,EAAAA,eACtC,0BCnBCW,eAAiB,sBACjBC,kBAAoB,yBACpBC,qBAAuB,4BACvBC,oBAAsB,2BACtBC,gBAAkB,uBAClBC,eAAiB,sBACjBC,qBAAuB,4BACvBC,uBAAyB,6CCG1B,SAAAC,EAAYC,GAAZ,IAAAC,EACCC,EAAAC,KAAA5B,KAAMyB,IAAQzB,YAHC0B,EAAAG,KAAeC,EAAyBd,iBAKzD,OAN2Ce,EAAAA,EAAAA,GAM3CP,GAN2CQ,EAAAA,sBCC3C,kBAGC,SAAAC,EAAmBR,GAAnB,IAAAC,EACCC,EAAAC,KAAA5B,KAAMyB,IAAQzB,YADI0B,EAAAD,QAAAA,EAFFC,EAAAG,KAAeC,EAAyBP,yBAK1D,OANsDQ,EAAAA,EAAAA,GAMtDE,GANsDD,EAAAA,sBCDtD,kBAGC,SAAAE,EAAmBT,GAAnB,IAAAC,EACCC,EAAAC,KAAA5B,KAAMyB,IAAQzB,YADI0B,EAAAD,QAAAA,EAFFC,EAAAG,KAAeC,EAAyBR,uBAK1D,OANqDS,EAAAA,EAAAA,GAMrDG,GANqDF,EAAAA,sBCArD,kBAGC,SAAAG,EAAYV,GAAZ,IAAAC,EACCC,EAAAC,KAAA5B,KAAMyB,IAAQzB,YAHC0B,EAAAG,KAAeC,EAAyBV,kBAKzD,OAN6CW,EAAAA,EAAAA,GAM7CI,GAN6CH,EAAAA,sBCA7C,kBAGC,SAAAI,EAAYX,GAAZ,IAAAC,EACCC,EAAAC,KAAA5B,KAAMyB,IAAQzB,YAHC0B,EAAAG,KAAeC,EAAyBX,sBAKzD,OANgDY,EAAAA,EAAAA,GAMhDK,GANgDJ,EAAAA,sBCAhD,kBAGC,SAAAK,EAAYZ,GAAZ,IAAAC,EACCC,EAAAC,KAAA5B,KAAMyB,IAAQzB,YAHC0B,EAAAG,KAAeC,EAAyBT,iBAKzD,OAN4CU,EAAAA,EAAAA,GAM5CM,GAN4CL,EAAAA,sBCA5C,kBAGC,SAAAM,EAAYb,GAAZ,IAAAC,EACCC,EAAAC,KAAA5B,KAAMyB,IAAQzB,YAHC0B,EAAAG,KAAeC,EAAyBb,oBAKzD,OAN8Cc,EAAAA,EAAAA,GAM9CO,GAN8CN,EAAAA,sBCA9C,oBAGC,SAAAO,EAAYd,GAAZ,IAAAC,EACCC,EAAAC,KAAA5B,KAAMyB,IAAQzB,YAHC0B,EAAAG,KAAeC,EAAyBZ,uBAKzD,OANgDa,EAAAA,EAAAA,GAMhDQ,GANgDP,EAAAA,sBCKhD,IAAaQ,IAAsBC,EAAA,IAChCX,EAAyBd,gBAAiBQ,EAC3CiB,EAACX,EAAyBb,mBAAoBqB,EAC9CG,EAACX,EAAyBZ,sBAAuBqB,EACjDE,EAACX,EAAyBX,qBAAsBiB,EAChDK,EAACX,EAAyBV,iBAAkBe,EAC5CM,EAACX,EAAyBT,gBAAiBgB,EAC3CI,EAACX,EAAyBR,sBAAuBY,EACjDO,EAACX,EAAyBP,wBAAyBU","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DaffCart } from '@daffodil/cart';\n\n/**\n * The interface responsible for managing a customer's cart.\n */\nexport interface DaffCartServiceInterface<T extends DaffCart = DaffCart> {\n\t/**\n\t * Retrieve a cart\n\t */\n  get(id: T['id']): Observable<T>;\n\n  /**\n   * Creates a cart.\n   */\n  create(): Observable<{id: T['id']}>\n\n\t/**\n\t * @deprecated\n\t * Prefer DaffCartItemServiceInterface.add\n\t *\n\t * Add an item to the cart.\n\t */\n\taddToCart(productId: string, qty: number): Observable<T>;\n\n\t/**\n\t * Remove all items from a cart.\n\t */\n\tclear(id: T['id']): Observable<Partial<T>>;\n}\n\nexport const DaffCartDriver = new InjectionToken<DaffCartServiceInterface<any>>(\n\t'DaffCartDriver',\n);\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DaffCartAddress, DaffCart } from '@daffodil/cart';\n\n/**\n * The interface responsible for managing the billing address of a cart.\n */\nexport interface DaffCartBillingAddressServiceInterface<\n\tT extends DaffCartAddress = DaffCartAddress,\n\tV extends DaffCart = DaffCart\n> {\n\t/**\n\t * Retrieve the billing address of a cart\n\t */\n\tget(cartId: V['id']): Observable<T>;\n\n\t/**\n\t * Update the billing address of a cart\n\t */\n\tupdate(cartId: V['id'], address: Partial<T>): Observable<Partial<V>>;\n}\n\nexport const DaffCartBillingAddressDriver = new InjectionToken<\n\tDaffCartBillingAddressServiceInterface<any, any>\n>('DaffCartBillingAddressDriver');\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DaffCartAddress, DaffCart } from '@daffodil/cart';\n\n/**\n * The interface responsible for managing the address of a cart.\n */\nexport interface DaffCartAddressServiceInterface<\n\tT extends DaffCartAddress = DaffCartAddress,\n\tV extends DaffCart = DaffCart\n> {\n\t/**\n\t * Update the billing and shipping address of a cart\n\t */\n\tupdate(cartId: V['id'], address: Partial<T>): Observable<Partial<V>>;\n}\n\nexport const DaffCartAddressDriver = new InjectionToken<\n\tDaffCartAddressServiceInterface<any, any>\n>('DaffCartAddressDriver');\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DaffCart, DaffCartCoupon } from '@daffodil/cart';\n\n/**\n * The interface responsible for applying a coupon to a cart.\n */\nexport interface DaffCartCouponServiceInterface<T extends DaffCart = DaffCart, V extends DaffCartCoupon = DaffCartCoupon> {\n\t/**\n\t * Apply a coupon to the cart and return a partial of the cart.\n\t */\n\tapply(cartId: T['id'], coupon: V): Observable<Partial<T>>;\n\n\t/**\n\t * List coupon codes applied to a cart.\n\t */\n\tlist(cartId: T['id']): Observable<V[]>;\n\n\t/**\n\t * Remove a coupon from the cart and return a partial of the cart.\n\t */\n\tremove(cartId: T['id'], coupon: V): Observable<Partial<T>>;\n\n\t/**\n\t * Remove all coupons from the cart and return a partial of the cart.\n\t */\n\tremoveAll(cartId: T['id']): Observable<Partial<T>>;\n}\n\nexport const DaffCartCouponDriver = new InjectionToken<DaffCartCouponServiceInterface>(\n\t'DaffCartCouponDriver',\n);\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DaffCartItem, DaffCartItemInput, DaffCart } from '@daffodil/cart';\n\n/**\n * The interface responsible for managing the items of a cart.\n */\nexport interface DaffCartItemServiceInterface<\n\tT extends DaffCartItem = DaffCartItem,\n\tU extends DaffCartItemInput = DaffCartItemInput,\n\tV extends DaffCart = DaffCart\n> {\n\t/**\n\t * List all of the available items of a cart\n\t */\n\tlist(cartId: V['id']): Observable<T[]>;\n\n\t/**\n\t * Get a specific cart item of a cart.\n\t */\n\tget(cartId: V['id'], item_id: DaffCartItem['item_id']): Observable<T>;\n\n\t/**\n\t * Add something to a cart.\n\t */\n\tadd(id: V['id'], product: U): Observable<Partial<V>>;\n\n\t/**\n\t * Update an existing item in a cart\n\t */\n\tupdate(\n\t\tcartId: V['id'],\n\t\titemId: T['item_id'],\n\t\tchanges: Partial<T>,\n\t): Observable<Partial<V>>;\n\n\t/**\n\t * Remove an item from a cart.\n\t */\n\tdelete(cartId: V['id'], itemId: T['item_id']): Observable<Partial<V>>;\n}\n\nexport const DaffCartItemDriver = new InjectionToken<\n\tDaffCartItemServiceInterface<any, any, any>\n>('DaffCartItemDriver');\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DaffCartPaymentMethod, DaffCart } from '@daffodil/cart';\n\n/**\n * The interface responsible for retrieving the available payment methods of a cart.\n */\nexport interface DaffCartPaymentMethodsServiceInterface<T extends DaffCartPaymentMethod = DaffCartPaymentMethod> {\n\t/**\n\t * List the available payment methods of a cart.\n\t */\n\tlist(cartId: DaffCart['id']): Observable<T[]>;\n}\n\nexport const DaffCartPaymentMethodsDriver = new InjectionToken<\n\tDaffCartPaymentMethodsServiceInterface<any>\n>('DaffCartPaymentMethodsDriver');\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DaffCartPaymentMethod, DaffCart, DaffCartAddress } from '@daffodil/cart';\n\n/**\n * The interface responsible for managing the selected payment method of a cart.\n */\nexport interface DaffCartPaymentServiceInterface<\n  T extends DaffCartPaymentMethod = DaffCartPaymentMethod,\n  V extends DaffCart = DaffCart,\n  R extends DaffCartAddress = DaffCartAddress\n> {\n\t/**\n\t * Get the currently applied payment method of a cart.\n\t */\n\tget(cartId: V['id']): Observable<T>;\n\n\t/**\n\t * Update the payment method applied to a cart.\n\t */\n  update(cartId: V['id'], payment: Partial<T>): Observable<Partial<V>>;\n\n  /**\n\t * Update the billing address and payment method applied to a cart.\n\t */\n\tupdateWithBilling(cartId: V['id'], payment: Partial<T>, address: Partial<R>): Observable<Partial<V>>;\n\n\t/**\n\t * Remove the payment method applied to a cart.\n\t */\n\tremove(cartId: V['id']): Observable<void>;\n}\n\nexport const DaffCartPaymentDriver = new InjectionToken<\n\tDaffCartPaymentServiceInterface<any, any>\n>('DaffCartPaymentDriver');\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DaffCartAddress, DaffCart } from '@daffodil/cart';\n\n/**\n * The interface responsible for managing the shipping address of a cart.\n */\nexport interface DaffCartShippingAddressServiceInterface<\n\tT extends DaffCartAddress = DaffCartAddress,\n\tV extends DaffCart = DaffCart\n> {\n\t/**\n\t * Retrieve the shipping address of a cart.\n\t */\n\tget(cartId: V['id']): Observable<T>;\n\n\t/**\n\t * Update the shipping address of a cart.\n\t */\n\tupdate(cartId: V['id'], address: Partial<T>): Observable<Partial<V>>;\n}\n\nexport const DaffCartShippingAddressDriver = new InjectionToken<\n\tDaffCartShippingAddressServiceInterface<any,any>\n>('DaffCartShippingAddressDriver');\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DaffCartShippingRate, DaffCart } from '@daffodil/cart';\n\n/**\n * The interface responsible for mediating the interaction of the shipping\n * information of a cart with a given platform.\n */\nexport interface DaffCartShippingInformationServiceInterface<T extends DaffCartShippingRate = DaffCartShippingRate, V extends DaffCart = DaffCart>{\n\t/**\n\t * Get the currently selected shipping method of a cart.\n\t */\n\tget(cartId: V['id']): Observable<T>;\n\n\t/**\n\t * Update the currently selected shipping method of a cart.\n\t */\n\tupdate(cartId: V['id'], shippingInfo: Partial<T>): Observable<Partial<V>>;\n\n\t/**\n\t * Remove the currently selected shipping method from a cart.\n\t */\n\tdelete(cartId: V['id'], id?: T['id']): Observable<Partial<V>>;\n}\n\nexport const DaffCartShippingInformationDriver = new InjectionToken<\n\tDaffCartShippingInformationServiceInterface<any, any>\n>('DaffCartShippingInformationDriver');\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DaffCartShippingRate, DaffCart } from '@daffodil/cart';\n\n/**\n * The interface responsible for retrieving the available shipping methods of a cart.\n */\nexport interface DaffCartShippingMethodsServiceInterface<\n\tT extends DaffCartShippingRate = DaffCartShippingRate\n> {\n\t/**\n\t * List the available shipping methods for a cart.\n\t */\n\tlist(cartId: DaffCart['id']): Observable<T[]>;\n}\n\nexport const DaffCartShippingMethodsDriver = new InjectionToken<\n\tDaffCartShippingMethodsServiceInterface<any>\n>('DaffCartShippingMethodsDriver');\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DaffCart, DaffCartPaymentMethod, DaffCartOrderResult } from '@daffodil/cart';\n\n/**\n * The interface responsible for placing an order for the customer's cart.\n */\nexport interface DaffCartOrderServiceInterface<\n  T extends DaffCart = DaffCart,\n  V extends DaffCartPaymentMethod = DaffCartPaymentMethod,\n  R extends DaffCartOrderResult = DaffCartOrderResult\n> {\n\t/**\n\t * Place an order and return the order ID.\n\t */\n  placeOrder(id: T['id'], payment?: V): Observable<R>;\n}\n\nexport const DaffCartOrderDriver = new InjectionToken<DaffCartOrderServiceInterface>(\n\t'DaffCartOrderDriver',\n);\n","export enum DaffCartDriverErrorCodes {\n  CART_NOT_FOUND = 'DAFF_CART_NOT_FOUND',\n  PRODUCT_NOT_FOUND = 'DAFF_PRODUCT_NOT_FOUND',\n  PRODUCT_OUT_OF_STOCK = 'DAFF_PRODUCT_OUT_OF_STOCK',\n  INVALID_COUPON_CODE = 'DAFF_INVALID_COUPON_CODE',\n  INVALID_COUNTRY = 'DAFF_INVALID_COUNTRY',\n  INVALID_REGION = 'DAFF_INVALID_REGION',\n  INVALID_API_RESPONSE = 'DAFF_INVALID_API_RESPONSE',\n  EXPIRED_PAYMENT_METHOD = 'DAFF_EXPIRED_PAYMENT_METHOD',\n}\n","import { DaffError, DaffInheritableError } from '@daffodil/core';\n\nimport { DaffCartDriverErrorCodes } from './codes.enum';\n\n/**\n * An error thrown when a cart driver call is sent with a cart identifier\n * that cannot be found by the platform.\n */\nexport class DaffCartNotFoundError extends DaffInheritableError implements DaffError {\n\tpublic readonly code: string = DaffCartDriverErrorCodes.CART_NOT_FOUND;\n\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t}\n}\n","import { DaffError, DaffInheritableError } from '@daffodil/core';\n\nimport { DaffCartDriverErrorCodes } from './codes.enum';\n\n/**\n * An error thrown when the payment token used for the payment method update has expired.\n * This happens when the a place order request happens too long after payment update.\n * The payment must be updated again before an order can be placed.\n */\nexport class DaffCartExpiredPaymentTokenError extends DaffInheritableError implements DaffError {\n  public readonly code: string = DaffCartDriverErrorCodes.EXPIRED_PAYMENT_METHOD;\n\n\tconstructor(public message: string) {\n\t\tsuper(message);\n\t}\n}\n","import { DaffError, DaffInheritableError } from '@daffodil/core';\n\nimport { DaffCartDriverErrorCodes } from './codes.enum';\n\n/**\n * An error thrown when the platform's API response is missing required information\n * or malformed in an unrecoverable way.\n */\nexport class DaffCartInvalidAPIResponseError extends DaffInheritableError implements DaffError {\n  public readonly code: string = DaffCartDriverErrorCodes.INVALID_API_RESPONSE;\n\n\tconstructor(public message: string) {\n\t\tsuper(message);\n\t}\n}\n","import { DaffError, DaffInheritableError } from '@daffodil/core';\n\nimport { DaffCartDriverErrorCodes } from './codes.enum';\n\n/**\n * An error thrown when the specified country is invalid for the specified address\n * or missing where it is required.\n */\nexport class DaffInvalidCountryError extends DaffInheritableError implements DaffError {\n\tpublic readonly code: string = DaffCartDriverErrorCodes.INVALID_COUNTRY\n\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t}\n}\n","import { DaffError, DaffInheritableError } from '@daffodil/core';\n\nimport { DaffCartDriverErrorCodes } from './codes.enum';\n\n/**\n * An error thrown when the specified coupon code cannot be applied to the cart.\n * Either the coupon code does not exist or the required conditions are not met.\n */\nexport class DaffInvalidCouponCodeError extends DaffInheritableError implements DaffError {\n\tpublic readonly code: string = DaffCartDriverErrorCodes.INVALID_COUPON_CODE\n\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t}\n}\n","import { DaffError, DaffInheritableError } from '@daffodil/core';\n\nimport { DaffCartDriverErrorCodes } from './codes.enum';\n\n/**\n * An error thrown when the specified region is invalid for the specified address\n * or missing where it is required.\n */\nexport class DaffInvalidRegionError extends DaffInheritableError implements DaffError {\n\tpublic readonly code: string = DaffCartDriverErrorCodes.INVALID_REGION\n\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t}\n}\n","import { DaffError, DaffInheritableError } from '@daffodil/core';\n\nimport { DaffCartDriverErrorCodes } from './codes.enum';\n\n/**\n * An error thrown when an add to cart request is sent\n * for a product that cannot be found.\n */\nexport class DaffProductNotFoundError extends DaffInheritableError implements DaffError {\n\tpublic readonly code: string = DaffCartDriverErrorCodes.PRODUCT_NOT_FOUND;\n\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t}\n}\n","import { DaffError, DaffInheritableError } from '@daffodil/core';\n\nimport { DaffCartDriverErrorCodes } from './codes.enum';\n\n/**\n * An error thrown when a cart item's requested quantity\n * exceeds that allowed by the platform for the specified product.\n */\nexport class DaffProductOutOfStockError extends DaffInheritableError implements DaffError {\n\tpublic readonly code: string = DaffCartDriverErrorCodes.PRODUCT_OUT_OF_STOCK;\n\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t}\n}\n","import { DaffCartDriverErrorCodes } from './codes.enum';\nimport { DaffCartNotFoundError } from './cart-not-found';\nimport { DaffCartExpiredPaymentTokenError } from './expired-payment-token';\nimport { DaffCartInvalidAPIResponseError } from './invalid-api-response';\nimport { DaffInvalidCountryError } from './invalid-country';\nimport { DaffInvalidCouponCodeError } from './invalid-coupon-code';\nimport { DaffInvalidRegionError } from './invalid-region';\nimport { DaffProductNotFoundError } from './product-not-found';\nimport { DaffProductOutOfStockError } from './product-out-of-stock';\n\n/**\n * A mapping from error codes to error class constructors.\n */\nexport const DaffCartDriverErrorMap = {\n  [DaffCartDriverErrorCodes.CART_NOT_FOUND]: DaffCartNotFoundError,\n  [DaffCartDriverErrorCodes.PRODUCT_NOT_FOUND]: DaffProductNotFoundError,\n  [DaffCartDriverErrorCodes.PRODUCT_OUT_OF_STOCK]: DaffProductOutOfStockError,\n  [DaffCartDriverErrorCodes.INVALID_COUPON_CODE]: DaffInvalidCouponCodeError,\n  [DaffCartDriverErrorCodes.INVALID_COUNTRY]: DaffInvalidCountryError,\n  [DaffCartDriverErrorCodes.INVALID_REGION]: DaffInvalidRegionError,\n  [DaffCartDriverErrorCodes.INVALID_API_RESPONSE]: DaffCartInvalidAPIResponseError,\n  [DaffCartDriverErrorCodes.EXPIRED_PAYMENT_METHOD]: DaffCartExpiredPaymentTokenError,\n}\n"]}