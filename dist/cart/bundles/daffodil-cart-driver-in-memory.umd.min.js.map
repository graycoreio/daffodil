{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@daffodil/cart/driver/in-memory/drivers/cart/cart.service.ts","ng://@daffodil/cart/driver/in-memory/drivers/cart-item/cart-item.service.ts","ng://@daffodil/cart/driver/in-memory/drivers/cart-billing-address/cart-billing-address.service.ts","ng://@daffodil/cart/driver/in-memory/drivers/cart-payment/cart-payment.service.ts","ng://@daffodil/cart/driver/in-memory/drivers/cart-payment-methods/cart-payment-methods.service.ts","ng://@daffodil/cart/driver/in-memory/drivers/cart-shipping-address/cart-shipping-address.service.ts","ng://@daffodil/cart/driver/in-memory/drivers/cart-shipping-information/cart-shipping-information.service.ts","ng://@daffodil/cart/driver/in-memory/drivers/cart-shipping-methods/cart-shipping-methods.service.ts","ng://@daffodil/cart/driver/in-memory/drivers/cart-order/cart-order.service.ts","ng://@daffodil/cart/driver/in-memory/drivers/cart-coupon/cart-coupon.service.ts","ng://@daffodil/cart/driver/in-memory/drivers/cart-address/cart-address.service.ts","ng://@daffodil/cart/driver/in-memory/drivers/cart-driver.module.ts","ng://@daffodil/cart/driver/in-memory/backend/cart/cart.service.ts","ng://@daffodil/cart/driver/in-memory/backend/cart-items/cart-items.service.ts","ng://@daffodil/cart/driver/in-memory/backend/cart-order/cart-order.service.ts","ng://@daffodil/cart/driver/in-memory/backend/cart-coupon/cart-coupon.service.ts","ng://@daffodil/cart/driver/in-memory/backend/cart-address/cart-address.service.ts","ng://@daffodil/cart/driver/in-memory/backend/cart-shipping-address/cart-shipping-address.service.ts","ng://@daffodil/cart/driver/in-memory/backend/cart-billing-address/cart-billing-address.service.ts","ng://@daffodil/cart/driver/in-memory/backend/cart-payment-methods/cart-payment-methods.service.ts","ng://@daffodil/cart/driver/in-memory/backend/cart-shipping-methods/cart-shipping-methods.service.ts","ng://@daffodil/cart/driver/in-memory/backend/cart-payment/cart-payment.service.ts","ng://@daffodil/cart/driver/in-memory/backend/cart-shipping-information/cart-shipping-information.service.ts","ng://@daffodil/cart/driver/in-memory/backend/cart-root.service.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","DaffInMemoryCartService","http","url","get","cartId","pipe","catchError","error","throwError","DaffCartNotFoundError","map","result","addToCart","productId","qty","post","clear","create","Injectable","args","providedIn","HttpClient","DaffInMemoryCartItemService","list","itemId","add","input","update","item","put","delete","DaffInMemoryCartBillingAddressService","address","DaffInMemoryCartPaymentService","payment","updateWithBilling","remove","DaffInMemoryCartPaymentMethodsService","DaffInMemoryCartShippingAddressService","DaffInMemoryCartShippingInformationService","info","DaffInMemoryCartShippingMethodsService","DaffInMemoryCartOrderService","placeOrder","DaffInMemoryCartCouponService","coupon","code","removeAll","DaffInMemoryCartAddressService","DaffCartInMemoryDriverModule","forRoot","ngModule","providers","provide","DaffCartDriver","useExisting","DaffCartAddressDriver","DaffCartBillingAddressDriver","DaffCartItemDriver","DaffCartPaymentDriver","DaffCartPaymentMethodsDriver","DaffCartShippingAddressDriver","DaffCartShippingInformationDriver","DaffCartShippingMethodsDriver","DaffCartOrderDriver","DaffCartCouponDriver","NgModule","imports","CommonModule","DaffInMemoryBackendCartService","cartFactory","reqInfo","cart","getCart","utils","createResponse$","body","status","STATUS","OK","NOT_FOUND","_this","action","getAction","id","replace","resourceUrl","items","collection","push","findById","DaffCartFactory","DaffInMemoryBackendCartItemsService","cartItemFactory","getItem","listItems","updateItem","addItem","deleteItem","Number","transformItemInput","itemInput","product_id","find","_a","item_id","String","getJsonBody","req","itemIndex","findIndex","existingCartItemIndex","splice","DaffCartItemFactory","DaffInMemoryBackendCartOrderService","orderId","DaffInMemoryBackendCartCouponService","listCoupons","applyCoupon","removeCoupon","removeAllCoupons","coupons","couponCode","filter","DaffInMemoryBackendCartAddressService","updateAddress","billing_address","shipping_address","DaffInMemoryBackendCartShippingAddressService","getShippingAddress","updateShippingAddress","DaffInMemoryBackendCartBillingAddressService","getBillingAddress","updateBillingAddress","DaffInMemoryBackendCartPaymentMethodsService","listPaymentMethods","available_payment_methods","DaffInMemoryBackendCartShippingMethodsService","listShippingMethods","available_shipping_methods","DaffInMemoryBackendCartPaymentService","getPayment","updatePayment","removePayment","DaffInMemoryBackendCartShippingInformationService","getShippingInformation","updateShippingInformation","removeShippingInformation","shipping_information","shippingInformation","DaffInMemoryBackendCartRootService","cartService","cartItemsService","cartOrderService","cartCouponService","cartAddressService","cartShippingAddressService","cartBillingAddressService","cartPaymentMethodsService","cartShippingMethodsService","cartPaymentService","cartShippingInformationService","carts","createDb","seedData","delegateRequest","collectionName","method","COLLECTION_NAMES"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { DaffCart } from '@daffodil/cart';\nimport { DaffCartServiceInterface, DaffCartNotFoundError } from '@daffodil/cart/driver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryCartService implements DaffCartServiceInterface<DaffCart> {\n  url = '/api/cart';\n\n  constructor(private http: HttpClient) {}\n\n  get(cartId: DaffCart['id']): Observable<DaffCart> {\n    return this.http.get<DaffCart>(`${this.url}/${cartId}`).pipe(\n\t\t\tcatchError((error: Error) => throwError(DaffCartNotFoundError)),\n\t\t\tmap(result => result)\n\t\t);\n  }\n\n  addToCart(productId: string, qty: number): Observable<DaffCart> {\n    return this.http.post<DaffCart>(this.url + '/addToCart', { productId, qty });\n  }\n\n  clear(cartId: DaffCart['id']): Observable<Partial<DaffCart>> {\n    return this.http.post<Partial<DaffCart>>(`${this.url}/${cartId}/clear`, {});\n  }\n\n  create(): Observable<{id: DaffCart['id']}> {\n    return this.http.post<{id: DaffCart['id']}>(this.url, {});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { DaffCartItem, DaffCartItemInput, DaffCart } from '@daffodil/cart';\nimport {\n  DaffCartItemServiceInterface,\n} from '@daffodil/cart/driver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryCartItemService implements DaffCartItemServiceInterface<\n  DaffCartItem,\n  DaffCartItemInput,\n  DaffCart\n> {\n  url = '/api/cart-items';\n\n  constructor(private http: HttpClient) {}\n\n  list(cartId: DaffCart['id']): Observable<DaffCartItem[]> {\n    return this.http.get<DaffCartItem[]>(`${this.url}/${cartId}/`)\n  }\n\n  get(cartId: DaffCart['id'], itemId: DaffCartItem['item_id']): Observable<DaffCartItem> {\n    return this.http.get<DaffCartItem>(`${this.url}/${cartId}/${itemId}`);\n  }\n\n  add(cartId: DaffCart['id'], input: DaffCartItemInput): Observable<Partial<DaffCart>> {\n    return this.http.post<Partial<DaffCart>>(`${this.url}/${cartId}/`, input);\n  }\n\n  update(\n    cartId: DaffCart['id'],\n    itemId: DaffCartItem['item_id'],\n    item: Partial<DaffCartItem>\n  ): Observable<Partial<DaffCart>> {\n    return this.http.put<Partial<DaffCart>>(`${this.url}/${cartId}/${itemId}`, item);\n  }\n\n  delete(cartId: string, itemId: string): Observable<Partial<DaffCart>> {\n    return this.http.delete<Partial<DaffCart>>(`${this.url}/${cartId}/${itemId}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { DaffCartAddress, DaffCart } from '@daffodil/cart';\nimport {\n  DaffCartBillingAddressServiceInterface,\n} from '@daffodil/cart/driver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryCartBillingAddressService implements DaffCartBillingAddressServiceInterface<DaffCartAddress, DaffCart> {\n  url = '/api/cart-billing-address';\n\n  constructor(private http: HttpClient) {}\n\n  get(cartId: DaffCart['id']): Observable<DaffCartAddress> {\n    return this.http.get<DaffCartAddress>(`${this.url}/${cartId}`);\n  }\n\n  update(cartId: DaffCart['id'], address: DaffCartAddress): Observable<Partial<DaffCart>> {\n    return this.http.put<Partial<DaffCart>>(`${this.url}/${cartId}`, address);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { DaffCart, DaffCartPaymentMethod, DaffCartAddress } from '@daffodil/cart';\nimport {\n  DaffCartPaymentServiceInterface,\n} from '@daffodil/cart/driver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryCartPaymentService implements DaffCartPaymentServiceInterface {\n  url = '/api/cart-payment';\n\n  constructor(private http: HttpClient) {}\n\n  get(cartId: DaffCart['id']): Observable<DaffCartPaymentMethod> {\n    return this.http.get<DaffCartPaymentMethod>(`${this.url}/${cartId}`);\n  }\n\n  update(cartId: DaffCart['id'], payment: Partial<DaffCartPaymentMethod>): Observable<Partial<DaffCart>> {\n    return this.http.put<DaffCart>(`${this.url}/${cartId}`, {payment});\n  }\n\n  updateWithBilling(cartId: DaffCart['id'], payment: Partial<DaffCartPaymentMethod>, address: Partial<DaffCartAddress>): Observable<Partial<DaffCart>> {\n    return this.http.put<DaffCart>(`${this.url}/${cartId}`, {payment, address});\n  }\n\n  remove(cartId: DaffCart['id']): Observable<void> {\n    return this.http.delete<void>(`${this.url}/${cartId}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { DaffCartPaymentMethod, DaffCart } from '@daffodil/cart';\nimport {\n  DaffCartPaymentMethodsServiceInterface,\n} from '@daffodil/cart/driver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryCartPaymentMethodsService implements DaffCartPaymentMethodsServiceInterface<DaffCartPaymentMethod> {\n  url = '/api/cart-payment-methods';\n\n  constructor(private http: HttpClient) {}\n\n  list(cartId: DaffCart['id']): Observable<DaffCartPaymentMethod[]> {\n    return this.http.get<DaffCartPaymentMethod[]>(`${this.url}/${cartId}`)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { DaffCartAddress, DaffCart } from '@daffodil/cart';\nimport {\n  DaffCartShippingAddressServiceInterface,\n} from '@daffodil/cart/driver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryCartShippingAddressService implements DaffCartShippingAddressServiceInterface<DaffCartAddress, DaffCart> {\n  url = '/api/cart-shipping-address';\n\n  constructor(private http: HttpClient) {}\n\n  get(cartId: DaffCart['id']): Observable<DaffCartAddress> {\n    return this.http.get<DaffCartAddress>(`${this.url}/${cartId}`);\n  }\n\n  update(cartId: DaffCart['id'], address: Partial<DaffCartAddress>): Observable<Partial<DaffCart>> {\n    return this.http.put<Partial<DaffCart>>(`${this.url}/${cartId}`, address);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { DaffCartShippingRate, DaffCart } from '@daffodil/cart';\nimport {\n  DaffCartShippingInformationServiceInterface,\n} from '@daffodil/cart/driver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryCartShippingInformationService implements DaffCartShippingInformationServiceInterface<DaffCartShippingRate, DaffCart> {\n  url = '/api/cart-shipping-information';\n\n  constructor(private http: HttpClient) {}\n\n  get(cartId: DaffCart['id']): Observable<DaffCartShippingRate> {\n    return this.http.get<DaffCartShippingRate>(`${this.url}/${cartId}`);\n  }\n\n  update(cartId: DaffCart['id'], info: Partial<DaffCartShippingRate>): Observable<Partial<DaffCart>> {\n    return this.http.put<DaffCart>(`${this.url}/${cartId}`, info);\n  }\n\n  delete(cartId: DaffCart['id']): Observable<Partial<DaffCart>> {\n    return this.http.delete<Partial<DaffCart>>(`${this.url}/${cartId}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { DaffCartShippingRate, DaffCart } from '@daffodil/cart';\nimport {\n  DaffCartShippingMethodsServiceInterface,\n} from '@daffodil/cart/driver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryCartShippingMethodsService implements DaffCartShippingMethodsServiceInterface<DaffCartShippingRate> {\n  url = '/api/cart-shipping-methods';\n\n  constructor(private http: HttpClient) {}\n\n  list(cartId: DaffCart['id']): Observable<DaffCartShippingRate[]> {\n    return this.http.get<DaffCartShippingRate[]>(`${this.url}/${cartId}`)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { DaffCart, DaffCartPaymentMethod, DaffCartOrderResult } from '@daffodil/cart';\nimport {\n  DaffCartOrderServiceInterface,\n} from '@daffodil/cart/driver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryCartOrderService implements DaffCartOrderServiceInterface {\n  url = '/api/cart-order';\n\n  constructor(private http: HttpClient) {}\n\n  placeOrder(cartId: DaffCart['id'], payment?: DaffCartPaymentMethod): Observable<DaffCartOrderResult> {\n    return this.http.post<DaffCartOrderResult>(`${this.url}/${cartId}/`, {payment});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { DaffCart, DaffCartCoupon } from '@daffodil/cart';\nimport {\n  DaffCartCouponServiceInterface,\n} from '@daffodil/cart/driver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryCartCouponService implements DaffCartCouponServiceInterface {\n  url = '/api/cart-coupon';\n\n  constructor(private http: HttpClient) {}\n\n  list(cartId: DaffCart['id']): Observable<DaffCartCoupon[]> {\n    return this.http.get<DaffCartCoupon[]>(`${this.url}/${cartId}/`)\n  }\n\n  apply(cartId: DaffCart['id'], coupon: DaffCartCoupon): Observable<Partial<DaffCart>> {\n    return this.http.post<Partial<DaffCart>>(`${this.url}/${cartId}/`, coupon);\n  }\n\n  remove(cartId: DaffCart['id'], coupon: DaffCartCoupon): Observable<Partial<DaffCart>> {\n    return this.http.delete<Partial<DaffCart>>(`${this.url}/${cartId}/${coupon.code}`);\n  }\n\n  removeAll(cartId: DaffCart['id']): Observable<Partial<DaffCart>> {\n    return this.http.delete<Partial<DaffCart>>(`${this.url}/${cartId}/`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { DaffCart, DaffCartAddress } from '@daffodil/cart';\nimport {\n  DaffCartAddressServiceInterface,\n} from '@daffodil/cart/driver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryCartAddressService implements DaffCartAddressServiceInterface<DaffCartAddress, DaffCart> {\n  url = '/api/cart-address';\n\n  constructor(private http: HttpClient) {}\n\n  update(cartId: DaffCart['id'], address: DaffCartAddress): Observable<Partial<DaffCart>> {\n    return this.http.put<Partial<DaffCart>>(`${this.url}/${cartId}`, address);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n  DaffCartDriver,\n  DaffCartBillingAddressDriver,\n  DaffCartItemDriver,\n  DaffCartPaymentDriver,\n  DaffCartPaymentMethodsDriver,\n  DaffCartShippingAddressDriver,\n  DaffCartShippingInformationDriver,\n  DaffCartShippingMethodsDriver,\n  DaffCartOrderDriver,\n  DaffCartCouponDriver,\n  DaffCartAddressDriver\n} from '@daffodil/cart/driver';\n\nimport { DaffInMemoryCartService } from './cart/cart.service';\nimport { DaffInMemoryCartBillingAddressService } from './cart-billing-address/cart-billing-address.service';\nimport { DaffInMemoryCartItemService } from './cart-item/cart-item.service';\nimport { DaffInMemoryCartPaymentService } from './cart-payment/cart-payment.service';\nimport { DaffInMemoryCartPaymentMethodsService } from './cart-payment-methods/cart-payment-methods.service';\nimport { DaffInMemoryCartShippingAddressService } from './cart-shipping-address/cart-shipping-address.service';\nimport { DaffInMemoryCartShippingInformationService } from './cart-shipping-information/cart-shipping-information.service';\nimport { DaffInMemoryCartShippingMethodsService } from './cart-shipping-methods/cart-shipping-methods.service';\nimport { DaffInMemoryCartOrderService } from './cart-order/cart-order.service';\nimport { DaffInMemoryCartCouponService } from './cart-coupon/cart-coupon.service';\nimport { DaffInMemoryCartAddressService } from './cart-address/cart-address.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ]\n})\nexport class DaffCartInMemoryDriverModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DaffCartInMemoryDriverModule,\n      providers: [\n        {\n          provide: DaffCartDriver,\n          useExisting: DaffInMemoryCartService\n        },\n        {\n          provide: DaffCartAddressDriver,\n          useExisting: DaffInMemoryCartAddressService\n        },\n        {\n          provide: DaffCartBillingAddressDriver,\n          useExisting: DaffInMemoryCartBillingAddressService\n        },\n        {\n          provide: DaffCartItemDriver,\n          useExisting: DaffInMemoryCartItemService\n        },\n        {\n          provide: DaffCartPaymentDriver,\n          useExisting: DaffInMemoryCartPaymentService\n        },\n        {\n          provide: DaffCartPaymentMethodsDriver,\n          useExisting: DaffInMemoryCartPaymentMethodsService\n        },\n        {\n          provide: DaffCartShippingAddressDriver,\n          useExisting: DaffInMemoryCartShippingAddressService\n        },\n        {\n          provide: DaffCartShippingInformationDriver,\n          useExisting: DaffInMemoryCartShippingInformationService\n        },\n        {\n          provide: DaffCartShippingMethodsDriver,\n          useExisting: DaffInMemoryCartShippingMethodsService\n        },\n        {\n          provide: DaffCartOrderDriver,\n          useExisting: DaffInMemoryCartOrderService\n        },\n        {\n          provide: DaffCartCouponDriver,\n          useExisting: DaffInMemoryCartCouponService\n        }\n      ]\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { STATUS, RequestInfo } from 'angular-in-memory-web-api';\n\nimport { DaffCart } from '@daffodil/cart';\nimport { DaffInMemoryDataServiceInterface } from '@daffodil/core/testing';\n\nimport { DaffCartFactory } from '@daffodil/cart/testing';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryBackendCartService implements DaffInMemoryDataServiceInterface {\n  constructor(\n    private cartFactory: DaffCartFactory,\n  ) {}\n\n  get(reqInfo: RequestInfo) {\n\t\tconst cart = this.getCart(reqInfo)\n\t\treturn reqInfo.utils.createResponse$(() => ({\n\t\t\tbody: cart,\n\t\t\tstatus: cart ? STATUS.OK : STATUS.NOT_FOUND\n\t\t}));\n  }\n\n  post(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => {\n      let body;\n\t\t\tconst action = this.getAction(reqInfo);\n\n      if (reqInfo.id === 'addToCart') {\n        // deprecated\n        body = {};\n      } else if (action === 'clear') {\n        body = this.clear(reqInfo);\n      } else {\n        body = this.create(reqInfo);\n      }\n\n      return {\n        body,\n        status: STATUS.OK\n      };\n    });\n  }\n\n  /**\n   * Gets whatever follows the cart ID section of the request URL.\n   */\n  private getAction(reqInfo: RequestInfo): string {\n    return reqInfo.url.replace(`/${reqInfo.resourceUrl}${reqInfo.id}/`, '')\n  }\n\n  private clear(reqInfo: RequestInfo): DaffCart {\n    const cart = this.getCart(reqInfo);\n\n    cart.items = [];\n\n    return cart\n  }\n\n  private create(reqInfo: RequestInfo): Partial<{id: DaffCart['id']}> {\n    const cart = this.cartFactory.create();\n\n    reqInfo.collection.push(cart);\n\n    return {\n      id: cart.id\n    };\n  }\n\n  private getCart(reqInfo: RequestInfo): DaffCart {\n\t\treturn reqInfo.utils.findById<DaffCart>(reqInfo.collection, reqInfo.id);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { STATUS, RequestInfo } from 'angular-in-memory-web-api';\n\nimport {\n  DaffCart,\n  DaffCartItem,\n  DaffCartItemInput\n} from '@daffodil/cart';\nimport { DaffInMemoryDataServiceInterface } from '@daffodil/core/testing';\n\nimport { DaffCartItemFactory } from '@daffodil/cart/testing';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryBackendCartItemsService implements DaffInMemoryDataServiceInterface {\n  constructor(private cartItemFactory: DaffCartItemFactory) {}\n\n  get(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => {\n      let body;\n      const action = this.getAction(reqInfo);\n\n      if (action) {\n        body = this.getItem(reqInfo, action);\n      } else {\n        body = this.listItems(reqInfo);\n      }\n\n      return {\n        body,\n        status: STATUS.OK\n      };\n    });\n  }\n\n  put(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.updateItem(reqInfo, this.getAction(reqInfo)),\n      status: STATUS.OK\n    }));\n  }\n\n  post(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.addItem(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  delete(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.deleteItem(reqInfo, this.getAction(reqInfo)),\n      status: STATUS.OK\n    }));\n  }\n\n  /**\n   * Gets whatever follows the cart ID section of the request URL.\n   */\n  private getAction(reqInfo: RequestInfo): string {\n    return reqInfo.url.replace(`/${reqInfo.resourceUrl}${reqInfo.id}/`, '')\n  }\n\n  private getCart(reqInfo: RequestInfo): DaffCart {\n    return reqInfo.utils.findById<DaffCart>(reqInfo.collection, Number(reqInfo.id))\n  }\n\n  private transformItemInput(itemInput: DaffCartItemInput) {\n    return {\n      ...this.cartItemFactory.create(),\n      ...itemInput,\n      product_id: itemInput.productId\n    }\n  }\n\n  private listItems(reqInfo): DaffCartItem[] {\n    return this.getCart(reqInfo).items;\n  }\n\n  private getItem(reqInfo: RequestInfo, itemId: DaffCartItem['item_id']): DaffCartItem {\n    const cart = this.getCart(reqInfo);\n\n    return cart.items.find(({item_id}) => String(item_id) === String(itemId))\n  }\n\n  private updateItem(reqInfo: RequestInfo, itemId: DaffCartItem['item_id']): DaffCart {\n    const cart = this.getCart(reqInfo);\n    const item = reqInfo.utils.getJsonBody(reqInfo.req);\n    const itemIndex = cart.items.findIndex(({item_id}) => String(itemId) === String(item_id))\n\n    cart.items[itemIndex] = {\n      ...cart.items[itemIndex],\n      ...item\n    };\n\t\tcart.items = Object.assign([], cart.items);\n\n    return cart\n  }\n\n  private addItem(reqInfo: RequestInfo): DaffCart {\n    const cart = this.getCart(reqInfo);\n\t\tconst itemInput = reqInfo.utils.getJsonBody(reqInfo.req);\n\t\tconst existingCartItemIndex = cart.items.findIndex(item => item.product_id === itemInput.productId);\n\t\tif(existingCartItemIndex > -1) {\n\t\t\tcart.items[existingCartItemIndex].qty = cart.items[existingCartItemIndex].qty + itemInput.qty;\n\t\t} else {\n\t\t\tcart.items.push(this.transformItemInput(itemInput));\n\t\t}\n\t\tcart.items = Object.assign([], cart.items);\n\n    return cart;\n  }\n\n  private deleteItem(reqInfo: RequestInfo, itemId: DaffCartItem['item_id']): DaffCart {\n    const cart = this.getCart(reqInfo);\n    const itemIndex = cart.items.findIndex(({item_id}) => String(itemId) === String(item_id));\n\n\t\tcart.items.splice(itemIndex, 1);\n\t\tcart.items = Object.assign([], cart.items);\n\n    return cart;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { STATUS, RequestInfo } from 'angular-in-memory-web-api';\n\nimport {\n  DaffCartOrderResult\n} from '@daffodil/cart';\nimport { DaffInMemoryDataServiceInterface } from '@daffodil/core/testing';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryBackendCartOrderService implements DaffInMemoryDataServiceInterface {\n  post(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.placeOrder(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  private placeOrder(reqInfo): DaffCartOrderResult {\n    return {\n      id: '8235422034',\n      cartId: '89fdsa8sadf',\n      orderId: '8235422034',\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { STATUS, RequestInfo } from 'angular-in-memory-web-api';\n\nimport {\n  DaffCart,\n  DaffCartCoupon,\n} from '@daffodil/cart';\nimport { DaffInMemoryDataServiceInterface } from '@daffodil/core/testing';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryBackendCartCouponService implements DaffInMemoryDataServiceInterface {\n  get(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.listCoupons(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  post(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.applyCoupon(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  delete(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => {\n      let body;\n      const action = this.getAction(reqInfo);\n\n      if (action) {\n        body = this.removeCoupon(reqInfo, action);\n      } else {\n        body = this.removeAllCoupons(reqInfo);\n      }\n\n      return {\n        body,\n        status: STATUS.OK\n      };\n    });\n  }\n\n  /**\n   * Gets whatever follows the cart ID section of the request URL.\n   */\n  private getAction(reqInfo: RequestInfo): string {\n    return reqInfo.url.replace(`/${reqInfo.resourceUrl}${reqInfo.id}/`, '')\n  }\n\n  private getCart(reqInfo: RequestInfo): DaffCart {\n    return reqInfo.utils.findById<DaffCart>(reqInfo.collection, Number(reqInfo.id))\n  }\n\n  private listCoupons(reqInfo): DaffCartCoupon[] {\n    return this.getCart(reqInfo).coupons;\n  }\n\n  private applyCoupon(reqInfo: RequestInfo): DaffCart {\n    const cart = this.getCart(reqInfo);\n    const coupon = reqInfo.utils.getJsonBody(reqInfo.req);\n\n\t\tcart.coupons.push(coupon);\n\n    return cart;\n  }\n\n  private removeCoupon(reqInfo: RequestInfo, couponCode: DaffCartCoupon['code']): DaffCart {\n    const cart = this.getCart(reqInfo);\n\n    cart.coupons = cart.coupons.filter(({code}) => code !== couponCode)\n\n    return cart\n  }\n\n  private removeAllCoupons(reqInfo: RequestInfo): DaffCart {\n    const cart = this.getCart(reqInfo);\n\n\t\tcart.coupons = [];\n\n    return cart;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { STATUS, RequestInfo } from 'angular-in-memory-web-api';\n\nimport {\n  DaffCart,\n} from '@daffodil/cart';\nimport { DaffInMemoryDataServiceInterface } from '@daffodil/core/testing';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryBackendCartAddressService implements DaffInMemoryDataServiceInterface {\n  put(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.updateAddress(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  private getCart(reqInfo: RequestInfo): DaffCart {\n    return reqInfo.utils.findById<DaffCart>(reqInfo.collection, Number(reqInfo.id))\n  }\n\n  private updateAddress(reqInfo: RequestInfo): DaffCart {\n    const cart = this.getCart(reqInfo);\n    const address = reqInfo.utils.getJsonBody(reqInfo.req);\n\n    cart.billing_address = address;\n    cart.shipping_address = address;\n\n    return cart;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { STATUS, RequestInfo } from 'angular-in-memory-web-api';\n\nimport {\n  DaffCart,\n  DaffCartAddress,\n} from '@daffodil/cart';\nimport { DaffInMemoryDataServiceInterface } from '@daffodil/core/testing';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryBackendCartShippingAddressService implements DaffInMemoryDataServiceInterface {\n  get(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.getShippingAddress(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  put(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.updateShippingAddress(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  private getCart(reqInfo: RequestInfo): DaffCart {\n    return reqInfo.utils.findById<DaffCart>(reqInfo.collection, Number(reqInfo.id))\n  }\n\n  private getShippingAddress(reqInfo): DaffCartAddress {\n    return this.getCart(reqInfo).shipping_address;\n  }\n\n  private updateShippingAddress(reqInfo: RequestInfo): DaffCart {\n    const cart = this.getCart(reqInfo);\n    const address = reqInfo.utils.getJsonBody(reqInfo.req);\n\n\t\tcart.shipping_address = address;\n\n    return cart;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { STATUS, RequestInfo } from 'angular-in-memory-web-api';\n\nimport {\n  DaffCart,\n  DaffCartAddress,\n} from '@daffodil/cart';\nimport { DaffInMemoryDataServiceInterface } from '@daffodil/core/testing';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryBackendCartBillingAddressService implements DaffInMemoryDataServiceInterface {\n  get(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.getBillingAddress(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  put(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.updateBillingAddress(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  private getCart(reqInfo: RequestInfo): DaffCart {\n    return reqInfo.utils.findById<DaffCart>(reqInfo.collection, Number(reqInfo.id))\n  }\n\n  private getBillingAddress(reqInfo): DaffCartAddress {\n    return this.getCart(reqInfo).billing_address;\n  }\n\n  private updateBillingAddress(reqInfo: RequestInfo): DaffCart {\n    const cart = this.getCart(reqInfo);\n    const address = reqInfo.utils.getJsonBody(reqInfo.req);\n\n\t\tcart.billing_address = address;\n\n    return cart;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { STATUS, RequestInfo } from 'angular-in-memory-web-api';\n\nimport {\n  DaffCart,\n  DaffCartPaymentMethod,\n} from '@daffodil/cart';\nimport { DaffInMemoryDataServiceInterface } from '@daffodil/core/testing';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryBackendCartPaymentMethodsService implements DaffInMemoryDataServiceInterface {\n  get(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.listPaymentMethods(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  private getCart(reqInfo: RequestInfo): DaffCart {\n    return reqInfo.utils.findById<DaffCart>(reqInfo.collection, Number(reqInfo.id))\n  }\n\n  private listPaymentMethods(reqInfo): DaffCartPaymentMethod[] {\n    return this.getCart(reqInfo).available_payment_methods;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { STATUS, RequestInfo } from 'angular-in-memory-web-api';\n\nimport {\n  DaffCart,\n  DaffCartShippingRate,\n} from '@daffodil/cart';\nimport { DaffInMemoryDataServiceInterface } from '@daffodil/core/testing';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryBackendCartShippingMethodsService implements DaffInMemoryDataServiceInterface {\n  get(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.listShippingMethods(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  private getCart(reqInfo: RequestInfo): DaffCart {\n    return reqInfo.utils.findById<DaffCart>(reqInfo.collection, Number(reqInfo.id))\n  }\n\n  private listShippingMethods(reqInfo): DaffCartShippingRate[] {\n    return this.getCart(reqInfo).available_shipping_methods;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { STATUS, RequestInfo } from 'angular-in-memory-web-api';\n\nimport {\n  DaffCart,\n  DaffCartPaymentMethod,\n} from '@daffodil/cart';\nimport { DaffInMemoryDataServiceInterface } from '@daffodil/core/testing';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryBackendCartPaymentService implements DaffInMemoryDataServiceInterface {\n  get(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.getPayment(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  put(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.updatePayment(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  delete(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.removePayment(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  private getCart(reqInfo: RequestInfo): DaffCart {\n    return reqInfo.utils.findById<DaffCart>(reqInfo.collection, Number(reqInfo.id))\n  }\n\n  private getPayment(reqInfo): DaffCartPaymentMethod {\n    return this.getCart(reqInfo).payment;\n  }\n\n  private updatePayment(reqInfo: RequestInfo): DaffCart {\n    const cart = this.getCart(reqInfo);\n    const {payment, address} = reqInfo.utils.getJsonBody(reqInfo.req);\n\n    cart.payment = payment;\n\n    if (address) cart.billing_address = address;\n\n    return cart;\n  }\n\n  private removePayment(reqInfo: RequestInfo): DaffCart {\n    const cart = this.getCart(reqInfo);\n\n    cart.payment = null\n\n    return cart\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { STATUS, RequestInfo } from 'angular-in-memory-web-api';\n\nimport {\n  DaffCart,\n  DaffCartShippingInformation,\n} from '@daffodil/cart';\nimport { DaffInMemoryDataServiceInterface } from '@daffodil/core/testing';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryBackendCartShippingInformationService implements DaffInMemoryDataServiceInterface {\n  get(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.getShippingInformation(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  put(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.updateShippingInformation(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  delete(reqInfo: RequestInfo) {\n    return reqInfo.utils.createResponse$(() => ({\n      body: this.removeShippingInformation(reqInfo),\n      status: STATUS.OK\n    }));\n  }\n\n  private getCart(reqInfo: RequestInfo): DaffCart {\n    return reqInfo.utils.findById<DaffCart>(reqInfo.collection, Number(reqInfo.id))\n  }\n\n  private getShippingInformation(reqInfo): DaffCartShippingInformation {\n    return this.getCart(reqInfo).shipping_information;\n  }\n\n  private updateShippingInformation(reqInfo: RequestInfo): DaffCart {\n    const cart = this.getCart(reqInfo);\n    const shippingInformation = reqInfo.utils.getJsonBody(reqInfo.req);\n\n\t\tcart.shipping_information = shippingInformation;\n\n    return cart;\n  }\n\n  private removeShippingInformation(reqInfo: RequestInfo): DaffCart {\n    const cart = this.getCart(reqInfo);\n\n    cart.shipping_information = null\n\n    return cart\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { InMemoryDbService, RequestInfo, STATUS } from 'angular-in-memory-web-api';\n\nimport { DaffCart } from '@daffodil/cart';\nimport { DaffInMemoryDataServiceInterface } from '@daffodil/core/testing';\n\nimport { DaffInMemoryBackendCartService } from './cart/cart.service';\nimport { DaffInMemoryBackendCartItemsService } from './cart-items/cart-items.service';\nimport { DaffInMemoryBackendCartOrderService } from './cart-order/cart-order.service';\nimport { DaffInMemoryBackendCartCouponService } from './cart-coupon/cart-coupon.service';\nimport { DaffInMemoryBackendCartAddressService } from './cart-address/cart-address.service';\nimport { DaffInMemoryBackendCartShippingAddressService } from './cart-shipping-address/cart-shipping-address.service';\nimport { DaffInMemoryBackendCartBillingAddressService } from './cart-billing-address/cart-billing-address.service';\nimport { DaffInMemoryBackendCartPaymentMethodsService } from './cart-payment-methods/cart-payment-methods.service';\nimport { DaffInMemoryBackendCartShippingMethodsService } from './cart-shipping-methods/cart-shipping-methods.service';\nimport { DaffInMemoryBackendCartPaymentService } from './cart-payment/cart-payment.service';\nimport { DaffInMemoryBackendCartShippingInformationService } from './cart-shipping-information/cart-shipping-information.service';\n\n/**\n * The root cart in-memory backend.\n * Creates the database and delegates requests to child backends.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffInMemoryBackendCartRootService implements InMemoryDbService, DaffInMemoryDataServiceInterface {\n  /**\n   * The collections that the root service manages.\n   * Useful for a higher-level backend that delegates to this one based on collection name.\n   */\n  public static readonly COLLECTION_NAMES = [\n    'cart',\n    'cart-items',\n    'cart-order',\n    'cart-coupon',\n    'cart-address',\n    'cart-shipping-address',\n    'cart-billing-address',\n    'cart-payment-methods',\n    'cart-shipping-methods',\n    'cart-payment',\n    'cart-shipping-information',\n  ]\n\n  public carts: DaffCart[] = [];\n\n  constructor(\n    private cartService: DaffInMemoryBackendCartService,\n    private cartItemsService: DaffInMemoryBackendCartItemsService,\n    private cartOrderService: DaffInMemoryBackendCartOrderService,\n    private cartCouponService: DaffInMemoryBackendCartCouponService,\n    private cartAddressService: DaffInMemoryBackendCartAddressService,\n    private cartShippingAddressService: DaffInMemoryBackendCartShippingAddressService,\n    private cartBillingAddressService: DaffInMemoryBackendCartBillingAddressService,\n    private cartPaymentMethodsService: DaffInMemoryBackendCartPaymentMethodsService,\n    private cartShippingMethodsService: DaffInMemoryBackendCartShippingMethodsService,\n    private cartPaymentService: DaffInMemoryBackendCartPaymentService,\n    private cartShippingInformationService: DaffInMemoryBackendCartShippingInformationService,\n  ) {}\n\n  createDb(reqInfo: RequestInfo) {\n    if (reqInfo) {\n      const seedData = reqInfo.utils.getJsonBody(reqInfo.req).carts;\n      if (seedData) {\n        this.carts = seedData;\n      }\n    }\n\n    return {\n      cart: this.carts\n    };\n  }\n\n  get(reqInfo: RequestInfo) {\n    return this.delegateRequest(reqInfo)\n  }\n\n  post(reqInfo: RequestInfo) {\n    return this.delegateRequest(reqInfo)\n  }\n\n  put(reqInfo: RequestInfo) {\n    return this.delegateRequest(reqInfo)\n  }\n\n  delete(reqInfo: RequestInfo) {\n    return this.delegateRequest(reqInfo)\n  }\n\n  private delegateRequest(reqInfo: RequestInfo) {\n    reqInfo.collection = this.carts;\n\n    switch (reqInfo.collectionName) {\n      case 'cart':\n        return this.cartService[reqInfo.method](reqInfo);\n\n      case 'cart-items':\n        return this.cartItemsService[reqInfo.method](reqInfo);\n\n      case 'cart-order':\n        return this.cartOrderService[reqInfo.method](reqInfo);\n\n      case 'cart-coupon':\n        return this.cartCouponService[reqInfo.method](reqInfo);\n\n      case 'cart-address':\n        return this.cartAddressService[reqInfo.method](reqInfo);\n\n      case 'cart-shipping-address':\n        return this.cartShippingAddressService[reqInfo.method](reqInfo);\n\n      case 'cart-billing-address':\n        return this.cartBillingAddressService[reqInfo.method](reqInfo);\n\n      case 'cart-payment-methods':\n        return this.cartPaymentMethodsService[reqInfo.method](reqInfo);\n\n      case 'cart-shipping-methods':\n        return this.cartShippingMethodsService[reqInfo.method](reqInfo);\n\n      case 'cart-payment':\n        return this.cartPaymentService[reqInfo.method](reqInfo);\n\n      case 'cart-shipping-information':\n        return this.cartShippingInformationService[reqInfo.method](reqInfo);\n\n      default:\n        return reqInfo.utils.createResponse$(() => ({\n          body: {},\n          status: STATUS.OK\n        }));\n    }\n  }\n}\n"]}