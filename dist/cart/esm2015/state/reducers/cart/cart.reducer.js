/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { DaffLoadingState } from '@daffodil/core/state';
import { DaffCartActionTypes, } from '../../actions/public_api';
import { initialState } from '../cart-initial-state';
import { DaffCartOperationType } from '../cart-operation-type.enum';
import { initializeErrorAdder, initializeErrorResetter } from '../errors/error-state-helpers';
import { initializeLoadingSetter } from '../loading/cart-loading.type';
/** @type {?} */
const addError = initializeErrorAdder(DaffCartOperationType.Cart);
/** @type {?} */
const resetErrors = initializeErrorResetter(DaffCartOperationType.Cart);
/** @type {?} */
const setLoading = initializeLoadingSetter(DaffCartOperationType.Cart);
/**
 * @template T
 * @param {?=} state
 * @param {?=} action
 * @return {?}
 */
export function cartReducer(state = initialState, action) {
    switch (action.type) {
        case DaffCartActionTypes.ResolveCartAction:
        case DaffCartActionTypes.CartLoadAction:
            return Object.assign({}, state, setLoading(state.loading, DaffLoadingState.Resolving));
        case DaffCartActionTypes.CartClearAction:
        case DaffCartActionTypes.AddToCartAction:
        case DaffCartActionTypes.CartCreateAction:
            return Object.assign({}, state, setLoading(state.loading, DaffLoadingState.Mutating));
        case DaffCartActionTypes.CartLoadSuccessAction:
        case DaffCartActionTypes.CartClearSuccessAction:
        case DaffCartActionTypes.AddToCartSuccessAction:
        case DaffCartActionTypes.CartCreateSuccessAction:
        case DaffCartActionTypes.ResolveCartSuccessAction:
            return Object.assign({}, state, resetErrors(state.errors), { cart: Object.assign({}, state.cart, action.payload) }, setLoading(state.loading, DaffLoadingState.Complete));
        case DaffCartActionTypes.CartCreateSuccessAction:
            return Object.assign({}, state, resetErrors(state.errors), { cart: Object.assign({}, initialState.cart, action.payload) }, setLoading(state.loading, DaffLoadingState.Complete));
        case DaffCartActionTypes.CartLoadFailureAction:
        case DaffCartActionTypes.CartClearFailureAction:
        case DaffCartActionTypes.AddToCartFailureAction:
        case DaffCartActionTypes.CartCreateFailureAction:
        case DaffCartActionTypes.CartStorageFailureAction:
        case DaffCartActionTypes.ResolveCartFailureAction:
            return Object.assign({}, state, addError(state.errors, action.payload), setLoading(state.loading, DaffLoadingState.Complete));
        default:
            return state;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FydC5yZWR1Y2VyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGRhZmZvZGlsL2NhcnQvc3RhdGUvIiwic291cmNlcyI6WyJyZWR1Y2Vycy9jYXJ0L2NhcnQucmVkdWNlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFHeEQsT0FBTyxFQUNMLG1CQUFtQixHQUNwQixNQUFNLDBCQUEwQixDQUFDO0FBQ2xDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUdyRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUNwRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUM5RixPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQzs7TUFFakUsUUFBUSxHQUFHLG9CQUFvQixDQUFDLHFCQUFxQixDQUFDLElBQUksQ0FBQzs7TUFDM0QsV0FBVyxHQUFHLHVCQUF1QixDQUFDLHFCQUFxQixDQUFDLElBQUksQ0FBQzs7TUFDakUsVUFBVSxHQUFHLHVCQUF1QixDQUFDLHFCQUFxQixDQUFDLElBQUksQ0FBQzs7Ozs7OztBQUV0RSxNQUFNLFVBQVUsV0FBVyxDQUN6QixLQUFLLEdBQUcsWUFBWSxFQUNwQixNQUFtQjtJQUVuQixRQUFRLE1BQU0sQ0FBQyxJQUFJLEVBQUU7UUFDbkIsS0FBSyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQztRQUMzQyxLQUFLLG1CQUFtQixDQUFDLGNBQWM7WUFDckMseUJBQ0ssS0FBSyxFQUNMLFVBQVUsQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFLGdCQUFnQixDQUFDLFNBQVMsQ0FBQyxFQUN4RDtRQUVKLEtBQUssbUJBQW1CLENBQUMsZUFBZSxDQUFDO1FBQ3pDLEtBQUssbUJBQW1CLENBQUMsZUFBZSxDQUFDO1FBQ3pDLEtBQUssbUJBQW1CLENBQUMsZ0JBQWdCO1lBQ3ZDLHlCQUNLLEtBQUssRUFDTCxVQUFVLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRSxnQkFBZ0IsQ0FBQyxRQUFRLENBQUMsRUFDdkQ7UUFFSixLQUFLLG1CQUFtQixDQUFDLHFCQUFxQixDQUFDO1FBQy9DLEtBQUssbUJBQW1CLENBQUMsc0JBQXNCLENBQUM7UUFDaEQsS0FBSyxtQkFBbUIsQ0FBQyxzQkFBc0IsQ0FBQztRQUNoRCxLQUFLLG1CQUFtQixDQUFDLHVCQUF1QixDQUFDO1FBQ2pELEtBQUssbUJBQW1CLENBQUMsd0JBQXdCO1lBQy9DLHlCQUNLLEtBQUssRUFDTCxXQUFXLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUM1QixJQUFJLG9CQUNDLEtBQUssQ0FBQyxJQUFJLEVBQ1YsTUFBTSxDQUFDLE9BQU8sS0FFaEIsVUFBVSxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsZ0JBQWdCLENBQUMsUUFBUSxDQUFDLEVBQ3ZEO1FBRU4sS0FBSyxtQkFBbUIsQ0FBQyx1QkFBdUI7WUFDL0MseUJBQ1EsS0FBSyxFQUNMLFdBQVcsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLElBQzVCLElBQUksb0JBQ0MsWUFBWSxDQUFDLElBQUksRUFDakIsTUFBTSxDQUFDLE9BQU8sS0FFaEIsVUFBVSxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsZ0JBQWdCLENBQUMsUUFBUSxDQUFDLEVBQ3ZEO1FBQ04sS0FBSyxtQkFBbUIsQ0FBQyxxQkFBcUIsQ0FBQztRQUM3QyxLQUFLLG1CQUFtQixDQUFDLHNCQUFzQixDQUFDO1FBQ2hELEtBQUssbUJBQW1CLENBQUMsc0JBQXNCLENBQUM7UUFDaEQsS0FBSyxtQkFBbUIsQ0FBQyx1QkFBdUIsQ0FBQztRQUNqRCxLQUFLLG1CQUFtQixDQUFDLHdCQUF3QixDQUFDO1FBQ2xELEtBQUssbUJBQW1CLENBQUMsd0JBQXdCO1lBQy9DLHlCQUNLLEtBQUssRUFDTCxRQUFRLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsT0FBTyxDQUFDLEVBQ3RDLFVBQVUsQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxFQUN2RDtRQUVKO1lBQ0UsT0FBTyxLQUFLLENBQUM7S0FDaEI7QUFDSCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGFmZkxvYWRpbmdTdGF0ZSB9IGZyb20gJ0BkYWZmb2RpbC9jb3JlL3N0YXRlJztcbmltcG9ydCB7IERhZmZDYXJ0IH0gZnJvbSAnQGRhZmZvZGlsL2NhcnQnO1xuXG5pbXBvcnQge1xuICBEYWZmQ2FydEFjdGlvblR5cGVzLFxufSBmcm9tICcuLi8uLi9hY3Rpb25zL3B1YmxpY19hcGknO1xuaW1wb3J0IHsgaW5pdGlhbFN0YXRlIH0gZnJvbSAnLi4vY2FydC1pbml0aWFsLXN0YXRlJztcbmltcG9ydCB7IERhZmZDYXJ0UmVkdWNlclN0YXRlIH0gZnJvbSAnLi4vY2FydC1zdGF0ZS5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgQWN0aW9uVHlwZXMgfSBmcm9tICcuLi9hY3Rpb24tdHlwZXMudHlwZSc7XG5pbXBvcnQgeyBEYWZmQ2FydE9wZXJhdGlvblR5cGUgfSBmcm9tICcuLi9jYXJ0LW9wZXJhdGlvbi10eXBlLmVudW0nO1xuaW1wb3J0IHsgaW5pdGlhbGl6ZUVycm9yQWRkZXIsIGluaXRpYWxpemVFcnJvclJlc2V0dGVyIH0gZnJvbSAnLi4vZXJyb3JzL2Vycm9yLXN0YXRlLWhlbHBlcnMnO1xuaW1wb3J0IHsgaW5pdGlhbGl6ZUxvYWRpbmdTZXR0ZXIgfSBmcm9tICcuLi9sb2FkaW5nL2NhcnQtbG9hZGluZy50eXBlJztcblxuY29uc3QgYWRkRXJyb3IgPSBpbml0aWFsaXplRXJyb3JBZGRlcihEYWZmQ2FydE9wZXJhdGlvblR5cGUuQ2FydCk7XG5jb25zdCByZXNldEVycm9ycyA9IGluaXRpYWxpemVFcnJvclJlc2V0dGVyKERhZmZDYXJ0T3BlcmF0aW9uVHlwZS5DYXJ0KTtcbmNvbnN0IHNldExvYWRpbmcgPSBpbml0aWFsaXplTG9hZGluZ1NldHRlcihEYWZmQ2FydE9wZXJhdGlvblR5cGUuQ2FydCk7XG5cbmV4cG9ydCBmdW5jdGlvbiBjYXJ0UmVkdWNlcjxUIGV4dGVuZHMgRGFmZkNhcnQ+KFxuICBzdGF0ZSA9IGluaXRpYWxTdGF0ZSxcbiAgYWN0aW9uOiBBY3Rpb25UeXBlc1xuKTogRGFmZkNhcnRSZWR1Y2VyU3RhdGU8VD4ge1xuICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgY2FzZSBEYWZmQ2FydEFjdGlvblR5cGVzLlJlc29sdmVDYXJ0QWN0aW9uOlxuICAgIGNhc2UgRGFmZkNhcnRBY3Rpb25UeXBlcy5DYXJ0TG9hZEFjdGlvbjpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAuLi5zZXRMb2FkaW5nKHN0YXRlLmxvYWRpbmcsIERhZmZMb2FkaW5nU3RhdGUuUmVzb2x2aW5nKVxuICAgICAgfTtcblxuICAgIGNhc2UgRGFmZkNhcnRBY3Rpb25UeXBlcy5DYXJ0Q2xlYXJBY3Rpb246XG4gICAgY2FzZSBEYWZmQ2FydEFjdGlvblR5cGVzLkFkZFRvQ2FydEFjdGlvbjpcbiAgICBjYXNlIERhZmZDYXJ0QWN0aW9uVHlwZXMuQ2FydENyZWF0ZUFjdGlvbjpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAuLi5zZXRMb2FkaW5nKHN0YXRlLmxvYWRpbmcsIERhZmZMb2FkaW5nU3RhdGUuTXV0YXRpbmcpXG4gICAgICB9O1xuXG4gICAgY2FzZSBEYWZmQ2FydEFjdGlvblR5cGVzLkNhcnRMb2FkU3VjY2Vzc0FjdGlvbjpcbiAgICBjYXNlIERhZmZDYXJ0QWN0aW9uVHlwZXMuQ2FydENsZWFyU3VjY2Vzc0FjdGlvbjpcbiAgICBjYXNlIERhZmZDYXJ0QWN0aW9uVHlwZXMuQWRkVG9DYXJ0U3VjY2Vzc0FjdGlvbjpcbiAgICBjYXNlIERhZmZDYXJ0QWN0aW9uVHlwZXMuQ2FydENyZWF0ZVN1Y2Nlc3NBY3Rpb246XG4gICAgY2FzZSBEYWZmQ2FydEFjdGlvblR5cGVzLlJlc29sdmVDYXJ0U3VjY2Vzc0FjdGlvbjpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAuLi5yZXNldEVycm9ycyhzdGF0ZS5lcnJvcnMpLFxuICAgICAgICBjYXJ0OiB7XG4gICAgICAgICAgLi4uc3RhdGUuY2FydCxcbiAgICAgICAgICAuLi5hY3Rpb24ucGF5bG9hZFxuICAgICAgICB9LFxuICAgICAgICAuLi5zZXRMb2FkaW5nKHN0YXRlLmxvYWRpbmcsIERhZmZMb2FkaW5nU3RhdGUuQ29tcGxldGUpLFxuICAgICAgfTtcblxuXHRcdGNhc2UgRGFmZkNhcnRBY3Rpb25UeXBlcy5DYXJ0Q3JlYXRlU3VjY2Vzc0FjdGlvbjpcblx0XHRcdHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAuLi5yZXNldEVycm9ycyhzdGF0ZS5lcnJvcnMpLFxuICAgICAgICBjYXJ0OiB7XG4gICAgICAgICAgLi4uaW5pdGlhbFN0YXRlLmNhcnQsXG4gICAgICAgICAgLi4uYWN0aW9uLnBheWxvYWRcbiAgICAgICAgfSxcbiAgICAgICAgLi4uc2V0TG9hZGluZyhzdGF0ZS5sb2FkaW5nLCBEYWZmTG9hZGluZ1N0YXRlLkNvbXBsZXRlKSxcbiAgICAgIH07XG5cdFx0Y2FzZSBEYWZmQ2FydEFjdGlvblR5cGVzLkNhcnRMb2FkRmFpbHVyZUFjdGlvbjpcbiAgICBjYXNlIERhZmZDYXJ0QWN0aW9uVHlwZXMuQ2FydENsZWFyRmFpbHVyZUFjdGlvbjpcbiAgICBjYXNlIERhZmZDYXJ0QWN0aW9uVHlwZXMuQWRkVG9DYXJ0RmFpbHVyZUFjdGlvbjpcbiAgICBjYXNlIERhZmZDYXJ0QWN0aW9uVHlwZXMuQ2FydENyZWF0ZUZhaWx1cmVBY3Rpb246XG4gICAgY2FzZSBEYWZmQ2FydEFjdGlvblR5cGVzLkNhcnRTdG9yYWdlRmFpbHVyZUFjdGlvbjpcbiAgICBjYXNlIERhZmZDYXJ0QWN0aW9uVHlwZXMuUmVzb2x2ZUNhcnRGYWlsdXJlQWN0aW9uOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIC4uLmFkZEVycm9yKHN0YXRlLmVycm9ycywgYWN0aW9uLnBheWxvYWQpLFxuICAgICAgICAuLi5zZXRMb2FkaW5nKHN0YXRlLmxvYWRpbmcsIERhZmZMb2FkaW5nU3RhdGUuQ29tcGxldGUpLFxuICAgICAgfTtcblxuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gc3RhdGU7XG4gIH1cbn1cbiJdfQ==