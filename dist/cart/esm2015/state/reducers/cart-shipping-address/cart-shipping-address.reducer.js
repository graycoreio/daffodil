/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { DaffLoadingState } from '@daffodil/core/state';
import { DaffCartShippingAddressActionTypes, DaffCartAddressActionTypes, } from '../../actions/public_api';
import { initialState } from '../cart-initial-state';
import { DaffCartOperationType } from '../cart-operation-type.enum';
import { initializeErrorAdder, initializeErrorResetter } from '../errors/error-state-helpers';
import { initializeLoadingSetter } from '../loading/cart-loading.type';
/** @type {?} */
const addError = initializeErrorAdder(DaffCartOperationType.ShippingAddress);
/** @type {?} */
const resetErrors = initializeErrorResetter(DaffCartOperationType.ShippingAddress);
/** @type {?} */
const setLoading = initializeLoadingSetter(DaffCartOperationType.ShippingAddress);
/**
 * @template T
 * @param {?=} state
 * @param {?=} action
 * @return {?}
 */
export function cartShippingAddressReducer(state = initialState, action) {
    switch (action.type) {
        case DaffCartShippingAddressActionTypes.CartShippingAddressLoadAction:
            return Object.assign({}, state, setLoading(state.loading, DaffLoadingState.Resolving));
        case DaffCartShippingAddressActionTypes.CartShippingAddressUpdateAction:
        case DaffCartAddressActionTypes.CartAddressUpdateAction:
            return Object.assign({}, state, setLoading(state.loading, DaffLoadingState.Mutating));
        case DaffCartShippingAddressActionTypes.CartShippingAddressLoadSuccessAction:
            return Object.assign({}, state, resetErrors(state.errors), { cart: Object.assign({}, state.cart, { shipping_address: action.payload }) }, setLoading(state.loading, DaffLoadingState.Complete));
        case DaffCartShippingAddressActionTypes.CartShippingAddressUpdateSuccessAction:
        case DaffCartAddressActionTypes.CartAddressUpdateSuccessAction:
            return Object.assign({}, state, resetErrors(state.errors), { cart: Object.assign({}, state.cart, action.payload) }, setLoading(state.loading, DaffLoadingState.Complete));
        case DaffCartShippingAddressActionTypes.CartShippingAddressLoadFailureAction:
        case DaffCartShippingAddressActionTypes.CartShippingAddressUpdateFailureAction:
        case DaffCartAddressActionTypes.CartAddressUpdateFailureAction:
            return Object.assign({}, state, addError(state.errors, action.payload), setLoading(state.loading, DaffLoadingState.Complete));
        default:
            return state;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FydC1zaGlwcGluZy1hZGRyZXNzLnJlZHVjZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZGFmZm9kaWwvY2FydC9zdGF0ZS8iLCJzb3VyY2VzIjpbInJlZHVjZXJzL2NhcnQtc2hpcHBpbmctYWRkcmVzcy9jYXJ0LXNoaXBwaW5nLWFkZHJlc3MucmVkdWNlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFHeEQsT0FBTyxFQUNMLGtDQUFrQyxFQUNsQywwQkFBMEIsR0FDM0IsTUFBTSwwQkFBMEIsQ0FBQztBQUNsQyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFHckQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDcEUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLHVCQUF1QixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDOUYsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sOEJBQThCLENBQUM7O01BRWpFLFFBQVEsR0FBRyxvQkFBb0IsQ0FBQyxxQkFBcUIsQ0FBQyxlQUFlLENBQUM7O01BQ3RFLFdBQVcsR0FBRyx1QkFBdUIsQ0FBQyxxQkFBcUIsQ0FBQyxlQUFlLENBQUM7O01BQzVFLFVBQVUsR0FBRyx1QkFBdUIsQ0FBQyxxQkFBcUIsQ0FBQyxlQUFlLENBQUM7Ozs7Ozs7QUFFakYsTUFBTSxVQUFVLDBCQUEwQixDQUN4QyxLQUFLLEdBQUcsWUFBWSxFQUNwQixNQUFtQjtJQUVuQixRQUFRLE1BQU0sQ0FBQyxJQUFJLEVBQUU7UUFDbkIsS0FBSyxrQ0FBa0MsQ0FBQyw2QkFBNkI7WUFDbkUseUJBQ0ssS0FBSyxFQUNMLFVBQVUsQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFLGdCQUFnQixDQUFDLFNBQVMsQ0FBQyxFQUN4RDtRQUVKLEtBQUssa0NBQWtDLENBQUMsK0JBQStCLENBQUM7UUFDeEUsS0FBSywwQkFBMEIsQ0FBQyx1QkFBdUI7WUFDckQseUJBQ0ssS0FBSyxFQUNMLFVBQVUsQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxFQUN2RDtRQUVKLEtBQUssa0NBQWtDLENBQUMsb0NBQW9DO1lBQzFFLHlCQUNLLEtBQUssRUFDTCxXQUFXLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUM1QixJQUFJLG9CQUNDLEtBQUssQ0FBQyxJQUFJLElBQ2IsZ0JBQWdCLEVBQUUsTUFBTSxDQUFDLE9BQU8sT0FFL0IsVUFBVSxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsZ0JBQWdCLENBQUMsUUFBUSxDQUFDLEVBQ3ZEO1FBRUosS0FBSyxrQ0FBa0MsQ0FBQyxzQ0FBc0MsQ0FBQztRQUMvRSxLQUFLLDBCQUEwQixDQUFDLDhCQUE4QjtZQUM1RCx5QkFDSyxLQUFLLEVBQ0wsV0FBVyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsSUFDNUIsSUFBSSxvQkFDQyxLQUFLLENBQUMsSUFBSSxFQUNWLE1BQU0sQ0FBQyxPQUFPLEtBRWhCLFVBQVUsQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxFQUN2RDtRQUVKLEtBQUssa0NBQWtDLENBQUMsb0NBQW9DLENBQUM7UUFDN0UsS0FBSyxrQ0FBa0MsQ0FBQyxzQ0FBc0MsQ0FBQztRQUMvRSxLQUFLLDBCQUEwQixDQUFDLDhCQUE4QjtZQUM1RCx5QkFDSyxLQUFLLEVBQ0wsUUFBUSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLE9BQU8sQ0FBQyxFQUN0QyxVQUFVLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRSxnQkFBZ0IsQ0FBQyxRQUFRLENBQUMsRUFDdkQ7UUFFSjtZQUNFLE9BQU8sS0FBSyxDQUFDO0tBQ2hCO0FBQ0gsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERhZmZMb2FkaW5nU3RhdGUgfSBmcm9tICdAZGFmZm9kaWwvY29yZS9zdGF0ZSc7XG5pbXBvcnQgeyBEYWZmQ2FydCB9IGZyb20gJ0BkYWZmb2RpbC9jYXJ0JztcblxuaW1wb3J0IHtcbiAgRGFmZkNhcnRTaGlwcGluZ0FkZHJlc3NBY3Rpb25UeXBlcyxcbiAgRGFmZkNhcnRBZGRyZXNzQWN0aW9uVHlwZXMsXG59IGZyb20gJy4uLy4uL2FjdGlvbnMvcHVibGljX2FwaSc7XG5pbXBvcnQgeyBpbml0aWFsU3RhdGUgfSBmcm9tICcuLi9jYXJ0LWluaXRpYWwtc3RhdGUnO1xuaW1wb3J0IHsgRGFmZkNhcnRSZWR1Y2VyU3RhdGUgfSBmcm9tICcuLi9jYXJ0LXN0YXRlLmludGVyZmFjZSc7XG5pbXBvcnQgeyBBY3Rpb25UeXBlcyB9IGZyb20gJy4uL2FjdGlvbi10eXBlcy50eXBlJztcbmltcG9ydCB7IERhZmZDYXJ0T3BlcmF0aW9uVHlwZSB9IGZyb20gJy4uL2NhcnQtb3BlcmF0aW9uLXR5cGUuZW51bSc7XG5pbXBvcnQgeyBpbml0aWFsaXplRXJyb3JBZGRlciwgaW5pdGlhbGl6ZUVycm9yUmVzZXR0ZXIgfSBmcm9tICcuLi9lcnJvcnMvZXJyb3Itc3RhdGUtaGVscGVycyc7XG5pbXBvcnQgeyBpbml0aWFsaXplTG9hZGluZ1NldHRlciB9IGZyb20gJy4uL2xvYWRpbmcvY2FydC1sb2FkaW5nLnR5cGUnO1xuXG5jb25zdCBhZGRFcnJvciA9IGluaXRpYWxpemVFcnJvckFkZGVyKERhZmZDYXJ0T3BlcmF0aW9uVHlwZS5TaGlwcGluZ0FkZHJlc3MpO1xuY29uc3QgcmVzZXRFcnJvcnMgPSBpbml0aWFsaXplRXJyb3JSZXNldHRlcihEYWZmQ2FydE9wZXJhdGlvblR5cGUuU2hpcHBpbmdBZGRyZXNzKTtcbmNvbnN0IHNldExvYWRpbmcgPSBpbml0aWFsaXplTG9hZGluZ1NldHRlcihEYWZmQ2FydE9wZXJhdGlvblR5cGUuU2hpcHBpbmdBZGRyZXNzKTtcblxuZXhwb3J0IGZ1bmN0aW9uIGNhcnRTaGlwcGluZ0FkZHJlc3NSZWR1Y2VyPFQgZXh0ZW5kcyBEYWZmQ2FydD4oXG4gIHN0YXRlID0gaW5pdGlhbFN0YXRlLFxuICBhY3Rpb246IEFjdGlvblR5cGVzXG4pOiBEYWZmQ2FydFJlZHVjZXJTdGF0ZTxUPiB7XG4gIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcbiAgICBjYXNlIERhZmZDYXJ0U2hpcHBpbmdBZGRyZXNzQWN0aW9uVHlwZXMuQ2FydFNoaXBwaW5nQWRkcmVzc0xvYWRBY3Rpb246XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgLi4uc2V0TG9hZGluZyhzdGF0ZS5sb2FkaW5nLCBEYWZmTG9hZGluZ1N0YXRlLlJlc29sdmluZylcbiAgICAgIH07XG5cbiAgICBjYXNlIERhZmZDYXJ0U2hpcHBpbmdBZGRyZXNzQWN0aW9uVHlwZXMuQ2FydFNoaXBwaW5nQWRkcmVzc1VwZGF0ZUFjdGlvbjpcbiAgICBjYXNlIERhZmZDYXJ0QWRkcmVzc0FjdGlvblR5cGVzLkNhcnRBZGRyZXNzVXBkYXRlQWN0aW9uOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIC4uLnNldExvYWRpbmcoc3RhdGUubG9hZGluZywgRGFmZkxvYWRpbmdTdGF0ZS5NdXRhdGluZylcbiAgICAgIH07XG5cbiAgICBjYXNlIERhZmZDYXJ0U2hpcHBpbmdBZGRyZXNzQWN0aW9uVHlwZXMuQ2FydFNoaXBwaW5nQWRkcmVzc0xvYWRTdWNjZXNzQWN0aW9uOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIC4uLnJlc2V0RXJyb3JzKHN0YXRlLmVycm9ycyksXG4gICAgICAgIGNhcnQ6IHtcbiAgICAgICAgICAuLi5zdGF0ZS5jYXJ0LFxuICAgICAgICAgIHNoaXBwaW5nX2FkZHJlc3M6IGFjdGlvbi5wYXlsb2FkXG4gICAgICAgIH0sXG4gICAgICAgIC4uLnNldExvYWRpbmcoc3RhdGUubG9hZGluZywgRGFmZkxvYWRpbmdTdGF0ZS5Db21wbGV0ZSksXG4gICAgICB9O1xuXG4gICAgY2FzZSBEYWZmQ2FydFNoaXBwaW5nQWRkcmVzc0FjdGlvblR5cGVzLkNhcnRTaGlwcGluZ0FkZHJlc3NVcGRhdGVTdWNjZXNzQWN0aW9uOlxuICAgIGNhc2UgRGFmZkNhcnRBZGRyZXNzQWN0aW9uVHlwZXMuQ2FydEFkZHJlc3NVcGRhdGVTdWNjZXNzQWN0aW9uOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIC4uLnJlc2V0RXJyb3JzKHN0YXRlLmVycm9ycyksXG4gICAgICAgIGNhcnQ6IHtcbiAgICAgICAgICAuLi5zdGF0ZS5jYXJ0LFxuICAgICAgICAgIC4uLmFjdGlvbi5wYXlsb2FkXG4gICAgICAgIH0sXG4gICAgICAgIC4uLnNldExvYWRpbmcoc3RhdGUubG9hZGluZywgRGFmZkxvYWRpbmdTdGF0ZS5Db21wbGV0ZSksXG4gICAgICB9O1xuXG4gICAgY2FzZSBEYWZmQ2FydFNoaXBwaW5nQWRkcmVzc0FjdGlvblR5cGVzLkNhcnRTaGlwcGluZ0FkZHJlc3NMb2FkRmFpbHVyZUFjdGlvbjpcbiAgICBjYXNlIERhZmZDYXJ0U2hpcHBpbmdBZGRyZXNzQWN0aW9uVHlwZXMuQ2FydFNoaXBwaW5nQWRkcmVzc1VwZGF0ZUZhaWx1cmVBY3Rpb246XG4gICAgY2FzZSBEYWZmQ2FydEFkZHJlc3NBY3Rpb25UeXBlcy5DYXJ0QWRkcmVzc1VwZGF0ZUZhaWx1cmVBY3Rpb246XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgLi4uYWRkRXJyb3Ioc3RhdGUuZXJyb3JzLCBhY3Rpb24ucGF5bG9hZCksXG4gICAgICAgIC4uLnNldExvYWRpbmcoc3RhdGUubG9hZGluZywgRGFmZkxvYWRpbmdTdGF0ZS5Db21wbGV0ZSksXG4gICAgICB9O1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBzdGF0ZTtcbiAgfVxufVxuIl19