{"version":3,"file":"daffodil-authorizenet-state-testing.js","sources":["ng://@daffodil/authorizenet/state/testing/mock-authorize-net-facade.ts","ng://@daffodil/authorizenet/state/testing/authorize-net-testing.module.ts"],"sourcesContent":["import { Action } from '@ngrx/store';\nimport { BehaviorSubject } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\nimport { DaffAuthorizeNetFacadeInterface } from '@daffodil/authorizenet/state';\nimport { DaffStateError } from '@daffodil/core/state';\n\n@Injectable({providedIn: 'root'})\nexport class MockDaffAuthorizeNetFacade implements DaffAuthorizeNetFacadeInterface {\n  isAcceptJsLoaded$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  loading$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  paymentError$: BehaviorSubject<DaffStateError> = new BehaviorSubject(null);\n  acceptJsLoadError$: BehaviorSubject<DaffStateError> = new BehaviorSubject(null);\n\n  dispatch(action: Action) {};\n}\n","import { NgModule } from '@angular/core';\n\nimport { DaffAuthorizeNetFacade } from '@daffodil/authorizenet/state';\n\nimport { MockDaffAuthorizeNetFacade } from './mock-authorize-net-facade';\n\n@NgModule({\n  providers: [\n\t\t{ provide: DaffAuthorizeNetFacade, useExisting: MockDaffAuthorizeNetFacade }\n\t]\n})\nexport class DaffAuthorizeNetTestingModule {}\n"],"names":[],"mappings":";;;;;;;;AACA;IAMA;QAEE,sBAAiB,GAA6B,IAAI,eAAe,CAAC,KAAK,CAAC,CAAC;QACzE,aAAQ,GAA6B,IAAI,eAAe,CAAC,KAAK,CAAC,CAAC;QAChE,kBAAa,GAAoC,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;QAC3E,uBAAkB,GAAoC,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;KAGjF;;;;;IADC,6CAAQ;;;;IAAR,UAAS,MAAc,KAAI;IAAA,CAAC;;gBAP7B,UAAU,SAAC,EAAC,UAAU,EAAE,MAAM,EAAC;;;qCAPhC;CAOA,IAQC;;;IANC,uDAAyE;;IACzE,8CAAgE;;IAChE,mDAA2E;;IAC3E,wDAAgF;;;;;;;;ACZlF;IAMA;KAK6C;;gBAL5C,QAAQ,SAAC;oBACR,SAAS,EAAE;wBACX,EAAE,OAAO,EAAE,sBAAsB,EAAE,WAAW,EAAE,0BAA0B,EAAE;qBAC5E;iBACD;;IAC2C,oCAAC;CAL7C;;;;;;;;;;;;;;;;;;;"}