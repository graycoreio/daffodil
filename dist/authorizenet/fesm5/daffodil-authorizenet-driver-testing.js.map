{"version":3,"file":"daffodil-authorizenet-driver-testing.js","sources":["ng://@daffodil/authorizenet/driver/testing/drivers/authorize-net.service.ts","ng://@daffodil/authorizenet/driver/testing/drivers/authorize-net-driver.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nimport { DaffAuthorizeNetTokenRequest } from '@daffodil/authorizenet';\nimport { DaffAuthorizeNetService } from '@daffodil/authorizenet/driver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffTestingAuthorizeNetService implements DaffAuthorizeNetService {\n\n  generateToken(tokenRequest: DaffAuthorizeNetTokenRequest): Observable<any> {\n    return of({ paymentInfo: 'paymentInfo' });\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DaffAuthorizeNetDriver } from '@daffodil/authorizenet/driver';\n\nimport { DaffTestingAuthorizeNetService } from './authorize-net.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ]\n})\nexport class DaffTestingAuthorizeNetDriverModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DaffTestingAuthorizeNetDriverModule,\n      providers: [\n        {\n          provide: DaffAuthorizeNetDriver,\n          useExisting: DaffTestingAuthorizeNetService\n        }\n      ]\n    };\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;AAAA;IAMA;KAQC;;;;;IAHC,sDAAa;;;;IAAb,UAAc,YAA0C;QACtD,OAAO,EAAE,CAAC,EAAE,WAAW,EAAE,aAAa,EAAE,CAAC,CAAC;KAC3C;;gBAPF,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;yCARD;CAMA;;;;;;ACNA;IAMA;KAiBC;;;;IAXQ,2CAAO;;;IAAd;QACE,OAAO;YACL,QAAQ,EAAE,mCAAmC;YAC7C,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,sBAAsB;oBAC/B,WAAW,EAAE,8BAA8B;iBAC5C;aACF;SACF,CAAC;KACH;;gBAhBF,QAAQ,SAAC;oBACR,OAAO,EAAE;wBACP,YAAY;qBACb;iBACF;;IAaD,0CAAC;CAjBD;;;;;;;;;;;;;;;;;;;;;;;;"}