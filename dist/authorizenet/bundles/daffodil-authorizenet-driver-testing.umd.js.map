{"version":3,"file":"daffodil-authorizenet-driver-testing.umd.js","sources":["ng://@daffodil/authorizenet/driver/testing/drivers/authorize-net.service.ts","ng://@daffodil/authorizenet/driver/testing/drivers/authorize-net-driver.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nimport { DaffAuthorizeNetTokenRequest } from '@daffodil/authorizenet';\nimport { DaffAuthorizeNetService } from '@daffodil/authorizenet/driver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffTestingAuthorizeNetService implements DaffAuthorizeNetService {\n\n  generateToken(tokenRequest: DaffAuthorizeNetTokenRequest): Observable<any> {\n    return of({ paymentInfo: 'paymentInfo' });\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DaffAuthorizeNetDriver } from '@daffodil/authorizenet/driver';\n\nimport { DaffTestingAuthorizeNetService } from './authorize-net.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ]\n})\nexport class DaffTestingAuthorizeNetDriverModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DaffTestingAuthorizeNetDriverModule,\n      providers: [\n        {\n          provide: DaffAuthorizeNetDriver,\n          useExisting: DaffTestingAuthorizeNetService\n        }\n      ]\n    };\n  }\n}\n"],"names":["of","Injectable","DaffAuthorizeNetDriver","NgModule","CommonModule"],"mappings":";;;;;;;;;;AAAA;QAMA;SAQC;;;;;QAHC,sDAAa;;;;QAAb,UAAc,YAA0C;YACtD,OAAOA,OAAE,CAAC,EAAE,WAAW,EAAE,aAAa,EAAE,CAAC,CAAC;SAC3C;;oBAPFC,eAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;6CARD;KAMA;;;;;;ACNA;QAMA;SAiBC;;;;QAXQ,2CAAO;;;QAAd;YACE,OAAO;gBACL,QAAQ,EAAE,mCAAmC;gBAC7C,SAAS,EAAE;oBACT;wBACE,OAAO,EAAEC,6BAAsB;wBAC/B,WAAW,EAAE,8BAA8B;qBAC5C;iBACF;aACF,CAAC;SACH;;oBAhBFC,aAAQ,SAAC;wBACR,OAAO,EAAE;4BACPC,mBAAY;yBACb;qBACF;;QAaD,0CAAC;KAjBD;;;;;;;;;;;;;"}