{"version":3,"file":"daffodil-authorizenet-state-testing.umd.js","sources":["ng://@daffodil/authorizenet/state/testing/mock-authorize-net-facade.ts","ng://@daffodil/authorizenet/state/testing/authorize-net-testing.module.ts"],"sourcesContent":["import { Action } from '@ngrx/store';\nimport { BehaviorSubject } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\nimport { DaffAuthorizeNetFacadeInterface } from '@daffodil/authorizenet/state';\nimport { DaffStateError } from '@daffodil/core/state';\n\n@Injectable({providedIn: 'root'})\nexport class MockDaffAuthorizeNetFacade implements DaffAuthorizeNetFacadeInterface {\n  isAcceptJsLoaded$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  loading$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  paymentError$: BehaviorSubject<DaffStateError> = new BehaviorSubject(null);\n  acceptJsLoadError$: BehaviorSubject<DaffStateError> = new BehaviorSubject(null);\n\n  dispatch(action: Action) {};\n}\n","import { NgModule } from '@angular/core';\n\nimport { DaffAuthorizeNetFacade } from '@daffodil/authorizenet/state';\n\nimport { MockDaffAuthorizeNetFacade } from './mock-authorize-net-facade';\n\n@NgModule({\n  providers: [\n\t\t{ provide: DaffAuthorizeNetFacade, useExisting: MockDaffAuthorizeNetFacade }\n\t]\n})\nexport class DaffAuthorizeNetTestingModule {}\n"],"names":["BehaviorSubject","Injectable","NgModule","DaffAuthorizeNetFacade"],"mappings":";;;;;;;;;;AACA;QAMA;YAEE,sBAAiB,GAA6B,IAAIA,oBAAe,CAAC,KAAK,CAAC,CAAC;YACzE,aAAQ,GAA6B,IAAIA,oBAAe,CAAC,KAAK,CAAC,CAAC;YAChE,kBAAa,GAAoC,IAAIA,oBAAe,CAAC,IAAI,CAAC,CAAC;YAC3E,uBAAkB,GAAoC,IAAIA,oBAAe,CAAC,IAAI,CAAC,CAAC;SAGjF;;;;;QADC,6CAAQ;;;;QAAR,UAAS,MAAc,KAAI;QAAA,CAAC;;oBAP7BC,eAAU,SAAC,EAAC,UAAU,EAAE,MAAM,EAAC;;;yCAPhC;KAOA,IAQC;;;QANC,uDAAyE;;QACzE,8CAAgE;;QAChE,mDAA2E;;QAC3E,wDAAgF;;;;;;;;ACZlF;QAMA;SAK6C;;oBAL5CC,aAAQ,SAAC;wBACR,SAAS,EAAE;4BACX,EAAE,OAAO,EAAEC,4BAAsB,EAAE,WAAW,EAAE,0BAA0B,EAAE;yBAC5E;qBACD;;QAC2C,oCAAC;KAL7C;;;;;;;;;;;;;"}