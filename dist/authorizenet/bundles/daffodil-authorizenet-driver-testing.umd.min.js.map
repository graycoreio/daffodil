{"version":3,"sources":["ng://@daffodil/authorizenet/driver/testing/drivers/authorize-net.service.ts","ng://@daffodil/authorizenet/driver/testing/drivers/authorize-net-driver.module.ts"],"names":["DaffTestingAuthorizeNetService","prototype","generateToken","tokenRequest","of","paymentInfo","Injectable","args","providedIn","DaffTestingAuthorizeNetDriverModule","forRoot","ngModule","providers","provide","DaffAuthorizeNetDriver","useExisting","NgModule","imports","CommonModule"],"mappings":"qpBAAA,IAAAA,EAAA,WAMA,SAAAA,YAKEA,EAAAC,UAAAC,cAAA,SAAcC,GACZ,OAAOC,EAAAA,GAAG,CAAEC,YAAa,qCAN5BC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,kHAPd,GCAAC,EAAA,WAMA,SAAAA,KAiBA,OAXSA,EAAAC,QAAP,WACE,MAAO,CACLC,SAAUF,EACVG,UAAW,CACT,CACEC,QAASC,EAAAA,uBACTC,YAAaf,0BAZtBgB,EAAAA,SAAQT,KAAA,CAAC,CACRU,QAAS,CACPC,EAAAA,kBAeJT,EAvBA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nimport { DaffAuthorizeNetTokenRequest } from '@daffodil/authorizenet';\nimport { DaffAuthorizeNetService } from '@daffodil/authorizenet/driver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffTestingAuthorizeNetService implements DaffAuthorizeNetService {\n\n  generateToken(tokenRequest: DaffAuthorizeNetTokenRequest): Observable<any> {\n    return of({ paymentInfo: 'paymentInfo' });\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DaffAuthorizeNetDriver } from '@daffodil/authorizenet/driver';\n\nimport { DaffTestingAuthorizeNetService } from './authorize-net.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ]\n})\nexport class DaffTestingAuthorizeNetDriverModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DaffTestingAuthorizeNetDriverModule,\n      providers: [\n        {\n          provide: DaffAuthorizeNetDriver,\n          useExisting: DaffTestingAuthorizeNetService\n        }\n      ]\n    };\n  }\n}\n"]}