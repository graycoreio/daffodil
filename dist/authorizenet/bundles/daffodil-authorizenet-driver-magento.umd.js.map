{"version":3,"file":"daffodil-authorizenet-driver-magento.umd.js","sources":["ng://@daffodil/authorizenet/driver/magento/transformers/authorize-net-transformer.ts","ng://@daffodil/authorizenet/driver/magento/authorize-net.service.ts","ng://@daffodil/authorizenet/driver/magento/authorize-net-payment-id.ts","ng://@daffodil/authorizenet/driver/magento/authorize-net.module.ts"],"sourcesContent":["import { DaffAuthorizeNetTokenRequest, AuthorizeNetResponse, AuthorizeNetRequest } from '@daffodil/authorizenet';\nimport { DaffAuthorizeNetConfig } from '@daffodil/authorizenet/driver';\n\nimport { MagentoAuthorizeNetPayment } from '../models/authorize-net-payment';\n\nexport function transformMagentoAuthorizeNetRequest(request: DaffAuthorizeNetTokenRequest, config: DaffAuthorizeNetConfig): AuthorizeNetRequest {\n\treturn {\n\t\tcardData: {\n\t\t\tcardNumber: request.creditCard.cardnumber,\n\t\t\tcardCode: request.creditCard.securitycode,\n\t\t\tmonth: request.creditCard.month,\n\t\t\tyear: request.creditCard.year\n\t\t},\n\t\tauthData: {\n\t\t\tclientKey: config.clientKey,\n\t\t\tapiLoginID: config.apiLoginID\n\t\t}\n\t};\n};\n\nexport function transformMagentoAuthorizeNetResponse(response: AuthorizeNetResponse, ccNumber: string): MagentoAuthorizeNetPayment {\n\treturn {\n\t\tcode: 'authorizenet_acceptjs',\n\t\tauthorizenet_acceptjs: {\n\t\t\tcc_last_4: parseInt(ccNumber.slice(12), 10),\n\t\t\topaque_data_descriptor: 'COMMON.ACCEPT.INAPP.PAYMENT',\n\t\t\topaque_data_value: response.opaqueData.dataValue\n\t\t}\n\t}\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DaffAuthorizeNetTokenRequest, AuthorizeNetResponse, DaffAcceptJsLoadingService } from '@daffodil/authorizenet';\nimport { DaffAuthorizeNetService, DaffAuthorizeNetConfigToken, DaffAuthorizeNetConfig, DAFF_AUTHORIZE_NET_ERROR_CODE_MAP } from '@daffodil/authorizenet/driver';\n\nimport { transformMagentoAuthorizeNetRequest, transformMagentoAuthorizeNetResponse } from './transformers/authorize-net-transformer';\nimport { MagentoAuthorizeNetPayment } from './models/authorize-net-payment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaffMagentoAuthorizeNetService implements DaffAuthorizeNetService {\n\n\tconstructor(\n    @Inject(DaffAuthorizeNetConfigToken) public config: DaffAuthorizeNetConfig,\n    private acceptJsLoader: DaffAcceptJsLoadingService\n\t) {}\n\n\tgenerateToken(paymentTokenRequest: DaffAuthorizeNetTokenRequest): Observable<MagentoAuthorizeNetPayment> {\n\t\treturn new Observable(observer =>\n\t\t\tthis.acceptJsLoader.getAccept().dispatchData(transformMagentoAuthorizeNetRequest(paymentTokenRequest, this.config), (response: AuthorizeNetResponse) => {\n\t\t\t\tif (response.messages.resultCode === 'Error') {\n          const MappedError = DAFF_AUTHORIZE_NET_ERROR_CODE_MAP[response.messages.message[0].code];\n          const message = response.messages.message[0].code + ': ' + response.messages.message[0].text;\n\n\t\t\t\t\tthrow MappedError ? new MappedError(message) : new Error(message);\n\t\t\t\t} else {\n\t\t\t\t\tobserver.next(transformMagentoAuthorizeNetResponse(response, paymentTokenRequest.creditCard.cardnumber));\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}\n","export const MAGENTO_AUTHORIZE_NET_PAYMENT_ID = 'authorizenet_acceptjs';\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DaffAuthorizeNetConfig, DaffAuthorizeNetConfigToken, DaffAuthorizeNetDriver, DaffAuthorizeNetPaymentId } from '@daffodil/authorizenet/driver';\n\nimport { DaffMagentoAuthorizeNetService } from './authorize-net.service';\nimport { MAGENTO_AUTHORIZE_NET_PAYMENT_ID } from './authorize-net-payment-id';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ]\n})\nexport class DaffMagentoAuthorizeNetDriverModule {\n  static forRoot(config: DaffAuthorizeNetConfig): ModuleWithProviders {\n\t\tif(!config.apiLoginID || !config.clientKey) {\n\t\t\tthrow Error('You must provide an apiLoginID and clientKey for Authorize.Net configuration.')\n\t\t}\n\n    return {\n      ngModule: DaffMagentoAuthorizeNetDriverModule,\n      providers: [\n\t\t\t\t{\n\t\t\t\t\tprovide: DaffAuthorizeNetConfigToken,\n\t\t\t\t\tuseValue: config\n\t\t\t\t},\n        {\n          provide: DaffAuthorizeNetDriver,\n\t\t\t\t\tuseExisting: DaffMagentoAuthorizeNetService\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tprovide: DaffAuthorizeNetPaymentId,\n\t\t\t\t\tuseValue: MAGENTO_AUTHORIZE_NET_PAYMENT_ID\n\t\t\t\t}\n      ]\n    };\n  }\n}\n"],"names":["Observable","DAFF_AUTHORIZE_NET_ERROR_CODE_MAP","Injectable","Inject","DaffAuthorizeNetConfigToken","DaffAcceptJsLoadingService","DaffAuthorizeNetDriver","DaffAuthorizeNetPaymentId","NgModule","CommonModule"],"mappings":"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"}