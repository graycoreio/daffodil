# specific branch build with batching
trigger:
  branches:
    include:
    - master
    - develop
pr:
  autoCancel: true
  branches:
    include:
    - master
    - develop
variables:
  npm_config_cache: $(Pipeline.Workspace)/.npm

stages:
- stage: Daffodil_CI
  displayName: Daffodil CI
  jobs: 
    - job: Lint
      displayName: Lint
      pool:
        vmImage: "Ubuntu 16.04"
      strategy:
        matrix:
          node_10_x:
            node_version: 10.x
      steps:
        - template: ./templates/setup-node.yml

        - script: npx lerna run lint
          displayName: Lint

    - job: Build_And_Test
      displayName: Build And Test
      pool:
        vmImage: "Ubuntu 16.04"
      strategy:
        matrix:
          node_10_x:
            node_version: 10.x
      steps:
        - template: ./templates/setup-node.yml

        - script: npx lerna run build && npx lerna run test
          displayName: Build & Test

        - template: ./templates/codeclimate.yml

        - script: npx lerna run reportcoverage
          displayName: Generate Coverage Report

        - script: |
            ./cc-test-reporter sum-coverage coverage/cc.*.json
            ./cc-test-reporter -r $token upload-coverage
          displayName: Report Code Climate
          env:
            token: $(CODECLIMATE_TOKEN_DAFFODIL)

        - task: CopyFiles@2
          displayName: Prepare Artifact Staging Directory
          inputs:
            sourceFolder: dist
            contents: '**/*'
            targetFolder: $(Build.ArtifactStagingDirectory)

        - task: PublishBuildArtifacts@1
          displayName: "Publish Daff.io Serverless Artifact"
          inputs:
            pathtoPublish: '$(Build.ArtifactStagingDirectory)/apps/daffio'
            artifactName: 'daffio-serverless'
            parallel: true
            parallelCount: 8
- stage: deploy_release
  displayName: Preview Environment
  jobs: 
    - job: deploy_preview
      displayName: Deploy Serverless Preview 
      variables:
      - group: now-deployment-token
      pool:
        vmImage: "Ubuntu 16.04"
      strategy:
        matrix:
          node_10_x:
            node_version: 10.x
      steps:
      - template: ./templates/setup-node.yml

      - task: DownloadBuildArtifacts@0
        inputs:
          artifactName: 'daffio-serverless'

      - script: npx now --scope="graycoreio" --token=$token
        workingDirectory: '$(System.ArtifactsDirectory)/daffio-serverless'
        displayName: 'Deploy to Now'
        env:
          token: $(NOW_DEPLOYMENT_TOKEN)


