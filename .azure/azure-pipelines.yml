# specific branch build with batching
trigger:
  branches:
    include:
    - master
    - develop
pr:
  autoCancel: true
  branches:
    include:
    - master
    - develop
variables:
  npm_config_cache: $(Pipeline.Workspace)/.npm
  node_version: 10.x

stages:
- stage: Daffodil_CI
  displayName: Daffodil CI
  jobs:
    # - job: Lint
    #   displayName: Lint
    #   pool:
    #     vmImage: "Ubuntu 16.04"
    #   strategy:
    #     matrix:
    #       node_10_x:
    #         node_version: 10.x
    #   steps:
    #     - template: ./templates/setup-node.yml

    #     - script: npx lerna run lint
    #       displayName: Lint

    - job: Build_And_Test
      displayName: Build And Test
      pool:
        vmImage: "Ubuntu 16.04"
      strategy:
        matrix:
          node_10_x:
            node_version: 10.x
      steps:
        - template: ./templates/setup-node.yml

        - script: npx lerna run test
          displayName: Build & Test

        - template: ./templates/codeclimate.yml

        - script: npx lerna run reportcoverage
          displayName: Generate Coverage Report

        - script: |
            ls -la coverage
            ./cc-test-reporter sum-coverage coverage/cc.*.json
            ls -la coverage
            cat coverage/codeclimate.json
            ./cc-test-reporter -r $token upload-coverage
          displayName: Report Code Climate
          env:
            token: $(CODECLIMATE_TOKEN_DAFFODIL)

#         - task: CopyFiles@2
#           displayName: Prepare Artifact Staging Directory
#           inputs:
#             sourceFolder: dist
#             contents: '**/*'
#             targetFolder: $(Build.ArtifactStagingDirectory)

#         - task: PublishBuildArtifacts@1
#           displayName: "Publish Daff.io Serverless Artifact"
#           inputs:
#             pathtoPublish: '$(Build.ArtifactStagingDirectory)/apps/daffio'
#             artifactName: 'daffio-serverless'
#             parallel: true
#             parallelCount: 8
# - stage: preview
#   displayName: Preview Environment
#   jobs:
#   - job: deploy_daffio_preview
#     displayName: Deploy Daff.io
#     condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
#     variables:
#     - group: daffio-now
#     - group: daffio-preview-now
#     steps:
#     - template: ./templates/setup-node.yml
#     - template: ./templates/now-deployment.yml
#       parameters:
#         artifactName: daffio-serverless
#         token: $(NOW_DEPLOYMENT_TOKEN)
#         nowOrg: $(NOW_ORG)
#         nowProjectId: $(DAFFIO_PREVIEW_NOW_PROJECTID)
# - stage: next
#   displayName: Daff.io Next Environment
#   jobs:
#   - job: deploy_next
#     displayName: Deploy
#     condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/develop'))
#     variables:
#     - group: daffio-now
#     - group: daffio-next-now
#     steps:
#     - template: ./templates/setup-node.yml
#     - template: ./templates/now-deployment.yml
#       parameters:
#         artifactName: daffio-serverless
#         token: $(NOW_DEPLOYMENT_TOKEN)
#         nowOrg: $(NOW_ORG)
#         nowProjectId: $(DAFFIO_NEXT_NOW_PROJECTID)
#         prod: true



