# specific branch build with batching
trigger:
  branches:
    include:
    - master
    - develop
pr:
  autoCancel: true
  branches:
    include:
    - master
    - develop
jobs:
  - job: Lint
    pool:
      vmImage: "Ubuntu 16.04"
    strategy:
      matrix:
        node_8_x:
          node_version: 8.x
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: $(node_version)
        displayName: Set Node Version

      - script: npm install -g lerna @angular/cli
        displayName: Install Build Tools

      - script: npm install
        displayName: Install Dependencies
        condition: ne(variables['CacheRestored'], 'true')

      - script: lerna run lint
        displayName: Lint
  - job: Build_And_Test
    pool:
      vmImage: "Ubuntu 16.04"
    strategy:
      matrix:
        node_8_x:
          node_version: 8.x
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: $(node_version)
        displayName: Set Node Version

      - script: npm install -g lerna @angular/cli
        displayName: Install Build Tools

      - script: npm install
        displayName: Install Dependencies
        condition: ne(variables['CacheRestored'], 'true')

      - script: lerna run build && lerna run test
        displayName: Build & Test
  - job: Daffio_Docker_Build
    displayName: Docker Build Daffio
    dependsOn: 'Build_And_Test'
    pool:
      vmImage: "Ubuntu 16.04"
    steps:
      - task: Docker@1
        displayName: Container registry login
        inputs:
          command: login
          azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
          azureContainerRegistry: $(azureContainerRegistry)
      - task: Docker@1
        displayName: Build image
        inputs:
          command: build
          azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
          azureContainerRegistry: $(azureContainerRegistry)
          dockerFile: apps/daffio/docker/Dockerfile
          imageName: daffodil/daffio
          useDefaultContext: false
          buildContext: './'
      - task: Docker@1
        displayName: Tag image
        inputs:
          command: tag
          azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
          azureContainerRegistry: $(azureContainerRegistry)
          imageName: $(azureContainerRegistry)/daffodil/daffio:latest
          arguments: $(azureContainerRegistry)/daffodil/daffio:$(Build.SourceVersion)
      - task: Docker@1
        displayName: Push image
        inputs:
          command: push
          azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
          azureContainerRegistry: $(azureContainerRegistry)
          imageName: daffodil/daffio:$(Build.SourceVersion)
      - task: Docker@1
        displayName: Container registry logout
        inputs:
          command: logout
          azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
          azureContainerRegistry: $(azureContainerRegistry)